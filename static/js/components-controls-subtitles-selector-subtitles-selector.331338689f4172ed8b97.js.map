{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/SubtitlesSelector/SubtitlesSelector.js","webpack:///./src/replay/components/controls/SubtitlesSelector/SubtitlesSelector.mdx","webpack:///./src/replay/components/generic/Selector/helpers.js","webpack:///./src/replay/components/generic/Selector/Selector.js","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","sanitizedPrefix","classNameArray","i","arguments","length","undefined","push","join","isDefined","item","hydrateClassNames","_ref","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","apply","concat","_toConsumableArray","getBoundingEventCoordinates","evt","element","extractedEvent","domRect","currentTarget","getBoundingClientRect","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","buildId","_len","str","_key","s","buildLabel","label","_ref$kind","kind","_ref$language","language","textTrackToItem","track","noTrack","id","data","origin","SubtitlesSelector","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","setProperties","selectedTextTrack","state","noSubtitlesItem","noSubtitlesLabel","React","_this$props","textTracks","currentTextTrack","toggleContent","items","selectedItem","selectedIndex","react__WEBPACK_IMPORTED_MODULE_0__","_generic_Selector_Selector__WEBPACK_IMPORTED_MODULE_1__","itemMapper","className","onSelect","handleSelect","reverseOrder","expandedToggleContent","collapsedToggleContent","MDXContent","_possibleConstructorReturn","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","ShowCase","Type","SimpleTable","Footnote","languag","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_4__","render","_SubtitlesSelector__WEBPACK_IMPORTED_MODULE_3__","react_feather__WEBPACK_IMPORTED_MODULE_5__","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_7__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_6__","rows","Element","Class name","Generic class name","States","Parent","selectItemClasses","selectorItem","selectItemSelectedClasses","selectorItemSelected","SelectorItem","_React$Component","_getPrototypeOf2","args","onRef","index","handleClick","_inherits","value","defaultItemClassName","isSelected","canReceiveFocus","selectedClassName","tabIndex","react","role","aria-selected","ref","handleRef","onClick","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","focusElement","upwards","isReverseOrder","baseElement","elements","slice","reverse","document","activeElement","j","focus","selectCollapsedClasses","selectorCollapsed","selector","selectExpandedClasses","selectorExpanded","selectItemsContainerClasses","selectorItemsContainer","Selector","Selector_classCallCheck","Selector_getPrototypeOf","Selector_defineProperty","Selector_assertThisInitialized","toggleElement","isOn","setState","isExpanded","itemElement","focusableItems","itemData","helpers_SelectorItem","handleItemRef","itemClassName","renderedItems","map","renderSelectorItem","itemsContainerClassNames","toggleButtonClasses","toggleButtonOff","selectorToggle","selectorToggleOff","toggleButtonOn","selectorToggleOn","onMouseLeave","handleMouseLeave","ToggleButton","onToggle","handleToggle","onToggleRef","toggledOffContent","toggledOnContent","useDefaultClassNaming","selectOffClasses","toggleButton","selectOnClasses","toggleClassName","content","aria-pressed","title","convertPropsToState","style","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","row","values","headers","header","formatContent"],"mappings":"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","file":"static/js/components-controls-subtitles-selector-subtitles-selector.a9729aa8.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport Selector from '../../generic/Selector/Selector';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { AvailableTrack } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The list of text tracks available for selection. */\n  textTracks?: Array<AvailableTrack>,\n  /** ⇘ The currently displaying text track. Must be strict equal one of the items in the text track list. Set to null if no subtitles are displayed. */\n  currentTextTrack?: AvailableTrack,\n  /** ⇗ When one item is clicked, this callback is invoked with an object having an selectedTextTrack property with the textTrack object corresponding to the selection. */\n  setProperties?: ({ selectedTextTrack: ?AvailableTrack }) => void,\n  /** The label to use on the selector option for not displaying subtitles. */\n  noSubtitlesLabel: string,\n  /** Element displayed in the control bar for expanding/collapsing the selector items. */\n  toggleContent: React.Node\n};\n\ntype State = {\n  noSubtitlesItem: { noTrack: true, label: string }\n};\n\nconst className = 'subtitles-selector';\n\nconst defaultKind = 'subtitles';\n\nconst buildId = (...str: Array<?string>) => str.filter(s => s).join('.');\n// TODO: Consider injectable label mapper, and also for audio selector and bitrate selector.\nconst buildLabel = ({ label, kind = defaultKind, language = 'unknown' }: AvailableTrack) =>\n  label || (kind !== defaultKind ? `[${language}] ${kind}` : `[${language}]`) || '';\n\nconst textTrackToItem = (track: AvailableTrack | { noTrack: true, label: string }) => {\n  if (track.noTrack) {\n    const label = track.label || '';\n    return {\n      id: 0,\n      label,\n      data: track\n    };\n  } else {\n    return {\n      id: track.id || buildId(track.language, track.kind, track.origin) || track.label,\n      label: buildLabel(track),\n      data: track\n    };\n  }\n};\n\nclass SubtitlesSelector extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['textTracks', 'currentTextTrack'];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      noSubtitlesItem: { noTrack: true, label: this.props.noSubtitlesLabel }\n    };\n  }\n\n  handleSelect = (item: any) => {\n    if (this.props.setProperties) {\n      if (item.noTrack) {\n        this.props.setProperties({ selectedTextTrack: null });\n      } else {\n        this.props.setProperties({ selectedTextTrack: item });\n      }\n    }\n  };\n\n  render() {\n    const { textTracks, currentTextTrack, label, toggleContent, classNamePrefix } = this.props;\n    if (Array.isArray(textTracks) && textTracks.length > 0) {\n      // TODO: Consider optimization, memoizing the array and all props involved in rendering.\n      const items = [this.state.noSubtitlesItem].concat(textTracks);\n      let selectedItem = this.state.noSubtitlesItem;\n      if (currentTextTrack) {\n        const selectedIndex = textTracks.indexOf(currentTextTrack) + 1; // Nasty detail. Including \"no subtitles\" when counting.\n        if (selectedIndex > 0) {\n          selectedItem = items[selectedIndex];\n        }\n      }\n      return (\n        <Selector\n          items={items}\n          itemMapper={textTrackToItem}\n          classNamePrefix={classNamePrefix}\n          className={className}\n          selectedItem={selectedItem}\n          label={label}\n          onSelect={this.handleSelect}\n          reverseOrder={true}\n          expandedToggleContent={toggleContent}\n          collapsedToggleContent={toggleContent}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default SubtitlesSelector;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport SubtitlesSelector from './SubtitlesSelector';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport { Type } from 'react-feather';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"subtitlesselector\"}}>{`SubtitlesSelector`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar widget for controlling subtitle display and language selections.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The subtitles selector lists the stream's available text tracks, and controls what track to display, if any. The control is only rendered if there are one or more text tracks.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The subtitles selector uses the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Selector />`}</MDXTag>{` generic component, and is implemented similar patterns to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<AudioSelector />`}</MDXTag>{` and partly `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<QualitySelector />`}</MDXTag>{`. Upon clicking on one selector item representing a track, it invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ selectedTextTrack: track })`}</MDXTag>{` where `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`track`}</MDXTag>{` is the clicked selector item. The selector also contains one item for turning off display of subtitles. This item must be given a label through the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`noSubtitlesLabel`}</MDXTag>{` prop. If the \"No subtitles\" item is selected, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ selectedTextTrack: null })`}</MDXTag>{` is invoked.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'() => {\\n  const textTracks = [\\n    { label: \\'Finnish\\', language: \\'fi\\', kind: \\'subtitles\\' },\\n    { label: \\'German\\', language: \\'de\\', kind: \\'subtitles\\' },\\n    { label: \\'Spanish\\', languag: \\'es\\', kind: \\'subtitles\\' },\\n  ]\\n  return (\\n    <ShowCase\\n      height=\\\"90px\\\"\\n      render={({ setProperties, currentTextTrack }) => (\\n        <SubtitlesSelector\\n          setProperties={setProperties}\\n          currentTextTrack={currentTextTrack}\\n          noSubtitlesLabel=\\\"No subtitles\\\"\\n          toggleContent={<Type />}\\n          textTracks={textTracks}\\n        />\\n      )}\\n    />\\n  )\\n}'} __scope={{props: this ? this.props : props,SubtitlesSelector,ShowCase,Type,SimpleTable,Footnote}}>\n  {() => {\n    const textTracks = [\n        { label: 'Finnish' , language: 'fi', kind: 'subtitles' }, \n        { label: 'German' , language: 'de', kind: 'subtitles' },\n        { label: 'Spanish', languag: 'es', kind: 'subtitles' }\n      ];\n    return (\n      <ShowCase height=\"90px\" render={({ setProperties, currentTextTrack }) => (\n        <SubtitlesSelector \n          setProperties={setProperties}\n          currentTextTrack={currentTextTrack}\n          noSubtitlesLabel=\"No subtitles\"\n          toggleContent={<Type/>}\n          textTracks={textTracks}\n        />\n      )}/>\n    );\n  }}\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={SubtitlesSelector}/>\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'subtitles-selector',\n  'Generic class name': 'selector',\n  'States': 'collapsed, expanded',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'selector-toggle',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-on, toggled-off',\n  'Parent': '.subtitles-selector'\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-toggle'\n},{\n  'Element': 'div',\n  'Class name': 'selector-items',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.subtitles-selector'\n },{\n  'Element': 'div (0..n)',\n  'Class name': 'selector-item',\n  'Generic class name': '',\n  'States': 'selected',\n  'Parent': '.selector-items'\n},{\n  'Element': 'div (0..n)',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-item'\n }]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\nimport type { CommonGenericProps, Id } from '../../common';\n\nexport type ItemData = {\n  label: string,\n  id?: Id,\n  data?: any\n};\n\ntype SelectorItemProps = CommonGenericProps & {\n  item: ItemData,\n  index: number,\n  isSelected: boolean,\n  canReceiveFocus: boolean,\n  defaultItemClassName: string,\n  selectedClassName: string,\n  onSelect?: any => void,\n  onRef: (?HTMLElement, number) => void\n};\n\nconst selectItemClasses = classes => classes.selectorItem;\nconst selectItemSelectedClasses = classes => classes.selectorItemSelected || classes.selectorItem;\n\nexport class SelectorItem extends React.Component<SelectorItemProps> {\n  handleRef = (element: ?HTMLElement) => {\n    this.props.onRef(element, this.props.index);\n  };\n\n  handleClick = () => this.props.onSelect && this.props.onSelect(this.props.item.data);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const {\n      className,\n      classNamePrefix,\n      classes,\n      defaultItemClassName,\n      item,\n      isSelected,\n      canReceiveFocus,\n      selectedClassName\n    } = this.props;\n    const { label } = item;\n    const classNames = hydrateClassNames({\n      classes,\n      classNamePrefix,\n      selectClasses: isSelected ? selectItemSelectedClasses : selectItemClasses,\n      classNames: [className, defaultItemClassName, isSelected ? selectedClassName : null]\n    });\n    const tabIndex = canReceiveFocus ? 0 : undefined;\n    return (\n      <div\n        role=\"option\"\n        aria-selected={isSelected}\n        className={classNames}\n        ref={this.handleRef}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        tabIndex={tabIndex}>\n        <div tabIndex={-1}>{label}</div>\n      </div>\n    );\n  }\n}\n\nexport function focusElement(\n  upwards: boolean,\n  isReverseOrder: boolean,\n  items: Array<?HTMLElement>,\n  baseElement: ?HTMLElement\n) {\n  const elements = (isReverseOrder ? items.slice(0).reverse() : items).concat(baseElement);\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i] === document.activeElement) {\n      if (upwards) {\n        if (i > 0) {\n          for (let j = i - 1; j >= 0; j--) {\n            const element = elements[j];\n            if (element) {\n              element.focus();\n              return element;\n            }\n          }\n        }\n      } else {\n        if (i < elements.length - 1) {\n          for (let j = i + 1; j < elements.length; j++) {\n            const element = elements[j];\n            if (element) {\n              element.focus();\n              return element;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, hydrateClassNames } from '../../common';\nimport ToggleButton from '../ToggleButton/ToggleButton';\nimport { focusElement, SelectorItem } from './helpers';\nimport type { ItemData } from './helpers';\n\ntype Props = CommonGenericProps & {\n  items: Array<any>,\n  selectedItem?: any,\n  reverseOrder?: boolean,\n  itemClassName?: string,\n  collapsedToggleContent?: React.Node,\n  expandedToggleContent?: React.Node,\n  label?: string,\n  itemMapper: any => ItemData,\n  onSelect?: any => void\n};\n\ntype SelectorState = {\n  isExpanded: boolean\n};\n\nconst defaultSelectorClassName = 'selector';\nconst expandToggleClassName = 'selector-toggle';\nconst selectorItemsClassName = 'selector-items';\nconst expandedClassName = 'expanded';\nconst collapsedClassName = 'collapsed';\nconst defaultItemClassName = 'selector-item';\nconst selectedClassName = 'selected';\n\nconst selectCollapsedClasses = classes => classes.selectorCollapsed || classes.selector;\nconst selectExpandedClasses = classes => classes.selectorExpanded || classes.selector;\nconst selectItemsContainerClasses = classes => classes.selectorItemsContainer;\n\nclass Selector extends React.Component<Props, SelectorState> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  focusableItems: Array<?HTMLElement> = [];\n  toggleElement: ?HTMLElement = null;\n\n  onToggleRef = (toggleElement: ?HTMLElement) => {\n    this.toggleElement = toggleElement;\n  };\n\n  handleToggle = (isOn: boolean) => this.setState({ isExpanded: isOn });\n\n  handleItemRef = (itemElement: ?HTMLElement, index: number) => {\n    this.focusableItems[index] = itemElement;\n  };\n\n  renderSelectorItem = (item: any, index: number) => {\n    const itemData = this.props.itemMapper(item);\n    return (\n      <SelectorItem\n        key={itemData.id}\n        item={itemData}\n        index={index}\n        onSelect={this.props.onSelect}\n        onRef={this.handleItemRef}\n        isSelected={item === this.props.selectedItem}\n        canReceiveFocus={this.state.isExpanded}\n        selectedClassName={selectedClassName}\n        defaultItemClassName={defaultItemClassName}\n        className={this.props.itemClassName}\n        classes={this.props.classes}\n        classNamePrefix={this.props.classNamePrefix}\n      />\n    );\n  };\n\n  handleKeyDown = (keyboardEvent: KeyboardEvent) => {\n    switch (keyboardEvent.key) {\n      case 'ArrowUp':\n      case 'Up':\n        keyboardEvent.preventDefault();\n        return;\n      case 'ArrowDown':\n      case 'Down':\n        if (this.state.isExpanded) {\n          keyboardEvent.preventDefault();\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (this.state.isExpanded) {\n      if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'Up') {\n        keyboardEvent.preventDefault();\n        focusElement(true, this.props.reverseOrder || false, this.focusableItems, this.toggleElement);\n      }\n      if (keyboardEvent.key === 'ArrowDown' || keyboardEvent.key === 'Down') {\n        keyboardEvent.preventDefault();\n        const focusedElement = focusElement(\n          false,\n          this.props.reverseOrder || false,\n          this.focusableItems,\n          this.toggleElement\n        );\n        if (focusedElement === this.toggleElement) {\n          this.setState({ isExpanded: false });\n        }\n      }\n    } else {\n      if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'Up') {\n        keyboardEvent.preventDefault();\n        this.setState({ isExpanded: true });\n      }\n    }\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ isExpanded: false });\n  };\n\n  render() {\n    const {\n      className,\n      classNamePrefix,\n      classes,\n      items,\n      collapsedToggleContent,\n      expandedToggleContent,\n      reverseOrder,\n      label\n    } = this.props;\n    const renderedItems = items\n      ? reverseOrder\n        ? items.map(this.renderSelectorItem).reverse()\n        : items.map(this.renderSelectorItem)\n      : null;\n    const classNames = hydrateClassNames({\n      classes,\n      classNamePrefix,\n      selectClasses: this.state.isExpanded ? selectExpandedClasses : selectCollapsedClasses,\n      classNames: [className, defaultSelectorClassName, this.state.isExpanded ? expandedClassName : collapsedClassName]\n    });\n    const itemsContainerClassNames = hydrateClassNames({\n      classes,\n      selectClasses: selectItemsContainerClasses,\n      classNamePrefix,\n      classNames: [selectorItemsClassName]\n    });\n    const toggleButtonClasses = classes\n      ? {\n          toggleButtonOff: classes.selectorToggle || classes.selectorToggleOff,\n          toggleButtonOn: classes.selectorToggleOn\n        }\n      : null;\n\n    return (\n      <div\n        className={classNames}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        onMouseLeave={this.handleMouseLeave}>\n        <ToggleButton\n          isOn={this.state.isExpanded}\n          className={expandToggleClassName}\n          classNamePrefix={classNamePrefix}\n          classes={toggleButtonClasses}\n          label={label}\n          onToggle={this.handleToggle}\n          onRef={this.onToggleRef}\n          toggledOffContent={collapsedToggleContent}\n          toggledOnContent={expandedToggleContent}\n        />\n        <div role=\"listbox\" className={itemsContainerClassNames}>\n          {renderedItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Selector;\n","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}