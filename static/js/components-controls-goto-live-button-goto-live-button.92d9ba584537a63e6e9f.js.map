{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/GotoLiveButton/GotoLiveButton.js","webpack:///./src/replay/components/controls/GotoLiveButton/GotoLiveButton.mdx","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","sanitizedPrefix","classNameArray","i","arguments","length","undefined","push","join","isDefined","item","hydrateClassNames","_ref","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","apply","concat","_toConsumableArray","getBoundingEventCoordinates","evt","element","extractedEvent","domRect","currentTarget","getBoundingClientRect","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","GotoLiveButton","value","_this","props","setProperties","isAtLiveEdge","React","_this$props","this","playMode","isAtLiveEdgeContent","isNotAtLiveEdgeContent","label","react__WEBPACK_IMPORTED_MODULE_0__","_generic_ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_1__","isOn","className","onToggle","handleToggle","toggledOnContent","toggledOffContent","displayName","MDXContent","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","ShowCase","SimpleTable","Footnote","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_4__","render","_GotoLiveButton__WEBPACK_IMPORTED_MODULE_3__","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_6__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_5__","rows","Element","Class name","Generic class name","States","Parent","selectOffClasses","toggleButtonOff","toggleButton","selectOnClasses","toggleButtonOn","ToggleButton","handleClick","onRef","toggleClassName","content","role","aria-pressed","title","onClick","onKeyUp","handleKeyUp","onKeyDown","handleKeyDown","ref","tabIndex","useDefaultClassNaming","convertPropsToState","state","_defineProperty","_assertThisInitialized","setState","style","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","formatContent"],"mappings":"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","file":"static/js/components-controls-goto-live-button-goto-live-button.a1ffae9f.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ToggleButton from '../../generic/ToggleButton/ToggleButton';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The current timeshift state of the playback. False means timeshifting. */\n  isAtLiveEdge?: boolean,\n  /** ⇘︎ The stream mode. Must be 'livedvr' in order for this control to render. */\n  playMode?: PlayMode,\n  /** ⇗ When the button is clicked, and the isAtLiveEdge prop is false, this callback is invoked with an object containing an isAtLiveEdge property with the value true. */\n  setProperties?: ({ isAtLiveEdge: true }) => void,\n  /** The button content to be displayed while isAtLiveEdge is true. */\n  isAtLiveEdgeContent: React.Node,\n  /** The button content to be displayed while isAtLiveEdge is false, i.e. when timeshifting. */\n  isNotAtLiveEdgeContent: React.Node\n};\n\nconst className = 'goto-live-button';\n\nclass GotoLiveButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['isAtLiveEdge', 'playMode'];\n\n  handleToggle = (value: boolean) => {\n    if (value && this.props.setProperties) {\n      this.props.setProperties({ isAtLiveEdge: true });\n    }\n  };\n\n  render() {\n    const { playMode, isAtLiveEdge, isAtLiveEdgeContent, isNotAtLiveEdgeContent, label, classNamePrefix } = this.props;\n    return playMode === 'livedvr' ? (\n      <ToggleButton\n        classNamePrefix={classNamePrefix}\n        isOn={isAtLiveEdge}\n        className={className}\n        label={label}\n        onToggle={this.handleToggle}\n        toggledOnContent={isAtLiveEdgeContent}\n        toggledOffContent={isNotAtLiveEdgeContent}\n      />\n    ) : null;\n  }\n}\n\nGotoLiveButton.displayName = 'GotoLiveButton';\nexport default GotoLiveButton;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport GotoLiveButton from './GotoLiveButton'\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"gotolivebutton\"}}>{`GotoLiveButton`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar button for resuming after timeshifting to the live edge of the stream. Only rendering/relevant for live DVR streams.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The GotoLiveButton is a toggle button, but it can only toggle if the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isAtLiveEdge`}</MDXTag>{` is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`false`}</MDXTag>{`. When clicking the button in this case, it invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ isAtLiveEdge: true })`}</MDXTag>{`. If the button prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isAtLiveEdge`}</MDXTag>{` is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`, the button can present a different state, and clicking it has no effect.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<ShowCase\\n  render={({ setProperties, isAtLiveEdge }) => (\\n    <GotoLiveButton\\n      isAtLiveEdge={isAtLiveEdge}\\n      isAtLiveEdgeContent=\\\"Live\\\"\\n      isNotAtLiveEdgeContent=\\\"Go to live\\\"\\n      playMode=\\\"livedvr\\\"\\n      setProperties={setProperties}\\n    />\\n  )}\\n/>'} __scope={{props: this ? this.props : props,GotoLiveButton,ShowCase,SimpleTable,Footnote}}>\n  <ShowCase render={({ setProperties, isAtLiveEdge }) => (\n    <GotoLiveButton isAtLiveEdge={isAtLiveEdge} isAtLiveEdgeContent=\"Live\" isNotAtLiveEdgeContent=\"Go to live\" playMode=\"livedvr\" setProperties={setProperties} />\n  )}/>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={GotoLiveButton} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'goto-live-button',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-off, toggled-on',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.goto-live-button'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}