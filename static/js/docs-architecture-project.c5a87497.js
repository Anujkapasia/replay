(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./src/replay/docs/architecture/project.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function p(e){return(p="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function c(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,n){return!n||"object"!==p(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var d=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=s(this,l(n).call(this,e))).layout=null,t}var t,a,p;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;m(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"project-details"}},"Project details"),o.a.createElement(r.MDXTag,{name:"p",components:n},"For developers contributing to this project, or extending, forking, or consuming the player or components library."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"packagejsonyarn-commands"}},"package.json/yarn commands"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://yarnpkg.com/"}},"Yarn")," is used instead of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm"),". The workflows are not tested with ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm"),"."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Run ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn install")," before continuing with any of the commands below."),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"start-dev-server-with-demo-app-for-development"}},"Start dev server with demo app for development"),o.a.createElement(r.MDXTag,{name:"p",components:n},"The default port is set to be ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"3033"),"."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn start\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"run-flow-type-checks"}},"Run Flow type checks"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn flow\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"run-tests"}},"Run tests"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn test\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"build-component-library-with-docs-prepared-for-productionnpm-publish"}},"Build component library with docs, prepared for production/npm publish"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn build:lib\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"start-x0-docs-server-for-writing-or-displaying-live-component-code-examples"}},"Start x0 docs server for writing or displaying live component code examples"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn docz:dev\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"library-build-subtasks"}},"Library build subtasks"),o.a.createElement(r.MDXTag,{name:"p",components:n},"These are run as part of the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn build:lib")," command:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"build:es5\nbuild:flow\nbuild:css\ndocz:build\n")),o.a.createElement(r.MDXTag,{name:"h4",components:n,props:{id:"create-react-app-legacy-commands"}},"Create-React-App legacy commands"),o.a.createElement(r.MDXTag,{name:"p",components:n},"These have no purpose for this project."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"yarn build\nyarn eject\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"using-flow-types"}},"Using Flow types"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Component prop types are specified with Flow. And quite importantly, the video streamer API is defined with Flow types. These types are essential to understanding how controls should operate on the video playback, and for creating different VideoStreamer components wrapping different playback technologies."),o.a.createElement(r.MDXTag,{name:"p",components:n},"However, Flow is not perfect, and there are examples of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"// $FlowFixMe")," in the code. It cannot be guaranteed that all typing is protecting against incorrect API usage."),o.a.createElement(r.MDXTag,{name:"p",components:n},"All code being part of the exposed library should be annotated with Flow types, with the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"// @flow"),' "directive" at the start of the file.'),o.a.createElement(r.MDXTag,{name:"p",components:n},"The npm package is set up so that consumers automatically will have the Flow types of Replay, components, and other exposed parts, available."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"before-commit"}},"Before commit"),o.a.createElement(r.MDXTag,{name:"p",components:n},"If contributing to the repo, the following commands should be run and complete without errors before committing changes:"),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},'prettier --write "src/**/*.js"'),". Will reformat code."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"yarn flow")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"yarn test")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"yarn eslint src/replay")," should display no warnings.")),o.a.createElement(r.MDXTag,{name:"p",components:n},"These steps will be improved and automated in the future. The three QA-related commands are also part of the automated build, which means pushing modifications will lead to failing builds if errors are not fixed before push."))}}])&&c(t.prototype,a),p&&c(t,p),n}();d.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=docs-architecture-project.d4e10310804155f7099b.js.map