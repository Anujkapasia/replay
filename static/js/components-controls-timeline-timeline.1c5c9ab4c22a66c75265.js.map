{"version":3,"sources":["webpack:///./src/replay/components/controls/TimeDisplay/TimeDisplay.js","webpack:///./src/replay/components/controls/Timeline/Timeline.js","webpack:///./src/replay/components/controls/Timeline/Timeline.mdx","webpack:///./src/replay/components/controls/TimelineInformation/TimelineInformation.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_common__WEBPACK_IMPORTED_MODULE_1__","formatAndLimitTime","time","negativeMark","zeroAndBelow","arguments","length","undefined","formatTime","Math","TimeDisplay","_ref","date","position","duration","absolutePosition","playMode","_ref$liveDisplayMode","liveDisplayMode","label","positionLabel","durationLabel","_ref$classNamePrefix","clockTimeLabel","classNamePrefix","defaultClassNamePrefix","className","prefixClassNames","title","Date","isNaN","getTime","formatClockTime","streamStateKeysForObservation","displayName","Timeline","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","setProperties","setState","isDragging","timeoutId","clearTimeout","setTimeout","state","React","_this$props","isSeeking","children","handleContent","trackContent","reduceDragGlitch","_generic_Slider_Slider__WEBPACK_IMPORTED_MODULE_2__","value","maxValue","isUpdateBlocked","onValueChange","handleSliderChange","onDrag","handleDrag","trackClassName","handleClassName","MDXContent","_possibleConstructorReturn","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","TimelineInformation","ShowCase","SimpleTable","Footnote","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_6__","height","render","Fragment","_Timeline__WEBPACK_IMPORTED_MODULE_3__","_TimelineInformation_TimelineInformation__WEBPACK_IMPORTED_MODULE_5__","_TimeDisplay_TimeDisplay__WEBPACK_IMPORTED_MODULE_4__","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_8__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_7__","rows","Element","Class name","Generic class name","States","Parent","absoluteStartPosition","previewValue","isPointerInside","timeDisplay","getTimeDisplay","left","toFixed","prefixedClassName","prefixedTooltipClassNames","style","concat","convertPropsToState","Object","keys","forEach","key","width","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","join","headers","header","i","j","content","formatContent"],"mappings":"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","file":"static/js/components-controls-timeline-timeline.21de337d.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport type { CommonProps } from '../../common';\nimport { defaultClassNamePrefix, formatClockTime, formatTime, prefixClassNames } from '../../common';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { ObservingControlStaticProps } from '../../player/PlayerController/ControllerContext';\n\nexport type LiveDisplayMode = 'clock-time' | 'live-offset';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The relative playback position, used for on demand position and timeshift offset display. */\n  position?: number,\n  /** ⇘︎ The duration of the stream, used for on demand position and timeshift offset display. */\n  duration?: number,\n  /** ⇘︎ The clock time, used for live streams and DVR streams when liveDisplayMode is set to 'live-offset'. */\n  absolutePosition?: ?Date,\n  /** ⇘︎ Play mode is used to decide what times to display. */\n  playMode?: PlayMode,\n  /** When set to 'live-offset', DVR times will be displayed as offsets from the live edge. Default is 'clock-time'. */\n  liveDisplayMode?: LiveDisplayMode,\n  negativeMark?: string,\n  positionLabel?: string,\n  durationLabel?: string,\n  clockTimeLabel?: string\n};\n\ntype TimeDisplayType = React.StatelessFunctionalComponent<Props> & ObservingControlStaticProps;\n\nconst className = 'time-display';\nconst positionClassName = 'time-display-position';\nconst durationClassName = 'time-display-duration';\nconst clockTimeClassName = 'time-display-clock-time';\nconst noDurationClassName = 'time-display-no-duration';\n\nconst isReasonableDateTime = date => date instanceof Date && !isNaN(date.getTime()) && date.getTime() > 1514761200000;\n\nconst formatAndLimitTime = (time: ?number, negativeMark?: string, zeroAndBelow: boolean = false) =>\n  formatTime(time == null ? 0 : Math[zeroAndBelow ? 'min' : 'max'](0, time), negativeMark);\n\nconst TimeDisplay: TimeDisplayType = ({\n  position,\n  duration,\n  absolutePosition,\n  playMode,\n  liveDisplayMode = 'clock-time',\n  negativeMark,\n  label,\n  positionLabel,\n  durationLabel,\n  clockTimeLabel,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  if (playMode === 'ondemand') {\n    return (\n      <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n        <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n          {formatAndLimitTime(position, negativeMark)}\n        </span>\n        <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n          {formatAndLimitTime(duration, negativeMark)}\n        </span>\n      </div>\n    );\n  } else {\n    if ((liveDisplayMode === 'live-offset' && playMode === 'livedvr') || !isReasonableDateTime(absolutePosition)) {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n            {formatAndLimitTime((position || duration || 0) - (duration || 0), negativeMark, true)}\n          </span>\n          {playMode === 'livedvr' && (\n            <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n              {formatAndLimitTime(duration, negativeMark)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className, noDurationClassName)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, clockTimeClassName)} title={positionLabel}>\n            {formatClockTime(absolutePosition)}\n          </span>\n        </div>\n      );\n    }\n  }\n};\n\nTimeDisplay.streamStateKeysForObservation = ['position', 'duration', 'absolutePosition', 'playMode'];\nTimeDisplay.displayName = 'TimeDisplay';\n\nexport default TimeDisplay;\n","// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport Slider from '../../generic/Slider/Slider';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The current playback position in seconds (with decimals). A value between 0 and duration. */\n  position?: number,\n  /** ⇘︎ The stream's duration or seekable range in seconds (with decimals). */\n  duration?: number,\n  /** ⇘︎ True if a seeking operation is ongoing. This prop is used by the component to avoid glitching while dragging. */\n  isSeeking?: boolean,\n  /** Elements that will display on top of the timeline slider track, but below the timeline handle. */\n  children?: React.Node,\n  /** Can be set for custom graphics or content in the slider handle. */\n  handleContent?: React.Node,\n  /** Can be set for custom graphics or content representing the slider track. */\n  trackContent?: React.Node,\n  /** ⇗ If the volume slider handle position is changed, this callback is invoked with { position: newPosition } */\n  setProperties?: ({ position: number }) => void,\n  /** If set to false, glitches after dragging completes will occur, while the stream reports a position before seeking is performed. When true glitches are prevented by activating a timer for a small time after dragging has completed.*/\n  reduceDragGlitch?: boolean\n};\n\ntype State = {\n  isDragging: boolean\n};\n\nconst className = 'timeline';\nconst trackClassName = 'timeline-track';\nconst handleClassName = 'timeline-handle';\n\nclass Timeline extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix,\n    reduceDragGlitch: true\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['position', 'duration', 'isSeeking'];\n\n  timeoutId: ?TimeoutID;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isDragging: false };\n  }\n\n  handleSliderChange = (position: number) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ position });\n    }\n  };\n\n  handleDrag = () => {\n    this.setState({ isDragging: true });\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isDragging: false });\n      this.timeoutId = null;\n    }, 800);\n  };\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  render() {\n    const {\n      position,\n      duration,\n      isSeeking,\n      label,\n      classNamePrefix,\n      children,\n      handleContent,\n      trackContent,\n      reduceDragGlitch\n    } = this.props;\n    return (\n      <Slider\n        label={label}\n        value={position}\n        maxValue={duration}\n        isUpdateBlocked={isSeeking || this.state.isDragging}\n        handleContent={handleContent}\n        trackContent={trackContent}\n        onValueChange={this.handleSliderChange}\n        onDrag={reduceDragGlitch ? this.handleDrag : undefined}\n        classNamePrefix={classNamePrefix}\n        className={className}\n        trackClassName={trackClassName}\n        handleClassName={handleClassName}>\n        {children}\n      </Slider>\n    );\n  }\n}\n\nTimeline.displayName = 'Timeline';\nexport default Timeline;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Timeline from './Timeline';\nimport TimeDisplay from '../TimeDisplay/TimeDisplay';\nimport TimelineInformation from '../TimelineInformation/TimelineInformation';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timeline-control\"}}>{`Timeline control`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Slider/>`}</MDXTag>{` displaying the playback progress from start to end. It can be used for seeking in the stream.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Technically, it presenting the seekable range of the open stream, and changing the handle position by click or dragging, changes the playback position (i.e. seeks). It operates both on live DVR streams and on demand streams. Regardless of the stream type, the video streamer exposes stream state properties for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`position`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`duration`}</MDXTag>{`. Correspondingly, the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Timeline/>`}</MDXTag>{` component has two props with the same names. The rule for those values is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{` ≤ `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`position`}</MDXTag>{` ≤ `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`duration`}</MDXTag>{`. I.e. the position is relative to the first available position in the seekable range, and the value will not exceed the duration value.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When playing live streams with a sliding DVR window, the relative position and duration will stay constant, and the slider handle will be positioned at the same location. If playing at the live edge, the handle will stay at the right end of the slider, also for live stream events where the DVR window expands, i.e. duration increases.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When dragging/clicking the slider, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ position value })`}</MDXTag>{` will be called with the value corresponding to the relative position according to the rule above.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The component accepts children for putting more content on the timeline. The slider handle will typically stay on top. For now, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimelineInformation/>`}</MDXTag>{` is such relevant extra content. Chapters and markers might be added later.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<ShowCase\\n  height=\\\"20px\\\"\\n  render={({ setProperties, position }) => {\\n    const duration = 333\\n    return (\\n      <>\\n        <Timeline\\n          position={position}\\n          duration={duration}\\n          setProperties={setProperties}\\n        >\\n          <TimelineInformation playMode=\\\"ondemand\\\" duration={duration} />\\n        </Timeline>\\n        <TimeDisplay\\n          position={position}\\n          duration={duration}\\n          playMode=\\\"ondemand\\\"\\n        />\\n      </>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Timeline,TimeDisplay,TimelineInformation,ShowCase,SimpleTable,Footnote}}>\n  <ShowCase height=\"20px\" render={({ setProperties, position }) => {\n    const duration = 333;\n    return (\n      <>\n        <Timeline position={position} duration={duration} setProperties={setProperties}>\n           <TimelineInformation playMode=\"ondemand\" duration={duration} />\n        </Timeline>\n        <TimeDisplay position={position} duration={duration} playMode=\"ondemand\" />\n      </>\n    );  \n  }}/>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`The example includes also `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimeDisplay/>`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimelineInformation/>`}</MDXTag>{`, in order to illustrate the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`position`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`duration`}</MDXTag>{` values and changes.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Timeline} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'timeline',\n  'Generic class name': 'slider',\n  'States': 'dragging',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'timeline-track',\n  'Generic class name': 'slider-track',\n  'States': '',\n  'Parent': '.timeline'\n},{\n  'Element': 'div',\n  'Class name': 'timeline-handle',\n  'Generic class name': 'slider-handle',\n  'States': '',\n  'Parent': '.timeline'\n}]}/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"styling-requirements\"}}>{`Styling requirements`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The styling of the timeline slider needs to follow some rules in order to get sensible responses from user interactions:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The draggable or clickable area will be the size of the track element, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.timeline-track`}</MDXTag>{`. Remember how margin, borders, padding, box-sizing, etc. affects the size.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.timeline-handle`}</MDXTag>{` positioning (between 0 and 100 percent from left or bottom) should align with the track size and placement.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The styling needs to take into account the size of the handle itself. The component will not subtract the size of the component in its positioning and value calculations.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The handle should ideally be shifted by half its width to the left for horizontal sliders, or half its height down for vertical sliders. It is the center coordinate that should count.`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { formatTime, formatClockTime, prefixClassNames, defaultClassNamePrefix } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\n\ntype Props = CommonProps & {\n  /** ⇘︎ For previewing live clock time positions, this should contain the date/time corresponding to the start of the timeline.. */\n  absoluteStartPosition?: Date,\n  /** ⇘︎ Used for selecting relative position or clock time display. */\n  playMode?: PlayMode,\n  /** ⇘︎ Used for computing the tooltip position. */\n  duration?: number,\n  /** The relative preview position, passed automatically from a Timeline parent. */\n  previewValue?: ?number,\n  /** The Timeline parent manages mouse pointer state, and passes to this component. If true, the tooltip is displayed. */\n  isPointerInside?: boolean,\n  /** Passed from the Timeline parent. When dragging, it is set to true, and the tooltip displays. */\n  isDragging?: ?boolean\n};\n\nconst className = 'timeline-information';\nconst tooltipClassName = 'timeline-tooltip';\nconst tooltipVisibleClassName = 'timeline-tooltip-visible';\n\nconst getTimeDisplay = (playMode: ?PlayMode, absoluteStartPosition: ?Date, previewValue: ?number): string => {\n  if (previewValue != null) {\n    if (playMode === 'livedvr' && absoluteStartPosition instanceof Date && absoluteStartPosition.getTime() > 0) {\n      return formatClockTime(new Date(absoluteStartPosition.getTime() + previewValue * 1000));\n    } else {\n      return formatTime(previewValue);\n    }\n  } else {\n    return '';\n  }\n};\n\nclass TimelineInformation extends React.Component<Props> {\n  static streamStateKeysForObservation: StreamStateKeysForObservation = [\n    'absoluteStartPosition',\n    'duration',\n    'playMode'\n  ];\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  render() {\n    const {\n      absoluteStartPosition,\n      duration,\n      playMode,\n      previewValue,\n      isDragging,\n      isPointerInside,\n      classNamePrefix\n    } = this.props;\n    const timeDisplay = getTimeDisplay(playMode, absoluteStartPosition, previewValue);\n    const left = (((previewValue || 0) / (duration || 1)) * 100).toFixed(2);\n    const prefixedClassName = prefixClassNames(classNamePrefix, className);\n    const prefixedTooltipClassNames = prefixClassNames(\n      classNamePrefix,\n      tooltipClassName,\n      isDragging || isPointerInside ? tooltipVisibleClassName : null\n    );\n    return (\n      <div className={prefixedClassName}>\n        <div className={prefixedTooltipClassNames} style={{ left: `${left}%` }}>\n          {timeDisplay}\n        </div>\n      </div>\n    );\n  }\n}\n\nTimelineInformation.displayName = 'TimelineInformation';\nexport default TimelineInformation;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}