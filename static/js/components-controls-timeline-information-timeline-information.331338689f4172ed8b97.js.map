{"version":3,"sources":["webpack:///./src/replay/components/controls/Timeline/Timeline.js","webpack:///./src/replay/components/controls/TimelineInformation/TimelineInformation.js","webpack:///./src/replay/components/controls/TimelineInformation/TimelineInformation.mdx","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["Timeline","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","position","setProperties","setState","isDragging","timeoutId","clearTimeout","setTimeout","state","React","_this$props","duration","isSeeking","label","classNamePrefix","children","handleContent","trackContent","reduceDragGlitch","react__WEBPACK_IMPORTED_MODULE_0__","_generic_Slider_Slider__WEBPACK_IMPORTED_MODULE_2__","value","maxValue","isUpdateBlocked","onValueChange","handleSliderChange","onDrag","handleDrag","undefined","className","trackClassName","handleClassName","defaultClassNamePrefix","TimelineInformation","absoluteStartPosition","playMode","previewValue","isPointerInside","timeDisplay","Date","getTime","formatClockTime","formatTime","getTimeDisplay","left","toFixed","prefixedClassName","prefixClassNames","prefixedTooltipClassNames","style","concat","MDXContent","_possibleConstructorReturn","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","ShowCase","SimpleTable","Footnote","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_5__","height","render","_ref","_Timeline_Timeline__WEBPACK_IMPORTED_MODULE_4__","_TimelineInformation__WEBPACK_IMPORTED_MODULE_3__","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_7__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_6__","rows","Element","Class name","Generic class name","States","Parent","convertPropsToState","Object","keys","forEach","key","width","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","join","length","headers","header","i","j","content","formatContent"],"mappings":"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","file":"static/js/components-controls-timeline-information-timeline-information.4e1a5cd6.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport Slider from '../../generic/Slider/Slider';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The current playback position in seconds (with decimals). A value between 0 and duration. */\n  position?: number,\n  /** ⇘︎ The stream's duration or seekable range in seconds (with decimals). */\n  duration?: number,\n  /** ⇘︎ True if a seeking operation is ongoing. This prop is used by the component to avoid glitching while dragging. */\n  isSeeking?: boolean,\n  /** Elements that will display on top of the timeline slider track, but below the timeline handle. */\n  children?: React.Node,\n  /** Can be set for custom graphics or content in the slider handle. */\n  handleContent?: React.Node,\n  /** Can be set for custom graphics or content representing the slider track. */\n  trackContent?: React.Node,\n  /** ⇗ If the volume slider handle position is changed, this callback is invoked with { position: newPosition } */\n  setProperties?: ({ position: number }) => void,\n  /** If set to false, glitches after dragging completes will occur, while the stream reports a position before seeking is performed. When true glitches are prevented by activating a timer for a small time after dragging has completed.*/\n  reduceDragGlitch?: boolean\n};\n\ntype State = {\n  isDragging: boolean\n};\n\nconst className = 'timeline';\nconst trackClassName = 'timeline-track';\nconst handleClassName = 'timeline-handle';\n\nclass Timeline extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix,\n    reduceDragGlitch: true\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['position', 'duration', 'isSeeking'];\n\n  timeoutId: ?TimeoutID;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isDragging: false };\n  }\n\n  handleSliderChange = (position: number) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ position });\n    }\n  };\n\n  handleDrag = () => {\n    this.setState({ isDragging: true });\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isDragging: false });\n      this.timeoutId = null;\n    }, 800);\n  };\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  render() {\n    const {\n      position,\n      duration,\n      isSeeking,\n      label,\n      classNamePrefix,\n      children,\n      handleContent,\n      trackContent,\n      reduceDragGlitch\n    } = this.props;\n    return (\n      <Slider\n        label={label}\n        value={position}\n        maxValue={duration}\n        isUpdateBlocked={isSeeking || this.state.isDragging}\n        handleContent={handleContent}\n        trackContent={trackContent}\n        onValueChange={this.handleSliderChange}\n        onDrag={reduceDragGlitch ? this.handleDrag : undefined}\n        classNamePrefix={classNamePrefix}\n        className={className}\n        trackClassName={trackClassName}\n        handleClassName={handleClassName}>\n        {children}\n      </Slider>\n    );\n  }\n}\n\nexport default Timeline;\n","// @flow\nimport * as React from 'react';\nimport { formatTime, formatClockTime, prefixClassNames, defaultClassNamePrefix } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\n\ntype Props = CommonProps & {\n  /** ⇘︎ For previewing live clock time positions, this should contain the date/time corresponding to the start of the timeline.. */\n  absoluteStartPosition?: Date,\n  /** ⇘︎ Used for selecting relative position or clock time display. */\n  playMode?: PlayMode,\n  /** ⇘︎ Used for computing the tooltip position. */\n  duration?: number,\n  /** The relative preview position, passed automatically from a Timeline parent. */\n  previewValue?: ?number,\n  /** The Timeline parent manages mouse pointer state, and passes to this component. If true, the tooltip is displayed. */\n  isPointerInside?: boolean,\n  /** Passed from the Timeline parent. When dragging, it is set to true, and the tooltip displays. */\n  isDragging?: ?boolean\n};\n\nconst className = 'timeline-information';\nconst tooltipClassName = 'timeline-tooltip';\nconst tooltipVisibleClassName = 'timeline-tooltip-visible';\n\nconst getTimeDisplay = (playMode: ?PlayMode, absoluteStartPosition: ?Date, previewValue: ?number): string => {\n  if (previewValue != null) {\n    if (playMode === 'livedvr' && absoluteStartPosition instanceof Date && absoluteStartPosition.getTime() > 0) {\n      return formatClockTime(new Date(absoluteStartPosition.getTime() + previewValue * 1000));\n    } else {\n      return formatTime(previewValue);\n    }\n  } else {\n    return '';\n  }\n};\n\nclass TimelineInformation extends React.Component<Props> {\n  static streamStateKeysForObservation: StreamStateKeysForObservation = [\n    'absoluteStartPosition',\n    'duration',\n    'playMode'\n  ];\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  render() {\n    const {\n      absoluteStartPosition,\n      duration,\n      playMode,\n      previewValue,\n      isDragging,\n      isPointerInside,\n      classNamePrefix\n    } = this.props;\n    const timeDisplay = getTimeDisplay(playMode, absoluteStartPosition, previewValue);\n    const left = (((previewValue || 0) / (duration || 1)) * 100).toFixed(2);\n    const prefixedClassName = prefixClassNames(classNamePrefix, className);\n    const prefixedTooltipClassNames = prefixClassNames(\n      classNamePrefix,\n      tooltipClassName,\n      isDragging || isPointerInside ? tooltipVisibleClassName : null\n    );\n    return (\n      <div className={prefixedClassName}>\n        <div className={prefixedTooltipClassNames} style={{ left: `${left}%` }}>\n          {timeDisplay}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimelineInformation;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport TimelineInformation from './TimelineInformation';\nimport Timeline from '../Timeline/Timeline';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timelineinformation-component\"}}>{`TimelineInformation component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Position preview tooltip for timeline. When the mouse pointer is over the timeline, displays the corresponding stream position or time-of-day clock time for the pointer position.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This component is used as a child to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Timeline/>`}</MDXTag>{` component. It gets a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`previewValue`}</MDXTag>{` prop set by the parent Timeline, containing a relative position between 0 and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`duration`}</MDXTag>{` prop value. The parent control is responsible for tracking mouse positions, and to report the target seek position while dragging. Like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimeDisplay/>`}</MDXTag>{`, the tooltip presents a clock time preview in the tooltip for live streams. For this, it needs the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`absoluteStartPosition`}</MDXTag>{` of the stream to be specified.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The tooltip only displays if at least one of the props `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isPointerInside`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isDragging`}</MDXTag>{` is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{` by the parent Timeline.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<ShowCase\\n  height=\\\"20px\\\"\\n  render={({ setProperties, position }) => {\\n    const duration = 333\\n    return (\\n      <Timeline\\n        position={position}\\n        duration={duration}\\n        setProperties={setProperties}\\n      >\\n        <TimelineInformation playMode=\\\"ondemand\\\" duration={duration} />\\n      </Timeline>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,TimelineInformation,Timeline,ShowCase,SimpleTable,Footnote}}>\n  <ShowCase height=\"20px\" render={({ setProperties, position }) => {\n    const duration = 333;\n    return (\n      <Timeline position={position} duration={duration} setProperties={setProperties}>\n        <TimelineInformation playMode=\"ondemand\" duration={duration} />\n      </Timeline>\n    );  \n  }}/>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`The component is here shown within a timeline.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={TimelineInformation} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'timeline-information',\n  'Generic class name': '',\n  'States': '',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'timeline-tooltip',\n  'Generic class name': '',\n  'States': 'timeline-tooltip-visible',\n  'Parent': '.timeline-information'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}