(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./src/replay/components/common.js":function(e,n,t){"use strict";function r(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}t.d(n,"a",function(){return o}),t.d(n,"k",function(){return a}),t.d(n,"g",function(){return c}),t.d(n,"d",function(){return s}),t.d(n,"f",function(){return l}),t.d(n,"h",function(){return g}),t.d(n,"i",function(){return u}),t.d(n,"j",function(){return m}),t.d(n,"c",function(){return d}),t.d(n,"b",function(){return h}),t.d(n,"e",function(){return y});var o="replay-";function a(e){for(var n=null==e?"":e,t=[],r=0;r<(arguments.length<=1?0:arguments.length-1);r++)(r+1<1||arguments.length<=r+1?void 0:arguments[r+1])&&t.push(n+(r+1<1||arguments.length<=r+1?void 0:arguments[r+1]));return t.join(" ")}var i=function(e){return e};function c(e){var n=e.classes,t=e.selectClasses,o=e.classNames,c=e.classNamePrefix;if(n&&t){var s=t(n);return Array.isArray(s)?s.filter(i).join(" "):s}if(o)return a.apply(void 0,[c].concat(r(o)))}function s(e,n){var t,r=(n||e.currentTarget).getBoundingClientRect();return t=e.touches&&e.touches.length>0?e.touches[0]:e.changedTouches&&e.changedTouches.length>0?e.changedTouches[0]:e,{x:Math.max(0,Math.min(t.pageX-r.left,r.width)),y:Math.max(0,Math.min(t.pageY-r.top,r.height)),width:r.width,height:r.height}}function l(e){return function(n){e.indexOf(n.key)>=0&&(n.preventDefault(),n.stopPropagation())}}var g=function(e,n){return e!==n&&(!(e instanceof Date&&n instanceof Date&&e.getTime()===n.getTime())&&!(Number.isNaN(e)&&Number.isNaN(n)))},A=function(e){return null!=e&&e.constructor==={}.constructor},u=function(e,n){if(e===n)return!0;if(A(e)&&A(n)){var t=Object.keys(e),r=Object.keys(n);return t.length===r.length&&(!(t.filter(function(t){return g(e[t],n[t])}).length>0)&&0===r.filter(function(t){return g(n[t],e[t])}).length)}if(Array.isArray(e)&&Array.isArray(n)&&e.length===n.length){for(var o=e.length;o--;)if(e[o]!==n[o])return!1;return!0}return!1};function p(e){if(null==e)return{};var n={},t=e;return Object.keys(e).forEach(function(e){A(t[e])?n[e]=p(t[e]):n[e]=t[e]}),n}function m(e,n){var t=p(e);if(n){var r=n;Object.getOwnPropertyNames(r).forEach(function(e){A(r[e])?A(t[e])?t[e]=m(t[e],r[e]):t[e]=p(r[e]):t[e]=r[e]})}return t}var f=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return t&&0===e?"":e<10&&r?"0".concat(e).concat(n):"".concat(e).concat(n)},d=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"-",t=Math.round(e),r="";"number"!==typeof e||isNaN(e)||e===1/0?t=0:t<0&&(t=-t,r=n);var o=Math.floor(t/86400),a=86400*o,i=Math.floor((t-a)/3600),c=a+3600*i,s=Math.floor((t-c)/60),l=t-c-60*s;return r+f(o,".",!0,!1)+f(i,":",0===o)+f(s,":",!1)+f(l)},h=function(e){var n=e instanceof Date&&!isNaN(e.getTime()),t=0,r=0,o=0;return n&&null!=e&&(t=n?e.getHours():0,r=n?e.getMinutes():0,o=n?e.getSeconds():0),f(t,":",!1)+f(r,":",!1)+f(o)},y=function(e,n){var t=null;return{start:function(){t||(t=setInterval(e,1e3*n))},stop:function(){t&&(clearInterval(t),t=null)}}}},"./src/replay/components/controls/BufferingIndicator/BufferingIndicator.js":function(e,n,t){"use strict";var r=t("./node_modules/react/index.js"),o=t("./src/replay/components/common.js"),a="buffering-indicator",i=function(e){var n=e.children,t=e.content,i=e.isBuffering,c=e.isSeeking,s=e.playState,l=e.renderStrategy,g=void 0===l?"when-buffering":l,A=e.label,u=e.classNamePrefix,p=void 0===u?o.a:u,m=i||c||"starting"===s||"buffering"===s||"seeking"===s;return"always"===g?m?r.createElement("div",{title:A,className:Object(o.k)(p,a,"buffering")},n||t):r.createElement("div",{className:Object(o.k)(p,a)},n||t):m?r.createElement("div",{title:A,className:Object(o.k)(p,a,"buffering")},n||t):null};i.streamStateKeysForObservation=["isBuffering","isSeeking","playState"],n.a=i,i.__docgenInfo={description:"",methods:[],displayName:"BufferingIndicator",props:{renderStrategy:{defaultValue:{value:"'when-buffering'",computed:!1},required:!1,flowType:{name:"union",raw:"'when-buffering' | 'always'",elements:[{name:"literal",value:"'when-buffering'"},{name:"literal",value:"'always'"}]},description:"When set to 'always', the content is always rendered, but buffering is indicated through a class name on the component's root element. This option is used when controlling display through CSS."},classNamePrefix:{defaultValue:{value:"defaultClassNamePrefix",computed:!0},required:!1},isBuffering:{required:!1,flowType:{name:"boolean"},description:"\u21d8\ufe0e If true, the buffering indicator is shown or the root element has a class name indicating buffering."},isSeeking:{required:!1,flowType:{name:"boolean"},description:"\u21d8\ufe0e If true, the buffering indicator is shown or the root element has a class name indicating buffering."},playState:{required:!1,flowType:{name:"PlayState"},description:"\u21d8\ufe0e If set to 'starting', 'buffering', or 'seeking', the buffering indicator is shown or the root element has a class name indicating buffering."},children:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"The content to show if buffering, or always if renderingStrategy is 'always'."},content:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"Alternative to specifying children. Other Replay controls use content as the convention."}}}},"./src/replay/components/controls/BufferingIndicator/BufferingIndicator.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var r=t("./node_modules/react/index.js"),o=t.n(r),a=t("./node_modules/@mdx-js/tag/dist/index.js"),i=(t("./src/replay/replay-default.css"),t("./src/replay/docs/mdx-helpers/SimpleTable.js")),c=t("./node_modules/docz/dist/index.m.js"),s=t("./src/replay/components/controls/BufferingIndicator/BufferingIndicator.js"),l=t("./src/replay/default-player/default-skin/LoadingAnimation.js"),g=t("./src/replay/docs/props-footnote.md");function A(e){return(A="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function p(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,n){return!n||"object"!==A(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,n){return(d=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var h=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=m(this,f(n).call(this,e))).layout=null,t}var t,r,A;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&d(e,n)}(n,o.a.Component),t=n,(r=[{key:"render",value:function(){var e=this.props,n=e.components,t=u(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:n},o.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"bufferingindicator-component"}},"BufferingIndicator component"),o.a.createElement(a.MDXTag,{name:"p",components:n},"Displays any overlay (animation, graphics, etc.) when a buffering, starting, or seeking state is reported."),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"summary"}},"Summary"),o.a.createElement(a.MDXTag,{name:"p",components:n},"The main concept of this component is to display and animate an overlay when the user needs to wait for playback to start or resume (buffering)."),o.a.createElement(a.MDXTag,{name:"p",components:n},"The overlay is specified as the component's child, or in the ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"content")," prop."),o.a.createElement(a.MDXTag,{name:"p",components:n},"If the prop ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"renderStrategy")," is set to ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'always'"),', the content will always be rendered. However, the class name "buffering" (with prefix) will be added to the compoent\'s root element when the state is buffering.'),o.a.createElement(a.MDXTag,{name:"p",components:n},"If the prop ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"renderStrategy")," is set to ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'when-buffering'"),", no content will be rendered when not buffering. The drawback of this approach is that the indicator will stop displaying abruptly, and a smooth fade-out animation cannot be applied. "),o.a.createElement(a.MDXTag,{name:"p",components:n},"The state of buffering is set when one or both of the props ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"isBuffering")," or ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"isSeeking")," are set to true, or if the ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"playState")," prop is set to ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'starting'"),", ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'buffering'"),", ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'seeking'"),"."),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),o.a.createElement(c.Playground,{__codesandbox:"",__position:0,__code:"<div\n  style={{ backgroundColor: 'gray', height: '100px', position: 'relative' }}\n>\n  <BufferingIndicator\n    renderStrategy=\"always\"\n    isBuffering={false}\n    isSeeking={false}\n    playState=\"starting\"\n  >\n    <LoadingAnimation />\n  </BufferingIndicator>\n</div>",__scope:{props:this?this.props:t,SimpleTable:i.a,BufferingIndicator:s.a,LoadingAnimation:l.a,Footnote:g.a}},o.a.createElement("div",{style:{backgroundColor:"gray",height:"100px",position:"relative"}},o.a.createElement(s.a,{renderStrategy:"always",isBuffering:!1,isSeeking:!1,playState:"starting"},o.a.createElement(l.a,null)))),o.a.createElement(a.MDXTag,{name:"p",components:n},"In this example, the animation is showing because ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'playState="starting""'),". Try experimenting with other values for playState, and with ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," for isBuffering/isSeeking."),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),o.a.createElement(c.PropsTable,{of:s.a}),o.a.createElement(g.a,null),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"component-dom-with-class-names"}},"Component DOM with class names"),o.a.createElement(a.MDXTag,{name:"p",components:n},"Please read the ",o.a.createElement(a.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/custom-replay/skins-styles"}},"general principles")," for Replay class names and styling."),o.a.createElement(i.a,{rows:[{Element:"div","Class name":"buffering-indicator","Generic class name":"",States:"buffering",Parent:""}]}),o.a.createElement(a.MDXTag,{name:"p",components:n},"Note that the state class name ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"buffering")," is only present when buffering is reported, and the render strategy is set to ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'always'"),"."))}}])&&p(t.prototype,r),A&&p(t,A),n}();h.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/default-player/default-skin/LoadingAnimation.js":function(e,n,t){"use strict";var r=t("./node_modules/react/index.js"),o=function(){return r.createElement("svg",{width:"100%",height:"100%",viewBox:"0 0 38 38",stroke:"currentColor"},r.createElement("g",{fill:"none",fillRule:"evenodd"},r.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},r.createElement("circle",{stroke:"currentColor",strokeOpacity:"0.5",cx:"18",cy:"18",r:"18"}),r.createElement("path",{className:"animated",d:"M36 18c0-9.94-8.06-18-18-18"}))))};n.a=o,o.__docgenInfo={description:"",methods:[],displayName:"LoadingAnimation"}},"./src/replay/docs/mdx-helpers/SimpleTable.js":function(e,n,t){"use strict";var r=t("./node_modules/react/index.js");function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.forEach(function(n){a(e,n,t[n])})}return e}function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var i={padding:0,tableLayout:"auto",boxShadow:"0 0 0 1px #CED4DE",borderSpacing:0,borderColor:"gray",borderCollapse:"collapse",borderStyle:"hidden",borderRadius:"4px",overflowY:"hidden",fontSize:"14px",color:"#13161F",width:"100%",display:"table"},c={color:"#7D899C",background:"#EEF1F5",textAlign:"left",fontSize:"14px",borderSpacing:0,borderCollapse:"collapse"},s={orderSpacing:0,borderCollapse:"collapse"},l={padding:"20px",verticalAlign:"top"},g=o({},l,{fontStyle:"italic",opacity:.5}),A=o({},l,{fontFamily:'"Source Code Pro",monospace',whiteSpace:"nowrap"}),u=function(e){var n=e.rows,t=n?n.map(function(e){return Object.values(e).join("-")}).join("-"):"";if(n&&n.length){var o=Object.keys(n[0]);return r.createElement("table",{style:i},r.createElement("thead",{style:c},r.createElement("tr",{style:s},o.map(function(e){return r.createElement("th",{key:"header-"+e,style:l},e)}))),r.createElement("tbody",null,n.map(function(e,n){return r.createElement("tr",{key:t+"-row-"+n,style:s},Object.values(e).map(function(e,o){return r.createElement("td",{key:t+"-cell-"+n+"-"+o,style:(a=e,""===a?g:A)},function(e){return""===e?"none":e}(e));var a}))})))}};n.a=u,u.__docgenInfo={description:"",methods:[],displayName:"SimpleTable",props:{rows:{required:!1,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}}],raw:"Array<{ [string]: string }>"},description:""}}}},"./src/replay/docs/props-footnote.md":function(e,n,t){"use strict";t.d(n,"a",function(){return u});var r=t("./node_modules/react/index.js"),o=t.n(r),a=t("./node_modules/@mdx-js/tag/dist/index.js");function i(e){return(i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function s(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,n){return!n||"object"!==i(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function A(e,n){return(A=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=l(this,g(n).call(this,e))).layout=null,t}var t,r,i;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&A(e,n)}(n,o.a.Component),t=n,(r=[{key:"render",value:function(){var e=this.props,n=e.components;c(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:n},o.a.createElement(a.MDXTag,{name:"p",components:n},"Props marked with \u21d8 are updated with the video streamer's ",o.a.createElement(a.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/reference/observable-stream-state"}},"state property")," having the same name, when connected by the ",o.a.createElement(a.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/architecture/connected-controls#connecting-the-controls"}},o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"connectControl()")," HOC"),". The \ufe0e",o.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"setProperties()")," callback prop is marked with \ufe0e\u21d7 because it is connected for changing the playback state. More info in the architecture description of ",o.a.createElement(a.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/architecture/overview#arrows-and-boxes"}},"two-way data flow"),"."))}}])&&s(t.prototype,r),i&&s(t,i),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/replay-default.css":function(e,n,t){}}]);
//# sourceMappingURL=components-controls-buffering-indicator-buffering-indicator.5c1f74196e93412a3331.js.map