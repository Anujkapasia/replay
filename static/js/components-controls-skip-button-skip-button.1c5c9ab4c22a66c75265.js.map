{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/SkipButton/SkipButton.js","webpack:///./src/replay/components/controls/SkipButton/SkipButton.mdx","webpack:///./src/replay/components/controls/TimeDisplay/TimeDisplay.js","webpack:///./src/replay/components/generic/Button/Button.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","sanitizedPrefix","classNameArray","i","arguments","length","undefined","push","join","isDefined","item","hydrateClassNames","_ref","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","apply","concat","_toConsumableArray","getBoundingEventCoordinates","evt","element","extractedEvent","domRect","currentTarget","getBoundingClientRect","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","SkipButton","setProperties","_this","props","position","inspect","offset","React","_this$props","this","content","label","react__WEBPACK_IMPORTED_MODULE_0__","_generic_Button_Button__WEBPACK_IMPORTED_MODULE_1__","className","onClick","handleClick","displayName","MDXContent","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","TimeDisplay","ShowCase","SimpleTable","RotateCcw","RotateCw","Footnote","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_5__","render","_ref$position","Fragment","_SkipButton__WEBPACK_IMPORTED_MODULE_4__","react_feather__WEBPACK_IMPORTED_MODULE_7__","_TimeDisplay_TimeDisplay__WEBPACK_IMPORTED_MODULE_3__","duration","playMode","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_8__","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_6__","rows","Element","Class name","Generic class name","States","Parent","__webpack_require__","_common__WEBPACK_IMPORTED_MODULE_1__","formatAndLimitTime","time","zeroAndBelow","absolutePosition","_ref$liveDisplayMode","liveDisplayMode","positionLabel","durationLabel","_ref$classNamePrefix","clockTimeLabel","title","streamStateKeysForObservation","button","Button","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","role","tabIndex","useDefaultClassNaming","convertPropsToState","state","value","_defineProperty","_assertThisInitialized","setState","style","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","formatContent"],"mappings":"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","file":"static/js/components-controls-skip-button-skip-button.1e9c802e.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport Button from '../../generic/Button/Button';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport type { InspectMethod } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** The position from which the skipped position is computed. Not recommended to set this, but rather provide inspect(). */\n  position?: number,\n  /** Configures the offset that will be added to the current position when clicking the button. Negative values mean skipping backward. */\n  offset: number,\n  /** Button content, e.g. icon. */\n  content: React.Node,\n  /** ⇘︎ A callback returning the current video stream state with a position property when invoked. Invoked on clicking the button, and the position property is used for computing the new position. */\n  inspect?: InspectMethod,\n  /** ⇗ When the button is clicked, this callback is invoked with an object having a position property with the computed new position based on the skip offset. */\n  setProperties?: ({ position: number }) => void\n};\n\nconst className = 'skip-button';\n\nclass SkipButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix,\n    offset: -30\n  };\n\n  handleClick = () => {\n    const setProperties = this.props.setProperties;\n    if (setProperties) {\n      const currentPosition =\n        typeof this.props.inspect === 'function' ? this.props.inspect().position : this.props.position;\n      const position = currentPosition + this.props.offset;\n      if (!isNaN(position)) {\n        setProperties({ position });\n      }\n    }\n  };\n\n  render() {\n    const { content, label, classNamePrefix } = this.props;\n    return (\n      <Button\n        classNamePrefix={classNamePrefix}\n        className={className}\n        label={label}\n        onClick={this.handleClick}\n        content={content}\n      />\n    );\n  }\n}\n\nSkipButton.displayName = 'SkipButton';\nexport default SkipButton;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport TimeDisplay from '../TimeDisplay/TimeDisplay'\nimport SkipButton from './SkipButton';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport { RotateCcw, RotateCw } from 'react-feather';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"skipbutton\"}}>{`SkipButton`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar button for seeking by offsets. `}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The offset in seconds and direction can be configured, and this control can be used for both seeking forward and backward by relatively small intervals, e.g. 20 seconds, which is often more convenient than using the timeline slider.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When clicking the button, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ position: value })`}</MDXTag>{` will be called, with the value computed by adding the current position with the configured `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`offset`}</MDXTag>{` prop. This means negative configured offsets will make the button skip backward.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When clicking the button, the current relative position is read by invoking the callback prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`inspect()`}</MDXTag>{`. This is a method of the player controller, passed down when `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}>{`connecting the control`}</MDXTag>{`. It exposes the current video streamer state. The button could also read the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`position`}</MDXTag>{`. However, this would require continuous updates to the button during playback of the position value, and would be unnecessary as long as the button is not clicked.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<ShowCase\\n  render={({ setProperties, position = 180 }) => {\\n    // Preferrably only fetch the position upon clicks, instead of updating a position prop.\\n    // The PlayerController provides an inspect() method to connected controls, which is mocked here:\\n    const duration = 600\\n    const inspect = () => {\\n      return { position: Math.min(position, duration) }\\n    }\\n    return (\\n      <>\\n        <SkipButton\\n          offset={-20}\\n          inspect={inspect}\\n          content={<RotateCcw />}\\n          setProperties={setProperties}\\n        />\\n        <TimeDisplay\\n          position={position}\\n          duration={duration}\\n          playMode={\\'ondemand\\'}\\n        />\\n        <SkipButton\\n          offset={40}\\n          inspect={inspect}\\n          content={<RotateCw />}\\n          setProperties={setProperties}\\n        />\\n      </>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,TimeDisplay,SkipButton,ShowCase,SimpleTable,RotateCcw,RotateCw,Footnote}}>    \n  <ShowCase render={({ setProperties, position = 180 }) => {\n    // Preferrably only fetch the position upon clicks, instead of updating a position prop.\n    // The PlayerController provides an inspect() method to connected controls, which is mocked here:\n    const duration = 600;\n    const inspect = () => {\n      return { position: Math.min(position, duration) };\n    };\n    return (\n      <>\n        <SkipButton offset={-20} inspect={inspect} content={<RotateCcw/>} setProperties={setProperties} />\n        <TimeDisplay position={position} duration={duration} playMode={'ondemand'} />\n        <SkipButton offset={40} inspect={inspect} content={<RotateCw/>} setProperties={setProperties} />\n      </>\n    );\n  }}/>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`This example demonstrates both forward and backward skip buttons configured with different intervals. It uses `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimeDisplay/>`}</MDXTag>{` for showing the effect of button clicks.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={SkipButton} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'skip-button',\n  'Generic class name': 'button',\n  'States': '',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.skip-button'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\n\nimport * as React from 'react';\nimport type { CommonProps } from '../../common';\nimport { defaultClassNamePrefix, formatClockTime, formatTime, prefixClassNames } from '../../common';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { ObservingControlStaticProps } from '../../player/PlayerController/ControllerContext';\n\nexport type LiveDisplayMode = 'clock-time' | 'live-offset';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The relative playback position, used for on demand position and timeshift offset display. */\n  position?: number,\n  /** ⇘︎ The duration of the stream, used for on demand position and timeshift offset display. */\n  duration?: number,\n  /** ⇘︎ The clock time, used for live streams and DVR streams when liveDisplayMode is set to 'live-offset'. */\n  absolutePosition?: ?Date,\n  /** ⇘︎ Play mode is used to decide what times to display. */\n  playMode?: PlayMode,\n  /** When set to 'live-offset', DVR times will be displayed as offsets from the live edge. Default is 'clock-time'. */\n  liveDisplayMode?: LiveDisplayMode,\n  negativeMark?: string,\n  positionLabel?: string,\n  durationLabel?: string,\n  clockTimeLabel?: string\n};\n\ntype TimeDisplayType = React.StatelessFunctionalComponent<Props> & ObservingControlStaticProps;\n\nconst className = 'time-display';\nconst positionClassName = 'time-display-position';\nconst durationClassName = 'time-display-duration';\nconst clockTimeClassName = 'time-display-clock-time';\nconst noDurationClassName = 'time-display-no-duration';\n\nconst isReasonableDateTime = date => date instanceof Date && !isNaN(date.getTime()) && date.getTime() > 1514761200000;\n\nconst formatAndLimitTime = (time: ?number, negativeMark?: string, zeroAndBelow: boolean = false) =>\n  formatTime(time == null ? 0 : Math[zeroAndBelow ? 'min' : 'max'](0, time), negativeMark);\n\nconst TimeDisplay: TimeDisplayType = ({\n  position,\n  duration,\n  absolutePosition,\n  playMode,\n  liveDisplayMode = 'clock-time',\n  negativeMark,\n  label,\n  positionLabel,\n  durationLabel,\n  clockTimeLabel,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  if (playMode === 'ondemand') {\n    return (\n      <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n        <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n          {formatAndLimitTime(position, negativeMark)}\n        </span>\n        <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n          {formatAndLimitTime(duration, negativeMark)}\n        </span>\n      </div>\n    );\n  } else {\n    if ((liveDisplayMode === 'live-offset' && playMode === 'livedvr') || !isReasonableDateTime(absolutePosition)) {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n            {formatAndLimitTime((position || duration || 0) - (duration || 0), negativeMark, true)}\n          </span>\n          {playMode === 'livedvr' && (\n            <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n              {formatAndLimitTime(duration, negativeMark)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className, noDurationClassName)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, clockTimeClassName)} title={positionLabel}>\n            {formatClockTime(absolutePosition)}\n          </span>\n        </div>\n      );\n    }\n  }\n};\n\nTimeDisplay.streamStateKeysForObservation = ['position', 'duration', 'absolutePosition', 'playMode'];\nTimeDisplay.displayName = 'TimeDisplay';\n\nexport default TimeDisplay;\n","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  label?: string,\n  content?: React.Node,\n  onClick?: () => void\n};\n\nconst baseClassName = 'button';\nconst selectClasses = classes => classes.button;\n\nclass Button extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onClick && this.props.onClick();\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { label, className, classNamePrefix, classes, content }: Props = this.props;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses,\n      classNames: [baseClassName, className],\n      classNamePrefix\n    }); // buildClassNames(useDefaultClassNaming, classNamePrefix, className, baseClassName);\n    return (\n      <div\n        title={label}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        className={classNames}\n        role=\"button\"\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}