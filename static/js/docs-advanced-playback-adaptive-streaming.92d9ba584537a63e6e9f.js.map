{"version":3,"sources":["webpack:///./src/replay/components/player/VideoStreamer/CompoundVideoStreamer/helpers.js","webpack:///./src/replay/components/player/VideoStreamer/CompoundVideoStreamer/hlsjs-shaka-html/lazyVideoStreamerSelector.js","webpack:///./src/replay/components/player/VideoStreamer/CompoundVideoStreamer/playready-widevine-fairplay/compatibleStreamSelector.js","webpack:///./src/replay/components/player/VideoStreamer/CompoundVideoStreamer/CompoundVideoStreamer.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsSetup.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsStreamRangeHelper.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsSourceChangeHandler.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsAudioTrackManager.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsTextTrackManager.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsBitrateManager.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsErrorMapper.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsEventHandlers.js","webpack:///./src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/HlsjsVideoStreamer.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaStreamRangeHelper.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaErrorMapper.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaSourceChangeHandler.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaEventHandlers.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaBitrateManager.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaTextTrackManager.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaAudioTrackManager.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/ShakaVideoStreamer.js","webpack:///./src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaSetup.js","webpack:///./src/replay/default-player/Replay.js","webpack:///./src/replay/docs/advanced-playback/adaptive-streaming.mdx"],"names":["hlsContentTypes","streamTypes","name","label","contentTypes","urlMatch","urlNotMatch","isSafari","userAgent","indexOf","isMicrosoft","match","isResourceFairPlay","resource","contentType","drmType","toLowerCase","isResourcePlayReady","isResourceWidevine","HlsjsVideoStreamer","lazy","Promise","all","__webpack_require__","e","then","bind","ShakaVideoStreamer","HtmlVideoStreamer","BasicVideoStreamer","resolve","selectVideoStreamerImporter","source","streamUrl","filter","type","test","detectStreamType","selectCompatibleDrmStream","alternativeStreamResources","matcher","matchingStream","find","length","StreamResourceResolutionError","selectCompatibleStream","selectLazyVideoStreamer","_PlaybackError","message","supportedDrmType","resources","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","availableResources","_inherits","PlaybackError","normalizeSource","memoize","mergeAndMemoize","a","b","_objectSpread","mergeAndMemoizePropsWithSource","props","CompoundVideoStreamer","Array","isArray","navigator","err","onPlaybackError","VideoStreamer","modifiedProps","react_default","createElement","react","fallback","broadcastHlsInstance","instanceKeeper","preposition","hls","subscribers","forEach","subscriber","hlsjsSetup","videoElement","configuration","reject","Hls","isSupported","customConfiguration","hlsjs","hlsConfig","autoStartLoad","debug","logLevel","enableWorker","on","Events","MEDIA_ATTACHED","attachMedia","hlsjsCleanup","stopLoad","destroy","dawnOfTime","Date","minimumDvrLength","getStreamRangeHelper","_hlsjsEventHandlers","streamStartDate","liveMargin","liveEdgeMargin","levelDuration","isLive","reset","hlsjsEventHandlers","hlsjsStreamRangeHelper_defineProperty","MANIFEST_LOADING","LEVEL_LOADED","evt","data","details","live","totalduration","programDateTime","fragments","push","hlsInstance","Object","entries","_ref","_ref2","_slicedToArray","handler","adjustForDvrStartOffset","calculateNewState","position","Math","max","currentTime","duration","_getAbsolutePositions","startDateTime","isNaN","absolutePosition","getTime","absoluteStartPosition","getAbsolutePositions","playMode","Infinity","resolvePlayMode","isAtLiveEdge","liveSyncPosition","config","liveSyncDuration","liveSyncDurationCount","getIsAtLiveEdge","setPosition","newPosition","gotoLive","getSourceChangeHandler","nextProps","prevProps","MANIFEST_PARSED","onMediaLoaded","off","startPosition","startLoad","loadSource","getDistinctPseudoTracks","audioTracks","foundKeys","track","key","concat","lang","isNotAdded","map","id","language","kind","origin","equalOrNoneSpecified","equalOrNotSpecified","isAudioTrackListsDifferent","i","getAudioTrackManager","update","mapAudioTracks","currentTracks","updateStreamStateProps","currentAudioTrack","currentHlsAudioTrack","ht","audioTrack","refresh","hlsjsAudioTrackManager_defineProperty","AUDIO_TRACK_SWITCHED","_ref3","hlsjsAudioTrackManager_slicedToArray","cleanup","handleSourceChange","handleSelectedAudioTrackChange","selectedAudioTrack","st","groupId","matchingTrack","trackModeMappings","getTrackMode","textTrack","mode","setTrackMode","newMode","isEqual","Number","createSelectableTrack","videoElementTrack","getHlsjsTextTrackManager","updateTrackElementData","managedTracks","currentTextTrack","selectableTextTracks","emptyTracks","unique","Cue","window","VTTCue","TextTrackCue","notifyPropertyChanges","m","selectableTrack","textTracks","isShallowEqual","addTracks","sourceTracks","removeEventListener","handleTrackAdd","handleTrackRemove","freshManagedTracks","sourceTrack","managedTrackMatches","managedTrack","cues","ac","bc","cue","index","start","end","content","src","isSourceTracksEqual","isBlacklisted","alreadyAddedTrack","isLoaded","addTextTrack","addCue","loadPromise","trackElementData","srclang","onRef","trackElement","t","handleLoad","handleError","addEventListener","undefined","updateFromVideoElement","textTracksList","videoElementTracks","cleanedUpManagedTracks","cleanupTracks","isNewSession","vt","removeCue","handleSelectedTextTrackChange","selectedTextTrack","mt","subtitleDisplay","handleTextTracksPropChange","newProps","handleSourcePropChange","newTracks","clear","getBitrateAsKbps","level","ceil","bitrate","getHlsjsBitrateManager","streamer","updateStreamState","log","previousBitrates","updateBitrateProps","hlsEvent","eventData","bitrates","levels","currentLevel","LEVEL_SWITCHED","startLevel","currentBitrate","hlsjsBitrateManager_defineProperty","LEVEL_UPDATED","hlsjsBitrateManager_slicedToArray","fixBitrate","nextLevel","bitrateFix","capBitrate","cap","autoLevelCapping","bitrateCap","reached","tech","ed","ErrorDetails","downloadErrors","MANIFEST_LOAD_ERROR","MANIFEST_LOAD_TIMEOUT","LEVEL_LOAD_ERROR","LEVEL_LOAD_TIMEOUT","AUDIO_TRACK_LOAD_ERROR","AUDIO_TRACK_LOAD_TIMEOUT","FRAG_LOAD_ERROR","FRAG_LOOP_LOADING_ERROR","FRAG_LOAD_TIMEOUT","KEY_LOAD_ERROR","KEY_LOAD_TIMEOUT","decodeErrors","MANIFEST_PARSING_ERROR","MANIFEST_INCOMPATIBLE_CODECS_ERROR","FRAG_DECRYPT_ERROR","BUFFER_ADD_CODEC_ERROR","FRAG_PARSING_ERROR","getHlsjsEventHandlers","streamRangeHelper","applyProperties","htmlVideoHandlers","getBasicVideoEventHandlers","videoElementEventHandlers","pauseStreamRangeUpdater","lifeCycleManager","setStage","_","getStage","handleActualError","detail","severity","code","playbackError","fatal","reason","buildMessage","error","playState","isBuffering","isSeeking","stop","hlsjsEventHandlers_defineProperty","ERROR","BUFFER_STALLED_ERROR","BUFFER_SEEK_OVER_HOLE","BUFFER_NUDGE_ON_STALL","url","endsWith","initialPlaybackProps","_streamer$props$initi","isMuted","volume","muted","isPipAvailable","FRAG_BUFFERED","_streamer$props$initi2","isPaused","pause","hlsjsEventHandlers_slicedToArray","onCanPlay","onPlaying","onPause","onSeeking","onSeeked","onDurationChange","onTimeUpdate","onVolumeChange","onProgress","onEnded","onError","setLifeCycleManager","manager","createVideoStreamerComponent","onTrackElementDataChange","getFilteredStreamStateUpdater","textTrackManager","audioTrackManager","getHlsjsAudioTrackManager","bitrateManager","getArrayLogger","getPropertyApplier","playbackLifeCycleManager","getPlaybackLifeCycleManager","startPlaybackSession","endPlaybackSession","thirdPartyPlayer","render","renderWithoutSource","dvrStartCorrection","shakaPlayer","paused","seekableStart","seekRange","getPresentationStartTimeAsDate","errorTechnology","STREAM_ERROR","STREAM_ERROR_DRM_CLIENT_UNAVAILABLE","STREAM_ERROR_DRM_OUTPUT_BLOCKED","errorFromCodeMappings","3016","shakaError","classification","4012","6001","6002","6003","6007","6008","6013","7000","1","2","3","4","5","6","defaultError","reverseLookup","numeric","mappings","keys","parseInt","getSeverity","isStarted","category","mapShakaError","location","mapping","floor","getFromDeclarativeMapping","protocol","hostname","isEmeBlocked","shaka","util","Error","Code","Category","shakaRequestFilter","shakaResponseFilter","networkingEngine","getNetworkingEngine","clearAllRequestFilters","clearAllResponseFilters","registerRequestFilter","registerResponseFilter","prepareFilters","licenseUrl","serviceCertificate","licenseAcquisitionDetails","widevineServiceCertificateUrl","licenseAcquisition","widevine","serviceCertificateUrl","emeAttributes","audioRobustness","videoRobustness","_classification","getEmeAttributes","configure","drm","servers","com.widevine.alpha","com.microsoft.playready","advanced","serverCertificate","prepareDrm","load","catch","LOAD_INTERRUPTED","document","unload","getShakaEventHandlers","shakaEventHandlers","loading","streaming","buffering","toString","_ref6","_ref7","_ref4","_ref5","getBitrateAsBps","bandwidth","numericSort","bandwidthSort","isActiveTrack","active","isUnique","item","arr","resetConfiguration","abr","enabled","restrictions","maxBandwidth","getShakaBitrateManager","variantTracks","getVariantTracks","sort","updates","adaptation","trackschanged","shakaBitrateManager_slicedToArray","sortedTracks","slice","desiredVariantTrack","selectVariantTrack","lowestBitrate","trackPropKeys","isShakaTrackEqual","shakaTrack","supportedContentTypes","isContentTypeSupported","ct","getShakaTextTrackManager","managedTextTracks","getActiveShakaTrack","getTextTracks","allProps","selectedTrack","isTextTrackVisible","managedSelectedTrack","emptyManagedTextTrackList","tracks","supportedTracks","tracksBeingAdded","newManagedTracks","freshTracks","managedTextTrack","addedTrack","charsetPos","substr","addPromise","trackBeingAdded","shakaLoadPromise","nmt","blacklistExistingSideLoadedTracks","setTextTrackVisibility","shakaTracks","newManagedTrackList","isRemoving","texttrackvisibility","shakaTextTrackManager_slicedToArray","setTimeout","fullShakaTrack","updatedTrack","selectTextTrack","createManagedTrack","role","isTrackMatchingLanguageAndRole","roles","getShakaAudioTrackManager","updateCurrentAudioTrack","activeShakaTrack","updateAudioTracks","getAudioLanguagesAndRoles","shakaAudioTrackManager_slicedToArray","selectAudioLanguage","MediaSource","isTypeSupported","shakaPlayerConfig","installPolyfills","polyfill","installAll","Player","shakaSetup","shakaCleanup","_baseConfiguration__WEBPACK_IMPORTED_MODULE_0__","_playerComposer__WEBPACK_IMPORTED_MODULE_1__","_default_skin_graphics__WEBPACK_IMPORTED_MODULE_2__","_strings__WEBPACK_IMPORTED_MODULE_3__","Replay","composePlayer","graphics","strings","baseConfiguration","MDXContent","_possibleConstructorReturn","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","parentName","className","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","_default_player_Replay__WEBPACK_IMPORTED_MODULE_3__","_components_player_VideoStreamer_HlsjsVideoStreamer_HlsjsVideoStreamer__WEBPACK_IMPORTED_MODULE_4__","href","_components_player_VideoStreamer_ShakaVideoStreamer_ShakaVideoStreamer__WEBPACK_IMPORTED_MODULE_5__","_components_player_VideoStreamer_CompoundVideoStreamer_CompoundVideoStreamer__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"static/js/docs-advanced-playback-adaptive-streaming.7095dcb0.js","sourcesContent":["// @flow\n\nimport type { StreamResource } from './CompoundVideoStreamer';\n\nexport type StreamType = {\n  name: string,\n  label: string,\n  contentTypes: Array<string>,\n  urlMatch: RegExp,\n  urlNotMatch?: RegExp\n};\n\nexport const hlsContentTypes = ['application/x-mpegurl', 'vnd.apple.mpegurl'];\n\nexport const streamTypes: Array<StreamType> = [\n  {\n    name: 'progressive',\n    label: 'Progressive (MP4, WebM)',\n    contentTypes: ['video/mp4', 'video/webm'],\n    urlMatch: /(\\.webm|\\.mp4)/,\n    urlNotMatch: /(\\/Manifest|\\.mpd|\\.m3u)/\n  },\n  {\n    name: 'dash',\n    label: 'MPEG DASH',\n    contentTypes: ['application/dash+xml'],\n    urlMatch: /\\.mpd/\n  },\n  {\n    name: 'hls',\n    label: 'Apple HLS',\n    contentTypes: hlsContentTypes,\n    urlMatch: /\\.m3u/\n  },\n  {\n    name: 'smooth',\n    label: 'Smooth stream',\n    contentTypes: ['application/vnd.ms-sstr+xml'],\n    urlMatch: /\\/Manifest/,\n    urlNotMatch: /(\\.mpd|\\.m3u|\\.mp4)/\n  }\n];\n\nexport const isSafari = (userAgent: string) =>\n  userAgent.indexOf('Safari') > 0 && userAgent.indexOf('Chrome') < 0 && userAgent.indexOf('Firefox') < 0;\n\nexport const isMicrosoft = (userAgent: string) => userAgent.match(/(Edge\\/|rv:11\\.0)/);\n\n// TODO: For symmetry, there should be an method matching all Widevine-compatible browsers.\n\nexport const isResourceFairPlay = (resource: StreamResource): boolean => {\n  const contentType = resource.contentType;\n  const drmType = resource.drmType ? resource.drmType : null;\n  return !!(\n    contentType &&\n    hlsContentTypes.indexOf(contentType.toLowerCase()) >= 0 &&\n    drmType &&\n    drmType.match(/(fairplay|com\\.apple\\.fps)/i)\n  );\n};\n\nexport const isResourcePlayReady = (resource: StreamResource): boolean => {\n  return !!(resource.drmType && resource.drmType.match(/playready/i));\n};\n\nexport const isResourceWidevine = (resource: StreamResource): boolean => {\n  return !!(resource.drmType && resource.drmType.match(/widevine/i));\n};\n\nexport const detectStreamType = (streamUrl: string, contentType: ?string): StreamType =>\n  streamTypes.filter(type => {\n    if (contentType) {\n      return type.contentTypes.indexOf(contentType.toLowerCase()) >= 0;\n    } else {\n      const urlNotMatch = type.urlNotMatch;\n      if (urlNotMatch) {\n        return type.urlMatch.test(streamUrl) && !urlNotMatch.test(streamUrl);\n      } else {\n        return type.urlMatch.test(streamUrl);\n      }\n    }\n  })[0] || streamTypes[0];\n","// @flow\n//$FlowFixMe Flow React types are not up to date.\nimport { lazy } from 'react';\nimport type { LazyVideoStreamerSelector } from '../CompoundVideoStreamer';\nimport { detectStreamType, isSafari } from '../helpers';\n\nconst HlsjsVideoStreamer = lazy(() => import('../../HlsjsVideoStreamer/HlsjsVideoStreamer'));\nconst ShakaVideoStreamer = lazy(() => import('../../ShakaVideoStreamer/ShakaVideoStreamer'));\nconst HtmlVideoStreamer = lazy(() => import('../../HtmlVideoStreamer/HtmlVideoStreamer'));\nconst BasicVideoStreamer = lazy(() => import('../../BasicVideoStreamer/BasicVideoStreamer'));\n\nconst selectVideoStreamerImporter: LazyVideoStreamerSelector = (source, userAgent) => {\n  if (source) {\n    const contentType = typeof source === 'string' ? null : source.contentType;\n    const streamUrl = typeof source === 'string' ? source : source.streamUrl;\n    const streamType = detectStreamType(streamUrl, contentType);\n    switch (streamType.name) {\n      case 'hls':\n        if (isSafari(userAgent)) {\n          return HtmlVideoStreamer;\n        } else {\n          return HlsjsVideoStreamer;\n        }\n      case 'dash':\n        return ShakaVideoStreamer;\n      default:\n        return BasicVideoStreamer;\n    }\n  } else {\n    return () => BasicVideoStreamer;\n  }\n};\n\nexport default selectVideoStreamerImporter;\n","// @flow\nimport type { CompatibleStreamSelector } from '../CompoundVideoStreamer';\nimport { StreamResourceResolutionError } from '../CompoundVideoStreamer';\nimport { isMicrosoft, isResourceFairPlay, isResourcePlayReady, isResourceWidevine, isSafari } from '../helpers';\n\nconst selectCompatibleDrmStream: CompatibleStreamSelector = (alternativeStreamResources, userAgent) => {\n  const matcher = isSafari(userAgent)\n    ? isResourceFairPlay\n    : isMicrosoft(userAgent)\n    ? isResourcePlayReady\n    : isResourceWidevine;\n  const matchingStream = alternativeStreamResources.find(matcher);\n  if (matchingStream) {\n    return matchingStream;\n  } else if (alternativeStreamResources.length) {\n    if (isSafari(userAgent)) {\n      const message =\n        'The browser detected is Safari. Only HLS with FairPlay DRM is supported. ' +\n        'Found no stream resource with contentType match for HLS and drmType match for FairPlay.';\n      throw new StreamResourceResolutionError(message, 'FairPlay', alternativeStreamResources);\n    } else if (isMicrosoft(userAgent)) {\n      const message =\n        'The browser detected is Microsoft Edge or Internet Explorer 11, supporting PlayReady DRM. ' +\n        'Found no stream resource with drmType match for PlayReady.';\n      throw new StreamResourceResolutionError(message, 'PlayReady', alternativeStreamResources);\n    } else {\n      const message =\n        'The browser detected is assumed to support Widevine DRM (Chrome, Firefox and derivatives). ' +\n        'Found no stream resource with drmType match for Widevine.';\n      throw new StreamResourceResolutionError(message, 'PlayReady', alternativeStreamResources);\n    }\n  } else {\n    throw new StreamResourceResolutionError('No alternative stream resources were specified.');\n  }\n};\n\nexport default selectCompatibleDrmStream;\n","// @flow\n//$FlowFixMe Flow React types are not up to date.\nimport React, { Suspense, type ComponentType } from 'react';\nimport type { AdvancedPlaybackSource, PlaybackSource } from '../types';\nimport { PlaybackError } from '../types';\nimport selectVideoStreamerImporter from './hlsjs-shaka-html/lazyVideoStreamerSelector';\nimport selectCompatibleDrmStream from './playready-widevine-fairplay/compatibleStreamSelector';\nimport memoize from 'memoize-one';\n\ntype UnencryptedStreamResource = {|\n  streamUrl: string,\n  contentType: string\n|};\n\ntype EncryptedStreamResource = {|\n  streamUrl: string,\n  contentType: string,\n  licenseUrl: string,\n  drmType: string\n|};\n\nexport type StreamResource = UnencryptedStreamResource | EncryptedStreamResource;\n\nexport type MultiTechPlaybackSource = AdvancedPlaybackSource & {\n  alternativeStreamResources?: Array<StreamResource>\n};\n\nexport type CompatibleStreamSelector = (\n  alternativeStreamResources: Array<StreamResource>,\n  userAgent: string\n) => StreamResource;\n\nexport type LazyVideoStreamerSelector = (source?: PlaybackSource | null, userAgent: string) => ComponentType<any>;\n\ntype Props = {\n  source?: MultiTechPlaybackSource | string,\n  onPlaybackError?: PlaybackError => void\n};\n\nexport class StreamResourceResolutionError extends PlaybackError {\n  constructor(message: string, supportedDrmType?: string, resources?: Array<StreamResource>) {\n    const generalMessage =\n      ' In order to select the appropriate stream and DRM technology for the current browser, ' +\n      'alternative stream resources must be specified with recognizable contentType and drmType properties. Refer ' +\n      'the Replay documentation for a listing of the supported and recognized stream content types and DRM types.';\n    super('STREAM_ERROR_TECHNOLOGY_UNSUPPORTED', message + generalMessage);\n    this.supportedDrmType = supportedDrmType;\n    this.availableResources = resources;\n  }\n  supportedDrmType: ?string;\n  availableResources: ?Array<StreamResource>;\n}\n\nconst normalizeSource = memoize(\n  (source: ?(string | MultiTechPlaybackSource)): ?MultiTechPlaybackSource =>\n    typeof source === 'string' ? { streamUrl: source } : source\n);\n\nconst mergeAndMemoize = memoize(<A, B>(a: A, b: B) => {\n  return { ...a, ...b };\n});\n\nconst mergeAndMemoizePropsWithSource = memoize((props: Props, source: MultiTechPlaybackSource) => {\n  return { ...props, source };\n});\n\nexport const createVideoStreamerResolver = (\n  selectCompatibleStream: CompatibleStreamSelector,\n  selectLazyVideoStreamer: LazyVideoStreamerSelector\n) => {\n  return (props: Props) => {\n    let source = normalizeSource(props.source);\n    const alternativeStreamResources = source && typeof source !== 'string' ? source.alternativeStreamResources : null;\n    if (Array.isArray(alternativeStreamResources)) {\n      try {\n        source = mergeAndMemoize(source, selectCompatibleStream(alternativeStreamResources, navigator.userAgent));\n      } catch (err) {\n        if (err instanceof StreamResourceResolutionError) {\n          if (props.onPlaybackError) {\n            props.onPlaybackError(err);\n          }\n          source = null;\n        } else {\n          throw err;\n        }\n      }\n    }\n    if (source) {\n      const VideoStreamer = selectLazyVideoStreamer(source, navigator.userAgent);\n      const modifiedProps = mergeAndMemoizePropsWithSource(props, source);\n      if (VideoStreamer) {\n        return (\n          <Suspense fallback={<div />}>\n            <VideoStreamer {...modifiedProps} />\n          </Suspense>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n};\n\nconst CompoundVideoStreamer = createVideoStreamerResolver(selectCompatibleDrmStream, selectVideoStreamerImporter);\nexport default CompoundVideoStreamer;\n","// @flow\nimport Hls from 'hls.js';\nimport type { HlsjsInstanceKeeper, HlsjsVideoStreamerConfiguration } from './HlsjsVideoStreamer';\nimport { PlaybackError } from '../types';\n\nexport function broadcastHlsInstance(instanceKeeper: HlsjsInstanceKeeper, preposition: 'on' | 'off') {\n  const { hls } = instanceKeeper;\n  hls && instanceKeeper.subscribers.forEach(subscriber => subscriber(hls, preposition));\n}\n\nexport function hlsjsSetup(\n  videoElement: HTMLVideoElement,\n  configuration: ?HlsjsVideoStreamerConfiguration\n): Promise<Hls> {\n  return new Promise((resolve, reject) => {\n    if (Hls.isSupported()) {\n      const customConfiguration = configuration && configuration.hlsjs && configuration.hlsjs.customConfiguration;\n      const hlsConfig: any = {\n        autoStartLoad: false,\n        debug: configuration && configuration.logLevel === 'DEBUG',\n        enableWorker: false,\n        ...customConfiguration\n      };\n      const hls = new Hls(hlsConfig);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        resolve(hls);\n      });\n      hls.attachMedia(videoElement);\n    } else {\n      reject(\n        new PlaybackError('STREAM_ERROR_TECHNOLOGY_UNSUPPORTED', 'hlsjs', 'Hls.js is not supported in this browser.')\n      );\n    }\n  });\n}\n\nexport function hlsjsCleanup(instanceKeeper: HlsjsInstanceKeeper) {\n  const { hls } = instanceKeeper;\n  if (hls) {\n    hls.stopLoad();\n    broadcastHlsInstance(instanceKeeper, 'off');\n    return Promise.resolve(hls.destroy());\n  } else {\n    return Promise.resolve();\n  }\n}\n","// @flow\nimport type { PlayMode } from '../types';\nimport Hls from 'hls.js';\nimport type { StreamRangeHelper } from '../common/types';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\nconst dawnOfTime = new Date(0);\nconst minimumDvrLength = 100; // seconds\nconst defaultLiveEdgeMargin = 10; // seconds\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\nfunction resolvePlayMode(duration: number, isLive: boolean): PlayMode {\n  if (isLive) {\n    if (duration === Infinity || duration === 0 || duration < minimumDvrLength) {\n      return 'live';\n    } else {\n      return 'livedvr';\n    }\n  } else {\n    return 'ondemand';\n  }\n}\n\nfunction getAbsolutePositions(\n  isLive: boolean,\n  startDateTime: ?Date,\n  position: number\n): { absolutePosition: Date, absoluteStartPosition: Date } {\n  if (isLive) {\n    if (!(startDateTime instanceof Date) || isNaN(startDateTime)) {\n      const absolutePosition = new Date();\n      const absoluteStartPosition = new Date(absolutePosition.getTime() - position * 1000);\n      return {\n        absolutePosition,\n        absoluteStartPosition\n      };\n    } else {\n      return {\n        absolutePosition: new Date(startDateTime.getTime() + position * 1000),\n        absoluteStartPosition: startDateTime\n      };\n    }\n  } else {\n    return {\n      absolutePosition: dawnOfTime,\n      absoluteStartPosition: dawnOfTime\n    };\n  }\n}\n\nfunction getIsAtLiveEdge(hls, videoElement, isLive, liveMargin) {\n  if (isLive) {\n    if (hls.liveSyncPosition) {\n      return videoElement.currentTime > hls.liveSyncPosition - liveMargin;\n    } else if (hls.config && hls.config.liveSyncDuration) {\n      return videoElement.currentTime > videoElement.duration - (hls.config.liveSyncDuration + liveMargin);\n    } else if (hls.config && hls.config.liveSyncDurationCount) {\n      return videoElement.currentTime > videoElement.duration - (hls.config.liveSyncDurationCount * 10 + liveMargin);\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nconst getStreamRangeHelper = (\n  videoElement: HTMLVideoElement,\n  instanceKeeper: HlsjsInstanceKeeper,\n  configuration: ?{ liveEdgeMargin?: ?number }\n): StreamRangeHelper => {\n  const liveMargin = (configuration && configuration.liveEdgeMargin) || defaultLiveEdgeMargin;\n  let levelDuration = 0;\n  let streamStartDate: ?Date;\n  let isLive = false;\n  let hls;\n\n  function calculateNewState() {\n    let position;\n\n    if (levelDuration) {\n      position = Math.max((videoElement.currentTime || 0) - Math.max(videoElement.duration - levelDuration, 0), 0);\n    } else {\n      position = videoElement.currentTime || 0;\n    }\n    const duration = levelDuration || videoElement.duration;\n    const { absolutePosition, absoluteStartPosition } = getAbsolutePositions(isLive, streamStartDate, position);\n    const playMode = resolvePlayMode(duration, isLive);\n    const isAtLiveEdge = hls && getIsAtLiveEdge(hls, videoElement, isLive, liveMargin);\n\n    return {\n      position,\n      duration,\n      playMode,\n      isAtLiveEdge,\n      absolutePosition,\n      absoluteStartPosition\n    };\n  }\n\n  function adjustForDvrStartOffset() {\n    /* Handled by hls.js itself? */\n  }\n\n  function setPosition(newPosition: number) {\n    if (\n      !(\n        isNaN(newPosition) ||\n        newPosition === Infinity ||\n        isNaN(videoElement.duration) ||\n        videoElement.duration === Infinity\n      )\n    ) {\n      if (levelDuration) {\n        videoElement.currentTime = newPosition + videoElement.duration - levelDuration;\n      } else {\n        videoElement.currentTime = newPosition;\n      }\n    }\n  }\n\n  function gotoLive() {\n    if (isLive && hls) {\n      if (hls.liveSyncPosition) {\n        videoElement.currentTime = hls.liveSyncPosition;\n      } else if (hls.config && hls.config.liveSyncDuration) {\n        videoElement.currentTime = videoElement.duration - (hls.config.liveSyncDuration + liveMargin);\n      } else if (hls.config && hls.config.liveSyncDurationCount) {\n        videoElement.currentTime = videoElement.duration - (hls.config.liveSyncDurationCount * 10 + liveMargin);\n      } else {\n        videoElement.currentTime = videoElement.duration - liveMargin;\n      }\n    }\n  }\n\n  function reset() {\n    streamStartDate = null;\n    levelDuration = 0;\n    isLive = false;\n  }\n\n  const hlsjsEventHandlers = {\n    [Hls.Events.MANIFEST_LOADING]: () => reset,\n    [Hls.Events.LEVEL_LOADED]: (evt, data) => {\n      isLive = data.details.live;\n      levelDuration = data.details.totalduration;\n      // updateDuration();\n      const programDateTime =\n        data.details &&\n        data.details.fragments &&\n        data.details.fragments[0] &&\n        data.details.fragments[0].programDateTime;\n      if (programDateTime) {\n        streamStartDate = new Date(programDateTime);\n        // updatePosition();\n      }\n    }\n  };\n\n  function onHlsInstance(hlsInstance, preposition) {\n    Object.entries(hlsjsEventHandlers).forEach(([name, handler]) => {\n      // $FlowFixMe\n      hlsInstance[preposition](name, handler);\n      if (preposition === 'on') {\n        hls = hlsInstance;\n      }\n    });\n  }\n\n  instanceKeeper.subscribers.push(onHlsInstance);\n\n  return {\n    adjustForDvrStartOffset,\n    calculateNewState,\n    setPosition,\n    gotoLive\n  };\n};\n\nexport default getStreamRangeHelper;\n","// @flow\nimport type { PlaybackSource, VideoStreamerConfiguration } from '../types';\nimport Hls from 'hls.js';\nimport { PlaybackError } from '../types';\nimport { broadcastHlsInstance, hlsjsCleanup, hlsjsSetup } from './hlsjsSetup';\nimport type { HlsjsInstanceKeeper, HlsjsVideoStreamerConfiguration } from './HlsjsVideoStreamer';\nimport normalizeSource from '../common/sourceNormalizer';\n\ntype Props<C: VideoStreamerConfiguration> = {\n  source?: ?PlaybackSource,\n  configuration?: ?C\n};\n\nconst getSourceChangeHandler = (instanceKeeper: HlsjsInstanceKeeper) => <\n  C: HlsjsVideoStreamerConfiguration,\n  P: Props<C>\n>(\n  nextProps: P,\n  prevProps?: P\n): Promise<any> => {\n  const { videoElement } = instanceKeeper;\n  hlsjsCleanup(instanceKeeper);\n  const source = normalizeSource(nextProps.source);\n  if (source) {\n    return hlsjsSetup(videoElement, nextProps.configuration).then(hls => {\n      instanceKeeper.hls = hls;\n      // window.hls = hls;\n      broadcastHlsInstance(instanceKeeper, 'on');\n      return new Promise((resolve, reject) => {\n        const onMediaLoaded = () => {\n          hls.off(Hls.Events.MANIFEST_PARSED, onMediaLoaded);\n          try {\n            if (source.startPosition) {\n              hls.startLoad(source.startPosition);\n            } else {\n              hls.startLoad();\n            }\n            resolve();\n          } catch (e) {\n            reject(new PlaybackError('STREAM_ERROR', 'hlsjs', 'Stream load start failed.', 'FATAL', e));\n          }\n        };\n        try {\n          hls.on(Hls.Events.MANIFEST_PARSED, onMediaLoaded);\n          hls.loadSource(source.streamUrl);\n        } catch (e) {\n          reject(new PlaybackError('STREAM_ERROR', 'hlsjs', 'Stream load failed.', 'FATAL', e));\n        }\n      });\n    });\n  } /* else if (prevProps && prevProps.source) {\n    // And no new source.\n    return Promise.resolve(instanceKeeper.hls && instanceKeeper.hls.stopLoad());\n  }*/ else {\n    return Promise.resolve();\n  }\n};\n\nexport default getSourceChangeHandler;\n","// @flow\nimport type { AvailableTrack, VideoStreamState } from '../types';\nimport type { AudioTrackManager } from '../common/types';\nimport type { HlsjsAudioTrack } from 'hls.js';\nimport Hls from 'hls.js';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\n// http://sample.vodobox.com/planete_interdite/planete_interdite_alternate.m3u8\n\nconst getDistinctPseudoTracks = (audioTracks: ?Array<HlsjsAudioTrack>): Array<AvailableTrack> => {\n  const foundKeys = [];\n  return audioTracks\n    ? audioTracks\n        .filter(track => {\n          const key = `${track.lang || ''}!${track.name || ''}`;\n          const isNotAdded = foundKeys.indexOf(key) < 0;\n          if (isNotAdded) {\n            foundKeys.push(key);\n          }\n          return isNotAdded;\n        })\n        .map(track => ({\n          id: track.id,\n          language: track.lang || 'unknown',\n          kind: '',\n          label: track.name || 'unknown',\n          origin: 'in-stream'\n        }))\n    : [];\n};\n\nconst equalOrNoneSpecified = (a: ?(string | number), b: ?(string | number)) => (!a && !b) || a === b;\nconst equalOrNotSpecified = (a: ?(string | number), b: ?(string | number)) => !a || !b || a === b;\n\nconst isAudioTrackListsDifferent = (a: Array<AvailableTrack>, b: Array<AvailableTrack>) => {\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (\n        !equalOrNoneSpecified(a[i].id, b[i].id) ||\n        !equalOrNoneSpecified(a[i].language, b[i].language) ||\n        !equalOrNoneSpecified(a[i].label, b[i].label)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst getAudioTrackManager = (\n  instanceKeeper: HlsjsInstanceKeeper,\n  update: VideoStreamState => void\n): AudioTrackManager => {\n  let audioTracks: Array<AvailableTrack> = [];\n  let hls;\n\n  function mapAudioTracks() {\n    if (hls) {\n      const currentTracks = getDistinctPseudoTracks(hls.audioTracks);\n      if (isAudioTrackListsDifferent(currentTracks, audioTracks)) {\n        audioTracks = currentTracks;\n      }\n    }\n  }\n\n  function updateStreamStateProps() {\n    let currentAudioTrack = null;\n    if (hls) {\n      const currentHlsAudioTrack = hls.audioTracks.filter(ht => ht.id === hls.audioTrack)[0];\n      if (currentHlsAudioTrack) {\n        const { name, lang } = currentHlsAudioTrack;\n        currentAudioTrack = audioTracks.filter(({ label, language }) => label === name && language === lang)[0];\n      }\n    }\n    update({ audioTracks, currentAudioTrack });\n  }\n\n  function refresh() {\n    mapAudioTracks();\n    updateStreamStateProps();\n  }\n\n  function handleTrackChange() {\n    mapAudioTracks();\n    updateStreamStateProps();\n  }\n\n  function handleSelectedAudioTrackChange(selectedAudioTrack: ?AvailableTrack) {\n    const st = selectedAudioTrack;\n    if (hls && hls.audioTracks && st) {\n      const groupId = (hls.audioTracks[hls.audioTrack] || {}).groupId;\n      const matchingTrack = hls.audioTracks.filter(\n        ht =>\n          equalOrNotSpecified(ht.groupId, groupId) &&\n          equalOrNotSpecified(ht.name, st.label) &&\n          equalOrNotSpecified(ht.lang, st.language)\n      )[0];\n      if (matchingTrack) {\n        hls.audioTrack = matchingTrack.id;\n      }\n    }\n  }\n\n  function reset() {\n    audioTracks = [];\n  }\n\n  function handleSourceChange() {\n    refresh();\n  }\n\n  const hlsjsEventHandlers = {\n    [Hls.Events.MANIFEST_LOADING]: () => reset,\n    [Hls.Events.MANIFEST_PARSED]: refresh,\n    [Hls.Events.AUDIO_TRACK_SWITCHED]: handleTrackChange\n  };\n\n  function onHlsInstance(hlsInstance, preposition) {\n    Object.entries(hlsjsEventHandlers).forEach(([name, handler]) => {\n      // $FlowFixMe\n      hlsInstance[preposition](name, handler);\n      if (preposition === 'on') {\n        hls = hlsInstance;\n      }\n    });\n  }\n\n  instanceKeeper.subscribers.push(onHlsInstance);\n\n  return {\n    cleanup: () => {},\n    handleSourceChange,\n    handleSelectedAudioTrackChange\n  };\n};\n\nexport default getAudioTrackManager;\n","// @flow\n\n// https://github.com/video-dev/hls.js/issues/2147\n// https://github.com/video-dev/hls.js/issues/2198\n\nimport type { AvailableTrack, PlaybackSource, SourceTrack, VideoStreamState } from '../types';\nimport { emptyTracks } from '../common/playbackLifeCycleManager';\nimport { isShallowEqual } from '../../../common';\nimport type { TextTrackManager, TrackElementData } from '../common/types';\nimport normalizeSource from '../common/sourceNormalizer';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\nexport type ManagedTextTrack = {\n  isBlacklisted: boolean,\n  sourceTrack: ?SourceTrack,\n  videoElementTrack?: ?TextTrack,\n  selectableTrack: ?AvailableTrack,\n  trackElementData?: ?TrackElementData,\n  loadPromise?: Promise<?TextTrack>,\n  isLoaded: boolean,\n  error?: any\n};\n\ntype HTMLTextTrackMode = 'disabled' | 'hidden' | 'showing';\n\n/*export type TextTracksStateProps = {\n  currentTextTrack?: ?AvailableTrack,\n  textTracks?: Array<AvailableTrack>\n};*/\n\nconst trackModeMappings = ['disabled', 'hidden', 'showing']; // Index corresponds with \"enum\" value.\n\nfunction getTrackMode(textTrack: TextTrack) {\n  const mode = textTrack.mode;\n  return typeof mode === 'number' ? trackModeMappings[mode] : mode;\n}\n\nfunction setTrackMode(textTrack: TextTrack, newMode: HTMLTextTrackMode) {\n  // $FlowFixMe Some browsers use numbers mapping to modes.\n  textTrack.mode = typeof textTrack.mode === 'number' ? trackModeMappings.indexOf(newMode) : newMode;\n}\n\nfunction isEqual(a: any, b: any): boolean {\n  return (Number.isNaN(a) && Number.isNaN(b)) || (a == null && b == null) || a === b;\n}\n\nfunction isVideoElementTrackValid(textTrack: TextTrack) {\n  // Detecting empty dummy tracks originating from HLS streams in Safari.\n  return (\n    (textTrack.kind !== 'metadata' && !('inBandMetadataTrackDispatchType' in textTrack)) ||\n    (textTrack.cues && textTrack.cues.length) ||\n    textTrack.label ||\n    textTrack.language\n  );\n}\n\nfunction isSourceTracksEqual(a: ?SourceTrack, b: ?SourceTrack): boolean {\n  if (a && b) {\n    if (a.cues && b.cues) {\n      const ac = a.cues,\n        bc = b.cues;\n      if (ac.length === bc.length) {\n        const isCuesDifferent =\n          ac.filter(\n            (cue, index) =>\n              cue.start === bc[index].start && cue.end === bc[index].end && cue.content === bc[index].content\n          ).length !== ac.length;\n        if (isCuesDifferent) {\n          return false;\n        }\n      }\n    }\n    return (\n      isEqual(a.language, b.language) && isEqual(a.kind, b.kind) && isEqual(a.label, b.label) && isEqual(a.src, b.src)\n    );\n  } else {\n    return isEqual(a, b);\n  }\n}\n\nfunction createSelectableTrack(\n  id: number,\n  origin: 'in-stream' | 'side-loaded',\n  videoElementTrack: TextTrack\n): AvailableTrack {\n  return {\n    id,\n    kind: videoElementTrack.kind || '',\n    label: videoElementTrack.label || '',\n    language: videoElementTrack.language || '',\n    origin\n  };\n}\n\nconst getHlsjsTextTrackManager = (\n  videoElement: HTMLVideoElement,\n  instanceKeeper: HlsjsInstanceKeeper,\n  update: <T: VideoStreamState>(props: T) => void,\n  updateTrackElementData: (Array<TrackElementData>) => void\n): TextTrackManager => {\n  // Should use TextTracksStateProps above.\n  let managedTracks: Array<ManagedTextTrack> = [];\n  let currentTextTrack = null;\n  let selectableTextTracks = emptyTracks;\n  let unique = 0;\n  const Cue = window.VTTCue || window.TextTrackCue;\n\n  function notifyPropertyChanges() {\n    currentTextTrack = managedTracks\n      .filter(m => m.videoElementTrack != null && getTrackMode(m.videoElementTrack) === 'showing')\n      .map(m => m.selectableTrack)[0];\n\n    const textTracks = managedTracks.filter(m => m.selectableTrack).map(m => m.selectableTrack);\n    if (isShallowEqual(textTracks, selectableTextTracks)) {\n      // $FlowFixMe Complaints about null entries, despite filter above.\n      update({\n        currentTextTrack,\n        textTracks: selectableTextTracks\n      });\n    } else {\n      selectableTextTracks = textTracks;\n      update({\n        currentTextTrack,\n        textTracks\n      });\n    }\n  }\n\n  function addTracks(sourceTracks?: Array<SourceTrack>) {\n    if (Array.isArray(sourceTracks)) {\n      videoElement.textTracks.removeEventListener('addtrack', handleTrackAdd);\n      videoElement.textTracks.removeEventListener('removetrack', handleTrackRemove);\n\n      const freshSourceTracks = sourceTracks.filter(sourceTrack => {\n        const managedTrackMatches = managedTracks.filter(managedTrack => {\n          return isSourceTracksEqual(managedTrack.sourceTrack, sourceTrack) && !managedTrack.isBlacklisted;\n        });\n        if (managedTrackMatches.length === 0) {\n          return true;\n        } else {\n          const alreadyAddedTrack = managedTrackMatches[0];\n          alreadyAddedTrack.sourceTrack = sourceTrack;\n          alreadyAddedTrack.isBlacklisted = false;\n          alreadyAddedTrack.isLoaded = true; // Is this assumption correct?\n          return false;\n        }\n      });\n\n      const freshManagedTracks: Array<ManagedTextTrack> = freshSourceTracks.map(sourceTrack => {\n        const id = ++unique;\n        if (Array.isArray(sourceTrack.cues)) {\n          const cues = sourceTrack.cues;\n          const videoElementTrack = videoElement.addTextTrack('subtitles', sourceTrack.label, sourceTrack.language);\n          cues.forEach(cue => {\n            videoElementTrack.addCue(new Cue(cue.start, cue.end, cue.content));\n          });\n          return {\n            id,\n            sourceTrack,\n            isBlacklisted: false,\n            videoElementTrack,\n            selectableTrack: createSelectableTrack(id, 'side-loaded', videoElementTrack),\n            loadPromise: Promise.resolve(videoElementTrack),\n            isLoaded: true\n          };\n        } else {\n          const trackElementData: TrackElementData = {\n            src: sourceTrack.src,\n            srclang: sourceTrack.language,\n            kind: sourceTrack.kind || 'subtitles',\n            label: sourceTrack.label\n          };\n          const loadPromise = new Promise(resolve => {\n            trackElementData.onRef = (trackElement: ?HTMLTrackElement) => {\n              const t = trackElement;\n              if (t) {\n                setTrackMode(t.track, 'hidden');\n                const handleLoad = () => {\n                  t.removeEventListener('load', handleLoad);\n                  t.removeEventListener('error', handleError);\n                  resolve(t.track);\n                };\n                const handleError = (e: Event) => {\n                  t.removeEventListener('load', handleLoad);\n                  t.removeEventListener('error', handleError);\n                  resolve();\n                };\n                t.addEventListener('load', handleLoad);\n                t.addEventListener('error', handleError);\n              }\n            };\n          });\n          const managedTrack = {\n            id,\n            sourceTrack,\n            isBlacklisted: false,\n            videoElementTrack: undefined,\n            selectableTrack: undefined,\n            trackElementData,\n            loadPromise,\n            isLoaded: false\n          };\n          loadPromise.then(videoElementTrack => {\n            if (videoElementTrack != null) {\n              managedTrack.videoElementTrack = videoElementTrack;\n              managedTrack.selectableTrack = createSelectableTrack(id, 'side-loaded', videoElementTrack);\n            }\n            managedTrack.isLoaded = true;\n          });\n          return managedTrack;\n        }\n      });\n\n      managedTracks = managedTracks.concat(freshManagedTracks);\n\n      updateTrackElementData(\n        // $FlowFixMe Filtering away null/undefined isn't recognised.\n        managedTracks.filter(t => t.trackElementData && !t.isBlacklisted).map(t => t.trackElementData)\n      );\n\n      return Promise.all(freshManagedTracks.map(managedTrack => managedTrack.loadPromise)).then(() => {\n        videoElement.textTracks.addEventListener('addtrack', handleTrackAdd);\n        videoElement.textTracks.addEventListener('removetrack', handleTrackRemove);\n        notifyPropertyChanges();\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function updateFromVideoElement(textTracksList: TextTrackList) {\n    if (textTracksList.length === 0 && managedTracks.length === 0) {\n      return;\n    }\n\n    const videoElementTracks: Array<TextTrack> = [];\n    for (let i = 0; i < textTracksList.length; i++) {\n      // Awkward for-loop because Flow doesn't understand Array.from().\n      videoElementTracks.push(textTracksList[i]);\n    }\n\n    const cleanedUpManagedTracks = managedTracks.filter(managedTrack => {\n      return videoElementTracks.indexOf(managedTrack.videoElementTrack) >= 0;\n    });\n\n    //const isRemoving = cleanedUpManagedTracks.length < managedTracks.length;\n    //const isAdding = videoElementTracks.length > cleanedUpManagedTracks.length;\n\n    if (videoElementTracks.length > cleanedUpManagedTracks.length) {\n      const freshVideoElementTracks = videoElementTracks.filter(\n        videoElementTrack =>\n          isVideoElementTrackValid(videoElementTrack) &&\n          cleanedUpManagedTracks.filter(function(managedTrack) {\n            return videoElementTrack === managedTrack.videoElementTrack;\n          }).length === 0\n      );\n      const freshManagedTracks: Array<ManagedTextTrack> = freshVideoElementTracks.map(videoElementTrack => {\n        const id = ++unique;\n        return {\n          id,\n          sourceTrack: null,\n          videoElementTrack,\n          isBlacklisted: false,\n          selectableTrack: createSelectableTrack(id, 'in-stream', videoElementTrack),\n          isLoaded: true\n        };\n      });\n      managedTracks = cleanedUpManagedTracks.concat(freshManagedTracks);\n    } else {\n      managedTracks = cleanedUpManagedTracks;\n    }\n  }\n\n  function cleanupTracks(isNewSession: boolean) {\n    updateFromVideoElement(videoElement.textTracks);\n    managedTracks.forEach(m => {\n      // Blacklisting and removing side-loaded tracks.\n      if (isNewSession || m.sourceTrack != null) {\n        m.isBlacklisted = true;\n      }\n      if (m.videoElementTrack != null && isNewSession) {\n        const vt = m.videoElementTrack;\n        if (vt.cues) {\n          while (vt.cues.length) {\n            vt.removeCue(vt.cues[0]);\n          }\n        }\n        setTrackMode(vt, 'disabled');\n      }\n      m.selectableTrack = null;\n    });\n    selectableTextTracks = emptyTracks;\n    updateTrackElementData([]);\n  }\n\n  function handleSourcePropChange(newProps: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    updateFromVideoElement(videoElement.textTracks);\n    const newTracks = newProps.source && Array.isArray(newProps.textTracks) ? newProps.textTracks : [];\n    const source = normalizeSource(newProps.source);\n    if (source && source.textTracks) {\n      addTracks(newTracks.concat(source.textTracks));\n    } else {\n      addTracks(newTracks);\n    }\n  }\n\n  function handleTextTracksPropChange(newProps: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    cleanupTracks(false);\n    const newTracks = newProps.source && Array.isArray(newProps.textTracks) ? newProps.textTracks : [];\n    addTracks(newTracks);\n  }\n\n  function clear() {\n    cleanupTracks(true);\n  }\n\n  function handleSelectedTextTrackChange(selectedTextTrack: ?AvailableTrack) {\n    managedTracks\n      .filter(mt => mt.videoElementTrack && getTrackMode(mt.videoElementTrack) === 'showing')\n      .forEach(mt => mt.videoElementTrack && setTrackMode(mt.videoElementTrack, 'hidden'));\n    if (selectedTextTrack) {\n      if (instanceKeeper.hls) {\n        instanceKeeper.hls.subtitleDisplay = true;\n      }\n      const managedTrack = managedTracks.filter(mt => mt.selectableTrack === selectedTextTrack)[0];\n      if (managedTrack && managedTrack.videoElementTrack) {\n        setTrackMode(managedTrack.videoElementTrack, 'showing');\n      }\n    } else if (instanceKeeper.hls) {\n      instanceKeeper.hls.subtitleDisplay = false;\n    }\n    notifyPropertyChanges();\n  }\n\n  function handleTrackAdd() {\n    updateFromVideoElement(videoElement.textTracks);\n    notifyPropertyChanges();\n  }\n\n  function handleTrackRemove() {\n    updateFromVideoElement(videoElement.textTracks);\n    notifyPropertyChanges();\n  }\n\n  function cleanup() {\n    videoElement.textTracks.removeEventListener('addtrack', handleTrackAdd);\n    videoElement.textTracks.removeEventListener('removetrack', handleTrackRemove);\n  }\n\n  function initialize() {\n    videoElement.textTracks.addEventListener('addtrack', handleTrackAdd);\n    videoElement.textTracks.addEventListener('removetrack', handleTrackRemove);\n  }\n\n  initialize();\n\n  return {\n    handleSelectedTextTrackChange,\n    handleTextTracksPropChange,\n    handleSourcePropChange,\n    clear,\n    cleanup\n  };\n};\n\nexport default getHlsjsTextTrackManager;\n","// @flow\nimport type { InitialPlaybackProps, VideoStreamState } from '../types';\nimport { isShallowEqual } from '../../../common';\nimport type { HlsjsQualityLevel } from 'hls.js';\nimport Hls from 'hls.js';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\ntype PropsWithInitial = {\n  initialPlaybackProps?: InitialPlaybackProps\n};\n\nfunction getBitrateAsKbps(level: HlsjsQualityLevel) {\n  return (level && Math.ceil(level.bitrate / 1000)) || 0;\n}\n\nconst getHlsjsBitrateManager = <P: PropsWithInitial>(\n  streamer: { props: P },\n  instanceKeeper: HlsjsInstanceKeeper,\n  updateStreamState: VideoStreamState => void,\n  log?: ?(string, any) => void\n) => {\n  let previousBitrates = [];\n  let hls;\n\n  function updateBitrateProps(hlsEvent, eventData) {\n    if (hls) {\n      let bitrates = Array.isArray(hls.levels) ? hls.levels.map(getBitrateAsKbps) : [];\n      if (isShallowEqual(previousBitrates, bitrates)) {\n        bitrates = previousBitrates;\n      }\n      const currentLevel =\n        hlsEvent === Hls.Events.LEVEL_SWITCHED\n          ? eventData.level\n          : hls.currentLevel === -1\n          ? hls.startLevel\n          : hls.currentLevel;\n      if (currentLevel === -1) {\n        log && log('No hls.js level reported currently or selected for start.');\n        updateStreamState({\n          bitrates\n        });\n      } else {\n        const currentBitrate = getBitrateAsKbps(hls.levels[currentLevel]);\n        updateStreamState({\n          currentBitrate,\n          bitrates\n        });\n      }\n    }\n  }\n\n  function capBitrate(cap: ?number) {\n    if (hls) {\n      if (isNaN(cap) || cap === Infinity || cap == null || cap < 0) {\n        log && log('Resetting restrictions for bitrate.');\n        hls.autoLevelCapping = -1;\n        updateStreamState({ bitrateCap: null });\n      } else {\n        if (Array.isArray(hls.levels)) {\n          let reached = false;\n          for (let i = 0; i < hls.levels.length; i++) {\n            const bitrate = getBitrateAsKbps(hls.levels[i]);\n            if (bitrate === cap) {\n              hls.autoLevelCapping = i;\n              updateStreamState({ bitrateCap: getBitrateAsKbps(hls.levels[i]) });\n              log && log('Desired bitrate cap ' + cap + ' is equal to level on index ' + i + ' in hls.js.', hls.levels);\n              reached = true;\n              break;\n            } else if (bitrate > cap) {\n              if (i > 0) {\n                hls.autoLevelCapping = i - 1;\n                updateStreamState({ bitrateCap: getBitrateAsKbps(hls.levels[i - 1]) });\n                log &&\n                  log(\n                    'Desired bitrate cap ' + cap + ' is closest to level on index ' + (i - 1) + ' in hls.js.',\n                    hls.levels\n                  );\n              } else {\n                hls.autoLevelCapping = 0;\n                log &&\n                  log(\n                    'Desired bitrate cap ' +\n                      cap +\n                      ' appears to be lower than the lowest HLS level. Aligning to lowest level.',\n                    hls.levels\n                  );\n                updateStreamState({ bitrateCap: getBitrateAsKbps(hls.levels[0]) });\n              }\n              reached = true;\n              break;\n            }\n          }\n          if (!reached) {\n            log &&\n              log('Desired bitrate cap appears to be higher than the higher HLS level. Not applicable.', hls.levels);\n          }\n        } else {\n          log && log('Found no HLS levels from where bitrate capping can be applied.', hls.levels);\n        }\n      }\n    }\n  }\n\n  function fixBitrate(bitrate: ?(number | 'max' | 'min')) {\n    if (hls) {\n      if (bitrate === 'min') {\n        if (Array.isArray(hls.levels) && hls.levels.length > 0) {\n          hls.nextLevel = 0;\n          updateStreamState({ bitrateFix: getBitrateAsKbps(hls.levels[0]) });\n          log && log('Fixing bitrate to lowest level out of ' + hls.levels.length);\n        }\n      } else if (bitrate === 'max') {\n        if (Array.isArray(hls.levels) && hls.levels.length > 0) {\n          hls.nextLevel = hls.levels.length - 1;\n          updateStreamState({ bitrateFix: getBitrateAsKbps(hls.levels[hls.levels.length - 1]) });\n          log && log('Fixing bitrate to highest level out of ' + hls.levels.length);\n        }\n      } else if (bitrate == null || isNaN(bitrate) || bitrate < 0 || !bitrate) {\n        log && log('Resetting fixing of bitrate.');\n        hls.nextLevel = -1;\n        updateStreamState({ bitrateFix: null });\n      } else if (typeof bitrate === 'string') {\n        log &&\n          log(\n            'Unknown string specified for bitrate lock. Please use a value of type number if a bitrate specified by kbps is intended.',\n            bitrate\n          );\n      } else {\n        if (Array.isArray(hls.levels)) {\n          for (var i = 0; i < hls.levels.length; i++) {\n            if (getBitrateAsKbps(hls.levels[i]) === bitrate) {\n              hls.nextLevel = i;\n              log && log('Fixing bitrate to HLS level ' + i, hls.levels);\n              updateStreamState({ bitrateFix: bitrate });\n              return;\n            }\n          }\n          log &&\n            log(\n              \"Desired bitrate lock didn't match any bitrates specified in the hls.levels list. Not applied.\",\n              hls.levels\n            );\n        } else {\n          log && log('Found no HLS levels from where bitrate fixing can be applied.', hls.levels);\n        }\n      }\n    }\n  }\n\n  const hlsjsEventHandlers = {\n    [Hls.Events.MANIFEST_LOADING]: () => {\n      previousBitrates = [];\n    },\n    [Hls.Events.MANIFEST_PARSED]: updateBitrateProps,\n    [Hls.Events.LEVEL_SWITCHED]: updateBitrateProps,\n    [Hls.Events.LEVEL_UPDATED]: updateBitrateProps\n  };\n\n  function onHlsInstance(hlsInstance, preposition) {\n    Object.entries(hlsjsEventHandlers).forEach(([name, handler]) => {\n      // $FlowFixMe\n      hlsInstance[preposition](name, handler);\n      if (preposition === 'on') {\n        hls = hlsInstance;\n      }\n    });\n  }\n\n  instanceKeeper.subscribers.push(onHlsInstance);\n\n  return {\n    fixBitrate,\n    capBitrate\n  };\n};\n\nexport default getHlsjsBitrateManager;\n","// @flow\nimport Hls, { type HlsjsErrorData } from 'hls.js';\nimport { PlaybackError } from '../types';\n\nconst tech = 'hlsjs';\nconst ed = Hls.ErrorDetails;\n\nconst downloadErrors = [\n  ed.MANIFEST_LOAD_ERROR,\n  ed.MANIFEST_LOAD_TIMEOUT,\n  ed.LEVEL_LOAD_ERROR,\n  ed.LEVEL_LOAD_TIMEOUT,\n  ed.AUDIO_TRACK_LOAD_ERROR,\n  ed.AUDIO_TRACK_LOAD_TIMEOUT,\n  ed.FRAG_LOAD_ERROR,\n  ed.FRAG_LOOP_LOADING_ERROR,\n  ed.FRAG_LOAD_TIMEOUT,\n  ed.KEY_LOAD_ERROR,\n  ed.KEY_LOAD_TIMEOUT\n];\nconst decodeErrors = [\n  ed.MANIFEST_PARSING_ERROR,\n  ed.MANIFEST_INCOMPATIBLE_CODECS_ERROR,\n  ed.FRAG_DECRYPT_ERROR,\n  ed.BUFFER_ADD_CODEC_ERROR,\n  ed.FRAG_PARSING_ERROR\n];\n/*const generalErrors = [\n    t.BUFFER_APPEND_ERROR,\n    t.BUFFER_APPENDING_ERROR,\n    t.BUFFER_FULL_ERROR,\n    t.INTERNAL_EXCEPTION,\n    t.LEVEL_SWITCH_ERROR,\n    t.REMUX_ALLOC_ERROR\n];*/\n\nfunction buildMessage(data: HlsjsErrorData) {\n  const message = (data.type ? data.type + '/' : '') + (data.details || '');\n  if (typeof data.reason === 'string') {\n    return message + ': ' + data.reason;\n  } else {\n    return message;\n  }\n}\n\nexport function mapHlsjsError(isStarted: boolean, data: HlsjsErrorData) {\n  const severity = data.fatal ? 'FATAL' : 'WARNING';\n  const code =\n    (data && data.details && (downloadErrors.indexOf(data.details) >= 0 && 'STREAM_ERROR_DOWNLOAD')) ||\n    (decodeErrors.indexOf(data.details) >= 0 && 'STREAM_ERROR_DECODE') ||\n    'STREAM_ERROR';\n  return new PlaybackError(code, tech, buildMessage(data), severity, data);\n}\n","// @flow\nimport type { PlaybackLifeCycle, StreamRangeHelper } from '../common/types';\nimport getBasicVideoEventHandlers from '../BasicVideoStreamer/basicVideoEventHandlers';\nimport Hls, { type HlsjsErrorData } from 'hls.js';\nimport type { PlaybackProps, VideoStreamState } from '../types';\nimport type { BasicVideoEventHandlersProps } from '../BasicVideoStreamer/basicVideoEventHandlers';\nimport { mapHlsjsError } from './hlsjsErrorMapper';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\nconst getHlsjsEventHandlers = <P: BasicVideoEventHandlersProps>({\n  streamer,\n  videoElement,\n  instanceKeeper,\n  streamRangeHelper,\n  configuration,\n  applyProperties,\n  updateStreamState,\n  log\n}: {\n  streamer: {\n    props: P\n  },\n  videoElement: HTMLVideoElement,\n  instanceKeeper: HlsjsInstanceKeeper,\n  streamRangeHelper: StreamRangeHelper,\n  configuration: ?{ pauseUpdateInterval?: ?number },\n  applyProperties: PlaybackProps => void,\n  updateStreamState: VideoStreamState => void,\n  log?: string => void\n}) => {\n  const htmlVideoHandlers = getBasicVideoEventHandlers({\n    streamer,\n    videoElement,\n    streamRangeHelper,\n    configuration,\n    log,\n    applyProperties,\n    updateStreamState\n  });\n\n  const { videoElementEventHandlers, pauseStreamRangeUpdater } = htmlVideoHandlers;\n\n  let lifeCycleManager = {\n    setStage: (_: PlaybackLifeCycle) => {},\n    getStage: () => {}\n  };\n\n  function handleActualError(detail) {\n    log && log('hlsjs.error');\n    const playbackError = mapHlsjsError(lifeCycleManager.getStage() === 'started', detail);\n    if (streamer.props.onPlaybackError) {\n      streamer.props.onPlaybackError(playbackError);\n    }\n    if (videoElement.error) {\n      updateStreamState({ error: videoElement.error });\n    }\n    if (playbackError.severity === 'FATAL') {\n      lifeCycleManager.setStage('dead');\n      updateStreamState({ playState: 'inactive', isBuffering: false, isSeeking: false });\n    }\n    pauseStreamRangeUpdater.stop();\n  }\n\n  function setLifeCycleManager(manager: { setStage: PlaybackLifeCycle => void, getStage: () => PlaybackLifeCycle }) {\n    lifeCycleManager = manager;\n    htmlVideoHandlers.setLifeCycleManager(manager);\n  }\n\n  const hlsjsEventHandlers = {\n    [Hls.Events.ERROR]: (evt: any, data: HlsjsErrorData) => {\n      switch (data.details) {\n        case Hls.ErrorDetails.BUFFER_STALLED_ERROR:\n          updateStreamState({ isBuffering: true });\n          if (lifeCycleManager.getStage() === 'started') {\n            updateStreamState({ playState: 'buffering' });\n          }\n          break;\n        case Hls.ErrorDetails.BUFFER_SEEK_OVER_HOLE:\n        case Hls.ErrorDetails.BUFFER_NUDGE_ON_STALL:\n          break;\n        case Hls.ErrorDetails.MANIFEST_PARSING_ERROR:\n          if (data.url && !data.url.endsWith('undefined')) {\n            handleActualError(data);\n          }\n          break;\n        default:\n          handleActualError(data);\n      }\n    },\n    [Hls.Events.MANIFEST_LOADING]: () => {\n      log && log('hlsjs.loading');\n      if (lifeCycleManager.getStage() === 'new') {\n        lifeCycleManager.setStage('starting');\n        if (streamer.props.initialPlaybackProps) {\n          const { isMuted, volume } = streamer.props.initialPlaybackProps;\n          applyProperties({ isMuted, volume });\n        }\n        updateStreamState({\n          playState: 'starting',\n          isBuffering: true,\n          volume: videoElement.volume,\n          isMuted: videoElement.muted,\n          isPipAvailable: htmlVideoHandlers.isPipAvailable()\n        });\n      }\n    },\n    [Hls.Events.FRAG_BUFFERED]: () => {\n      updateStreamState({ isBuffering: false });\n    },\n    [Hls.Events.MANIFEST_PARSED]: () => {\n      log && log('hlsjs.parsed');\n      if (streamer.props.initialPlaybackProps) {\n        const { isPaused, bitrateFix, bitrateCap } = streamer.props.initialPlaybackProps;\n        if (isPaused) {\n          videoElement.pause();\n        }\n        applyProperties({ bitrateFix, bitrateCap });\n        if (bitrateFix == null) {\n          updateStreamState({ bitrateFix: null });\n        }\n        if (bitrateCap == null) {\n          updateStreamState({ bitrateCap: null });\n        }\n      } else {\n        updateStreamState({ bitrateFix: null, bitrateCap: null });\n      }\n      updateStreamState(streamRangeHelper.calculateNewState());\n    }\n  };\n\n  function onHlsInstance(hlsInstance, preposition) {\n    Object.entries(hlsjsEventHandlers).forEach(([name, handler]) => {\n      // $FlowFixMe\n      hlsInstance[preposition](name, handler);\n    });\n  }\n\n  instanceKeeper.subscribers.push(onHlsInstance);\n\n  const {\n    onCanPlay,\n    onPlaying,\n    onPause,\n    onSeeking,\n    onSeeked,\n    onDurationChange,\n    onTimeUpdate,\n    onVolumeChange,\n    onProgress,\n    onEnded,\n    onError // We still want HTML video element error mapping.\n  } = videoElementEventHandlers;\n  return {\n    videoElementEventHandlers: {\n      onCanPlay,\n      onPlaying,\n      onPause,\n      onSeeking,\n      onSeeked,\n      onDurationChange,\n      onTimeUpdate,\n      onVolumeChange,\n      onProgress,\n      onEnded,\n      onError\n    },\n    pauseStreamRangeUpdater,\n    setLifeCycleManager\n  };\n};\n\nexport default getHlsjsEventHandlers;\n","// @flow\nimport type { VideoStreamerImplProps } from '../types';\n\nimport createVideoStreamerComponent from '../common/createVideoStreamerComponent';\nimport { hlsjsCleanup } from './hlsjsSetup';\nimport getStreamRangeHelper from './hlsjsStreamRangeHelper';\nimport getSourceChangeHandler from './hlsjsSourceChangeHandler';\nimport getFilteredStreamStateUpdater from '../common/filteredStreamStateUpdater';\nimport { getPropertyApplier } from '../common/propertyApplier';\nimport type { SimplifiedVideoStreamer, StreamerImplementationParts, TrackElementData } from '../common/types';\nimport type { VideoStreamerConfiguration } from '../types';\nimport getPlaybackLifeCycleManager from '../common/playbackLifeCycleManager';\nimport { renderWithoutSource } from '../common/renderers';\nimport { getArrayLogger } from '../common/logger';\nimport getHlsjsAudioTrackManager from './hlsjsAudioTrackManager';\nimport Hls from 'hls.js';\nimport getHlsjsTextTrackManager from './hlsjsTextTrackManager';\nimport getHlsjsBitrateManager from './hlsjsBitrateManager';\nimport getHlsjsEventHandlers from './hlsjsEventHandlers';\n\nexport type HlsjsInstanceKeeper = {\n  hls?: Hls,\n  videoElement: HTMLVideoElement,\n  subscribers: Array<(Hls, 'on' | 'off') => void>\n};\n\nexport type HlsjsVideoStreamerConfiguration = VideoStreamerConfiguration & {\n  hlsjs: {\n    customConfiguration?: any\n  }\n};\nexport type HlsjsVideoStreamerProps = VideoStreamerImplProps<HlsjsVideoStreamerConfiguration>;\n\nfunction resolveImplementation(\n  streamer: SimplifiedVideoStreamer<HlsjsVideoStreamerConfiguration, HlsjsVideoStreamerProps>,\n  configuration: ?HlsjsVideoStreamerConfiguration,\n  videoElement: HTMLVideoElement,\n  onTrackElementDataChange: (Array<TrackElementData>) => void\n): Promise<StreamerImplementationParts<HlsjsVideoStreamerConfiguration, HlsjsVideoStreamerProps, HlsjsInstanceKeeper>> {\n  const instanceKeeper = {\n    videoElement,\n    subscribers: []\n  };\n\n  const streamRangeHelper = getStreamRangeHelper(videoElement, instanceKeeper, configuration);\n  const handleSourceChange = getSourceChangeHandler(instanceKeeper);\n  const updateStreamState = getFilteredStreamStateUpdater(streamer);\n\n  const textTrackManager = getHlsjsTextTrackManager(\n    videoElement,\n    instanceKeeper,\n    updateStreamState,\n    onTrackElementDataChange\n  );\n  const audioTrackManager = getHlsjsAudioTrackManager(instanceKeeper, updateStreamState);\n  const bitrateManager = getHlsjsBitrateManager(\n    streamer,\n    instanceKeeper,\n    updateStreamState,\n    getArrayLogger(window, 'bitrateManager').log\n  );\n\n  const applyProperties = getPropertyApplier(\n    videoElement,\n    streamRangeHelper,\n    textTrackManager,\n    audioTrackManager,\n    bitrateManager\n  ); // G\n\n  const { log } = getArrayLogger(window, 'videoEvents');\n\n  const hlsjsEventHandlers = getHlsjsEventHandlers({\n    streamer,\n    videoElement,\n    instanceKeeper,\n    streamRangeHelper,\n    configuration,\n    applyProperties,\n    updateStreamState,\n    log\n  });\n  const { videoElementEventHandlers, setLifeCycleManager } = hlsjsEventHandlers;\n\n  const playbackLifeCycleManager = getPlaybackLifeCycleManager(\n    updateStreamState,\n    hlsjsEventHandlers.pauseStreamRangeUpdater,\n    getArrayLogger(window, 'lifecycle').log\n  );\n  setLifeCycleManager(playbackLifeCycleManager);\n\n  function cleanup() {\n    textTrackManager.cleanup();\n    playbackLifeCycleManager.cleanup();\n    return hlsjsCleanup(instanceKeeper);\n  }\n\n  const { startPlaybackSession, endPlaybackSession } = playbackLifeCycleManager;\n  const thirdPartyPlayer = instanceKeeper;\n  const render = renderWithoutSource;\n\n  return Promise.resolve({\n    cleanup,\n    render,\n    textTrackManager,\n    audioTrackManager,\n    thirdPartyPlayer,\n    applyProperties,\n    handleSourceChange,\n    startPlaybackSession,\n    endPlaybackSession,\n    videoElementEventHandlers\n  });\n}\n\nconst HlsjsVideoStreamer = createVideoStreamerComponent('HlsjsVideoStreamer', resolveImplementation);\n\nexport default HlsjsVideoStreamer;\n","// @flow\nimport type { PlayMode } from '../types';\nimport type { ShakaPlayer } from './types';\nimport type { StreamRangeHelper } from '../common/types';\n\nconst dawnOfTime = new Date(0);\nconst minimumDvrLength = 100; // seconds\nconst defaultLiveEdgeMargin = 10; // seconds\nconst dvrStartCorrection = 10; // yep, seconds\n\nfunction resolvePlayMode(duration: number, isLive: boolean): PlayMode {\n  if (isLive) {\n    if (duration === Infinity || duration === 0 || duration < minimumDvrLength) {\n      return 'live';\n    } else {\n      return 'livedvr';\n    }\n  } else {\n    return 'ondemand';\n  }\n}\n\nfunction getAbsolutePositions(\n  isLive: boolean,\n  startDateTime: Date,\n  seekRange: { start: number, end: number },\n  position: number\n): { absolutePosition: Date, absoluteStartPosition: Date } {\n  if (isLive) {\n    if (isNaN(startDateTime)) {\n      const absolutePosition = new Date();\n      const absoluteStartPosition = new Date(absolutePosition.getTime() - position * 1000);\n      return {\n        absolutePosition,\n        absoluteStartPosition\n      };\n    } else {\n      return {\n        absolutePosition: new Date(startDateTime.getTime() + (position + seekRange.start) * 1000),\n        absoluteStartPosition: new Date(startDateTime.getTime() + seekRange.start * 1000)\n      };\n    }\n  } else {\n    return {\n      absolutePosition: dawnOfTime,\n      absoluteStartPosition: dawnOfTime\n    };\n  }\n}\n\nconst getStreamRangeHelper = (\n  videoElement: HTMLVideoElement,\n  shakaPlayer: ShakaPlayer,\n  configuration: ?{ liveEdgeMargin?: ?number }\n): StreamRangeHelper => {\n  const liveMargin = (configuration && configuration.liveEdgeMargin) || defaultLiveEdgeMargin;\n\n  function calculateNewState() {\n    const seekRange = shakaPlayer.seekRange();\n    const isLive = shakaPlayer.isLive();\n    const startDateTime = isLive ? shakaPlayer.getPresentationStartTimeAsDate() : new Date();\n    const position = videoElement.currentTime - seekRange.start;\n    const duration =\n      seekRange.end !== 0 || seekRange.start !== 0\n        ? seekRange.end - seekRange.start\n        : videoElement.duration === Infinity || isNaN(videoElement.duration)\n        ? 0\n        : videoElement.duration;\n\n    const playMode = resolvePlayMode(duration, isLive);\n    const isAtLiveEdge = isLive && position > duration - liveMargin;\n\n    const { absolutePosition, absoluteStartPosition } = getAbsolutePositions(\n      isLive,\n      startDateTime,\n      seekRange,\n      position\n    );\n    return {\n      position,\n      duration,\n      playMode,\n      isAtLiveEdge,\n      absolutePosition,\n      absoluteStartPosition\n    };\n  }\n\n  function adjustForDvrStartOffset() {\n    if (videoElement && videoElement.paused && shakaPlayer.isLive()) {\n      const seekableStart = shakaPlayer.seekRange().start || 0;\n      if (seekableStart >= videoElement.currentTime) {\n        videoElement.currentTime = seekableStart + dvrStartCorrection;\n      }\n    }\n  }\n\n  function setPosition(newPosition: number) {\n    if (!(isNaN(newPosition) && newPosition === Infinity)) {\n      videoElement.currentTime = shakaPlayer.seekRange().start + newPosition;\n    }\n  }\n\n  function gotoLive() {\n    if (shakaPlayer.isLive()) {\n      videoElement.currentTime = shakaPlayer.seekRange().end;\n    }\n  }\n\n  return {\n    adjustForDvrStartOffset,\n    calculateNewState,\n    setPosition,\n    gotoLive\n  };\n};\n\nexport default getStreamRangeHelper;\n","// @flow\nimport type { ErrorCode, Severity } from '../types';\nimport shaka from 'shaka-player';\nimport type { ShakaError } from './types';\nimport { PlaybackError } from '../types';\n\nconst errorTechnology = 'shaka';\n\nconst STREAM_ERROR = 'STREAM_ERROR';\nconst STREAM_ERROR_DRM_CLIENT_UNAVAILABLE = 'STREAM_ERROR_DRM_CLIENT_UNAVAILABLE';\nconst STREAM_ERROR_DOWNLOAD = 'STREAM_ERROR_DOWNLOAD';\nconst STREAM_ERROR_DECODE = 'STREAM_ERROR_DECODE';\nconst STREAM_ERROR_DRM_OUTPUT_BLOCKED = 'STREAM_ERROR_DRM_OUTPUT_BLOCKED';\n\nconst errorFromCodeMappings = {\n  '3016': function(shakaError) {\n    if (shakaError.data && shakaError.data[0]) {\n      if (shakaError.data[0] === 3) {\n        return { classification: STREAM_ERROR_DECODE };\n      }\n    }\n    return { classification: STREAM_ERROR };\n  },\n  '4012': { classification: STREAM_ERROR },\n  '6001': { classification: STREAM_ERROR_DRM_CLIENT_UNAVAILABLE },\n  '6002': { classification: STREAM_ERROR_DRM_CLIENT_UNAVAILABLE },\n  '6003': { classification: STREAM_ERROR },\n  '6007': { classification: STREAM_ERROR_DOWNLOAD },\n  '6008': { classification: STREAM_ERROR_DOWNLOAD },\n  '6013': { classification: STREAM_ERROR },\n  '7000': { classification: '' },\n\n  // Error codes starting with the following digits, are grouped together.\n  '1': { classification: STREAM_ERROR_DOWNLOAD },\n  '2': { classification: STREAM_ERROR_DECODE },\n  '3': { classification: STREAM_ERROR_DECODE },\n  '4': { classification: STREAM_ERROR_DECODE },\n  '5': { classification: STREAM_ERROR_DECODE },\n  '6': { classification: STREAM_ERROR_DECODE }\n};\n\nconst defaultError = { classification: STREAM_ERROR };\n\nfunction reverseLookup(numeric: string | number, mappings: { [string]: string }) {\n  return Object.keys(mappings).filter(key => {\n    return mappings[key] === parseInt(numeric, 10);\n  })[0];\n}\n\nfunction buildMessage(shakaError: ShakaError, classification: ErrorCode) {\n  if (shakaError.code === 1001 && shakaError.data[1] != null) {\n    return 'Shaka request failed with status ' + shakaError.data[1] + ' for URL ' + shakaError.data[0];\n  }\n  if (shakaError.code === 1002) {\n    return 'Shaka request could not be performed for URL ' + shakaError.data[0];\n  }\n  if (shakaError.code === 1003) {\n    return 'Shaka request timed out for URL ' + shakaError.data[0];\n  }\n  if (shakaError.message) {\n    return shakaError.message;\n  }\n  if (classification === STREAM_ERROR_DRM_CLIENT_UNAVAILABLE) {\n    return 'Playback of protected content appears to be disabled in the browser.';\n  }\n  if (classification === STREAM_ERROR_DRM_OUTPUT_BLOCKED) {\n    return 'Playback of protected content appears to be disallowed, perhaps due to a non-secure or HDCP-less screen being connected.';\n  }\n  const code = reverseLookup(shakaError.code, shaka.util.Error.Code),\n    category = reverseLookup(shakaError.category, shaka.util.Error.Category);\n  const message = 'Shaka error ' + category + '/' + code + ' reported';\n\n  if (shakaError.data[0]) {\n    if (shakaError.data[0].message) {\n      return message + ': ' + shakaError.data[0].message;\n    } else {\n      return message + ': ' + shakaError.data[0];\n    }\n  } else {\n    return message + ' with no further details.';\n  }\n}\n\nfunction getSeverity(isStarted: boolean, shakaError: ShakaError): Severity {\n  if (shakaError.code === 1001 && shakaError.data) {\n    if (shakaError.data[0] && /\\.ttml|\\.vtt|\\.srt|subtitle/.test(shakaError.data[0])) {\n      // Dirty check for subtitles requests failing. That's not fatal.\n      return 'WARNING';\n    } else if (shakaError.data[1] === 502) {\n      return 'FATAL';\n    }\n  }\n  if (shakaError.code === 4012) {\n    return 'WARNING';\n  }\n  if ((isStarted && shakaError.code < 2000) || shakaError.category === 2) {\n    return 'WARNING';\n  }\n  return 'FATAL';\n}\n\nfunction getFromDeclarativeMapping(shakaError) {\n  if (shakaError.code) {\n    const mapping = errorFromCodeMappings[shakaError.code] || errorFromCodeMappings[Math.floor(shakaError.code / 1000)];\n    if (typeof mapping === 'function') {\n      return mapping(shakaError) || defaultError;\n    } else {\n      return mapping || defaultError;\n    }\n  } else {\n    return defaultError;\n  }\n}\n\nfunction isEmeBlocked(userAgent: ?string, location: ?Location) {\n  return (\n    location &&\n    location.protocol === 'http:' &&\n    location.hostname.indexOf('localhost') !== 0 &&\n    userAgent &&\n    userAgent.indexOf('Edge') < 0 &&\n    userAgent.indexOf('Chrome') > 0\n  );\n}\n\nfunction mapShakaError(isStarted: boolean, shakaError: ShakaError, userAgent?: string, location?: Location) {\n  if (shakaError instanceof PlaybackError) {\n    return shakaError;\n  }\n  const classification = getFromDeclarativeMapping(shakaError).classification;\n  if ((shakaError.message || '').indexOf('MediaSource') >= 0) {\n    return new PlaybackError(\n      'STREAM_ERROR_TECHNOLOGY_UNSUPPORTED',\n      'shaka',\n      'This browser does not support playing MPEG-DASH streams with Shaka Player.',\n      'FATAL',\n      shakaError\n    );\n  } else if (classification) {\n    if (classification === STREAM_ERROR_DRM_CLIENT_UNAVAILABLE && isEmeBlocked(userAgent, location)) {\n      const message = 'DRM playback is blocked in Chrome. Likely reason: This page is not served with HTTPS.';\n      return new PlaybackError(STREAM_ERROR, errorTechnology, message, getSeverity(isStarted, shakaError), shakaError);\n    } else {\n      return new PlaybackError(\n        classification,\n        errorTechnology,\n        buildMessage(shakaError, classification),\n        getSeverity(isStarted, shakaError),\n        shakaError\n      );\n    }\n  } else {\n    return new PlaybackError(\n      STREAM_ERROR,\n      errorTechnology,\n      'Unknown error reported from Shaka Player.',\n      'WARNING',\n      shakaError\n    );\n  }\n}\n\nexport default mapShakaError;\n","// @flow\nimport type { AdvancedPlaybackSource, PlaybackSource, VideoStreamerConfiguration } from '../types';\nimport type { ShakaPlayer, ShakaRequestFilter, ShakaResponseFilter } from './types';\nimport mapShakaError from './shakaErrorMapper';\nimport shaka from 'shaka-player';\nimport normalizeSource from '../common/sourceNormalizer';\n\ntype Props<C: VideoStreamerConfiguration> = {\n  source?: ?PlaybackSource,\n  shakaRequestFilter?: ?ShakaRequestFilter,\n  shakaResponseFilter?: ?ShakaResponseFilter,\n  configuration?: ?C\n};\n\nfunction getEmeAttributes(userAgent, serviceCertificate) {\n  // For now, only deals with Chrome and Android Chrome distinctions.\n  if (/Android(.*)Chrome/.test(userAgent)) {\n    // Lowest level, SW_SECURE_CRYPTO, also for video.\n    return {\n      audioRobustness: 'SW_SECURE_CRYPTO',\n      videoRobustness: 'SW_SECURE_CRYPTO',\n      serviceCertificate: serviceCertificate,\n      _classification: 'Android Chrome 58 and newer'\n    };\n  } else {\n    return {\n      audioRobustness: 'SW_SECURE_CRYPTO',\n      videoRobustness: 'SW_SECURE_DECODE',\n      serviceCertificate: serviceCertificate,\n      _classification: 'Desktop'\n    };\n  }\n}\n\nfunction prepareDrm(\n  shakaPlayer: ShakaPlayer,\n  source: AdvancedPlaybackSource,\n  configuration: ?VideoStreamerConfiguration\n) {\n  const licenseUrl = source.licenseUrl;\n  const serviceCertificate =\n    (source.licenseAcquisitionDetails && source.licenseAcquisitionDetails.widevineServiceCertificateUrl) ||\n    (configuration &&\n      configuration.licenseAcquisition &&\n      configuration.licenseAcquisition.widevine &&\n      configuration.licenseAcquisition.widevine.serviceCertificateUrl);\n  const emeAttributes = getEmeAttributes(navigator.userAgent, serviceCertificate);\n  shakaPlayer.configure({\n    drm: {\n      servers: {\n        'com.widevine.alpha': licenseUrl,\n        'com.microsoft.playready': licenseUrl\n      },\n      advanced: {\n        'com.widevine.alpha': {\n          audioRobustness: emeAttributes.audioRobustness,\n          videoRobustness: emeAttributes.videoRobustness,\n          serverCertificate: emeAttributes.serviceCertificate\n        },\n        'com.microsoft.playready': {\n          videoRobustness: 'SW_SECURE_DECODE',\n          audioRobustness: 'SW_SECURE_CRYPTO'\n        }\n      }\n    }\n  });\n  return Promise.resolve();\n}\n\nfunction prepareFilters(\n  shakaPlayer: ShakaPlayer,\n  shakaRequestFilter: ?ShakaRequestFilter,\n  shakaResponseFilter: ?ShakaResponseFilter\n) {\n  const networkingEngine = shakaPlayer.getNetworkingEngine();\n  if (networkingEngine) {\n    networkingEngine.clearAllRequestFilters();\n    networkingEngine.clearAllResponseFilters();\n    if (shakaRequestFilter) {\n      networkingEngine.registerRequestFilter(shakaRequestFilter);\n    }\n    if (shakaResponseFilter) {\n      networkingEngine.registerResponseFilter(shakaResponseFilter);\n    }\n  }\n  // To be leaved for plugging in: Credentials, request headers, license request headers, manifest modification, manifest corrections.\n  return Promise.resolve();\n}\n\nconst getSourceChangeHandler = (shakaPlayer: ShakaPlayer) => <C: VideoStreamerConfiguration, P: Props<C>>(\n  nextProps: P,\n  prevProps?: P\n): Promise<any> => {\n  const { shakaRequestFilter, shakaResponseFilter } = nextProps;\n  const source = normalizeSource(nextProps.source);\n  if (source) {\n    return prepareFilters(shakaPlayer, shakaRequestFilter, shakaResponseFilter)\n      .then(() => prepareDrm(shakaPlayer, source, nextProps.configuration))\n      .then(() => shakaPlayer.load(source.streamUrl, source.startPosition))\n      .catch(err => {\n        if (err && err.code !== shaka.util.Error.Code.LOAD_INTERRUPTED) {\n          throw mapShakaError(false, err, navigator.userAgent, document.location);\n        }\n      });\n  } else if (prevProps && prevProps.source) {\n    // And no new source.\n    const networkingEngine = shakaPlayer.getNetworkingEngine();\n    networkingEngine.clearAllRequestFilters();\n    networkingEngine.clearAllResponseFilters();\n    return shakaPlayer.unload();\n  } else {\n    return Promise.resolve();\n  }\n};\n\nexport default getSourceChangeHandler;\n","// @flow\nimport type { PlaybackLifeCycle, StreamRangeHelper } from '../common/types';\nimport getBasicVideoEventHandlers from '../BasicVideoStreamer/basicVideoEventHandlers';\nimport type { ShakaPlayer } from './types';\nimport type { PlaybackProps, VideoStreamState } from '../types';\nimport type { BasicVideoEventHandlersProps } from '../BasicVideoStreamer/basicVideoEventHandlers';\nimport mapShakaError from './shakaErrorMapper';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\nconst getShakaEventHandlers = <P: BasicVideoEventHandlersProps>({\n  streamer,\n  videoElement,\n  shakaPlayer,\n  streamRangeHelper,\n  configuration,\n  applyProperties,\n  updateStreamState,\n  log\n}: {\n  streamer: {\n    props: P\n  },\n  videoElement: HTMLVideoElement,\n  shakaPlayer: ShakaPlayer,\n  streamRangeHelper: StreamRangeHelper,\n  configuration: ?{ pauseUpdateInterval?: ?number },\n  applyProperties: PlaybackProps => void,\n  updateStreamState: VideoStreamState => void,\n  log?: string => void\n}) => {\n  const htmlVideoHandlers = getBasicVideoEventHandlers({\n    streamer,\n    videoElement,\n    thirdPartyPlayer: shakaPlayer,\n    streamRangeHelper,\n    configuration,\n    log,\n    applyProperties,\n    updateStreamState\n  });\n\n  const { videoElementEventHandlers, pauseStreamRangeUpdater } = htmlVideoHandlers;\n\n  let lifeCycleManager = {\n    setStage: (_: PlaybackLifeCycle) => {},\n    getStage: () => {}\n  };\n\n  const shakaEventHandlers = {\n    error: ({ detail }: { detail: any }) => {\n      log && log('shaka.error');\n      const playbackError = mapShakaError(\n        lifeCycleManager.getStage() === 'started',\n        detail,\n        navigator.userAgent,\n        document.location\n      );\n      if (streamer.props.onPlaybackError) {\n        streamer.props.onPlaybackError(playbackError);\n      }\n      if (videoElement.error) {\n        updateStreamState({ error: videoElement.error });\n      }\n      if (playbackError.severity === 'FATAL') {\n        lifeCycleManager.setStage('dead');\n        updateStreamState({ playState: 'inactive', isBuffering: false, isSeeking: false });\n      }\n      pauseStreamRangeUpdater.stop();\n    },\n    loading: () => {\n      log && log('shaka.loading');\n      if (lifeCycleManager.getStage() === 'new') {\n        lifeCycleManager.setStage('starting');\n        if (streamer.props.initialPlaybackProps) {\n          const { isMuted, volume } = streamer.props.initialPlaybackProps;\n          applyProperties({ isMuted, volume });\n        }\n        updateStreamState({\n          playState: 'starting',\n          isBuffering: true,\n          volume: videoElement.volume,\n          isMuted: videoElement.muted,\n          isPipAvailable: htmlVideoHandlers.isPipAvailable()\n        });\n      }\n    },\n    streaming: () => {\n      log && log('shaka.streaming');\n      if (streamer.props.initialPlaybackProps) {\n        const { isPaused, bitrateFix, bitrateCap } = streamer.props.initialPlaybackProps;\n        applyProperties({ bitrateFix, bitrateCap });\n        if (isPaused) {\n          videoElement.pause();\n        }\n        if (bitrateFix == null) {\n          updateStreamState({ bitrateFix: null });\n        }\n        if (bitrateCap == null) {\n          updateStreamState({ bitrateCap: null });\n        }\n      } else {\n        updateStreamState({ bitrateFix: null, bitrateCap: null });\n      }\n\n      updateStreamState({\n        isMuted: videoElement.muted,\n        volume: videoElement.volume,\n        ...streamRangeHelper.calculateNewState()\n      });\n    },\n    buffering: ({ buffering }: { buffering: boolean }) => {\n      log && log('shaka.buffering.' + buffering.toString());\n      if (buffering && lifeCycleManager.getStage() === 'started') {\n        updateStreamState({ isBuffering: buffering, playState: 'buffering' });\n      } else {\n        updateStreamState({ isBuffering: buffering });\n      }\n    }\n  };\n\n  function cleanup() {\n    htmlVideoHandlers.cleanup();\n    Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n      shakaPlayer.removeEventListener(name, handler);\n    });\n  }\n\n  function setLifeCycleManager(manager: { setStage: PlaybackLifeCycle => void, getStage: () => PlaybackLifeCycle }) {\n    lifeCycleManager = manager;\n    htmlVideoHandlers.setLifeCycleManager(manager);\n  }\n\n  Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n    shakaPlayer.addEventListener(name, handler);\n  });\n\n  const {\n    onCanPlay,\n    onPlaying,\n    onPause,\n    onSeeking,\n    onSeeked,\n    onDurationChange,\n    onTimeUpdate,\n    onVolumeChange,\n    onProgress,\n    onEnded\n  } = videoElementEventHandlers;\n  return {\n    videoElementEventHandlers: {\n      onCanPlay,\n      onPlaying,\n      onPause,\n      onSeeking,\n      onSeeked,\n      onDurationChange,\n      onTimeUpdate,\n      onVolumeChange,\n      onProgress,\n      onEnded\n    },\n    pauseStreamRangeUpdater,\n    setLifeCycleManager,\n    cleanup\n  };\n};\n\nexport default getShakaEventHandlers;\n","// @flow\nimport type { ShakaPlayer, ShakaTrack } from './types';\nimport type { InitialPlaybackProps, VideoStreamState } from '../types';\nimport { isShallowEqual } from '../../../common';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\ntype PropsWithInitial = {\n  initialPlaybackProps?: InitialPlaybackProps\n};\n\nfunction getBitrateAsBps(track) {\n  return (track && track.bandwidth) || 0;\n}\n\nfunction numericSort(a, b) {\n  return a - b;\n}\n\nfunction bandwidthSort(a: ShakaTrack, b: ShakaTrack) {\n  return a.bandwidth - b.bandwidth;\n}\n\nfunction getBitrateAsKbps(track: ShakaTrack) {\n  return (track && Math.ceil(track.bandwidth / 1000)) || 0;\n}\n\nfunction isActiveTrack(track: ShakaTrack) {\n  return track && track.active && track.type === 'variant';\n}\n\nfunction isUnique(item, index, arr) {\n  return arr.indexOf(item) === index;\n}\n\nconst resetConfiguration = { abr: { enabled: true, restrictions: { maxBandwidth: Infinity } } };\n\nconst getShakaBitrateManager = <P: PropsWithInitial>(\n  streamer: { props: P },\n  shakaPlayer: ShakaPlayer,\n  updateStreamState: VideoStreamState => void,\n  log?: ?(string, any) => void\n) => {\n  let previousBitrates = [];\n\n  function updateBitrateProps() {\n    let variantTracks: Array<ShakaTrack> = shakaPlayer.getVariantTracks();\n    /*const maxBandwidth = shakaPlayer.getConfiguration().abr['restrictions'] && shakaPlayer.getConfiguration().abr['restrictions'].maxBandwidth;\n    if (maxBandwidth && maxBandwidth !== Infinity && variantTracks.length > previousVariantTracks.length) {\n      variantTracks = previousVariantTracks;\n    }// else {\n    // previousVariantTracks = variantTracks;\n    //}*/\n    const currentBitrate = getBitrateAsKbps(variantTracks.filter(isActiveTrack)[0]);\n    const bitrates = variantTracks\n      .map(getBitrateAsKbps)\n      .filter(isUnique)\n      .sort(numericSort);\n\n    const updates: Object = {};\n    if (currentBitrate) {\n      updates.currentBitrate = getBitrateAsKbps(variantTracks.filter(isActiveTrack)[0]);\n    }\n    if (!isShallowEqual(previousBitrates, bitrates)) {\n      previousBitrates = bitrates;\n      updates.bitrates = bitrates;\n    }\n    if (Object.keys(updates).length > 0) {\n      updateStreamState(updates);\n    }\n  }\n\n  function capBitrate(cap: ?number) {\n    if (isNaN(cap) || cap === Infinity || cap == null || cap < 0) {\n      log && log('Resetting restrictions for bitrate.');\n      shakaPlayer.configure(resetConfiguration);\n      updateStreamState({ bitrateCap: null });\n    } else {\n      const lowestBitrate = shakaPlayer\n        .getVariantTracks()\n        .map(getBitrateAsBps)\n        .sort(numericSort)[0];\n      if (lowestBitrate) {\n        const maxBandwidth = Math.max(cap * 1000, lowestBitrate);\n        const restrictions = { maxBandwidth };\n        shakaPlayer.configure({ abr: { enabled: true, restrictions: restrictions } });\n        updateStreamState({ bitrateCap: Math.ceil(maxBandwidth / 1000) });\n        if (restrictions.maxBandwidth === lowestBitrate) {\n          log && log('Applying restrictions for bitrate, but aligning to lowest available bitrate.', restrictions);\n        } else {\n          log && log('Applying restrictions for bitrate.', restrictions);\n        }\n      } else {\n        log &&\n          log(\n            'Bitrate range not found. Not safe to applying restrictions for bitrate.',\n            shakaPlayer.getVariantTracks()\n          );\n      }\n    }\n  }\n\n  function fixBitrate(bitrate: ?(number | 'max' | 'min')) {\n    if (typeof bitrate === 'string') {\n      try {\n        const sortedTracks = shakaPlayer\n          .getVariantTracks()\n          .slice(0)\n          .sort(bandwidthSort);\n        const desiredVariantTrack =\n          bitrate === 'min' ? sortedTracks[0] : bitrate === 'max' ? sortedTracks[sortedTracks.length - 1] : null;\n        if (desiredVariantTrack) {\n          shakaPlayer.configure({ abr: { enabled: false, restrictions: { maxBandwidth: Infinity } } });\n          shakaPlayer.selectVariantTrack(desiredVariantTrack);\n          updateStreamState({ bitrateFix: getBitrateAsKbps(desiredVariantTrack) });\n        } else {\n          shakaPlayer.configure(resetConfiguration);\n          updateStreamState({ bitrateFix: null });\n          log &&\n            log(\n              'Unknown string specified for bitrate lock. Please use a value of type number if a bitrate specified by kbps is intended.',\n              bitrate\n            );\n        }\n      } catch (e) {\n        shakaPlayer.configure(resetConfiguration);\n        updateStreamState({ bitrateFix: null });\n        log &&\n          log(\n            'Attempting to set ' + bitrate + 'imum bitrate, but no tracks found. A bit too early, maybe?',\n            shakaPlayer.getVariantTracks()\n          );\n      }\n    } else if (isNaN(bitrate) || bitrate == null || bitrate < 0 || !bitrate) {\n      shakaPlayer.configure(resetConfiguration);\n      updateStreamState({ bitrateFix: null });\n      log && log('Resetting bitrate locking.');\n    } else {\n      const matchingTrack = shakaPlayer.getVariantTracks().filter(function(track) {\n        return getBitrateAsKbps(track) === bitrate;\n      })[0];\n      if (matchingTrack) {\n        shakaPlayer.configure({ abr: { enabled: false, restrictions: { maxBandwidth: Infinity } } });\n        shakaPlayer.selectVariantTrack(matchingTrack);\n        updateStreamState({ bitrateFix: getBitrateAsKbps(matchingTrack) });\n        log && log('Locking at bitrate ' + bitrate + '.', matchingTrack);\n      } else {\n        shakaPlayer.configure(resetConfiguration);\n        updateStreamState({ bitrateFix: null });\n        log &&\n          log(\n            'Could not finding matching track for specified lock bitrate ' + bitrate + '.',\n            shakaPlayer.getVariantTracks()\n          );\n      }\n    }\n  }\n\n  const shakaEventHandlers = {\n    loading: () => {\n      previousBitrates = [];\n    },\n    streaming: updateBitrateProps,\n    adaptation: updateBitrateProps,\n    trackschanged: updateBitrateProps\n  };\n\n  Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n    shakaPlayer.addEventListener(name, handler);\n  });\n\n  function cleanup() {\n    Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n      shakaPlayer.removeEventListener(name, handler);\n    });\n  }\n\n  return {\n    cleanup,\n    fixBitrate,\n    capBitrate\n  };\n};\n\nexport default getShakaBitrateManager;\n","//@flow\nimport type { ShakaPlayer, ShakaTrack } from './types';\nimport type { AvailableTrack, PlaybackSource, SourceTrack, VideoStreamState } from '../types';\nimport { emptyTracks } from '../common/playbackLifeCycleManager';\nimport { isShallowEqual } from '../../../common';\nimport type { ManagedTextTrack } from '../BasicVideoStreamer/textTrackManager';\nimport type { TextTrackManager } from '../common/types';\nimport normalizeSource from '../common/sourceNormalizer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\ntype ManagedShakaTextTrack = ManagedTextTrack & {\n  shakaTrack: ?ShakaTrack,\n  shakaLoadPromise?: Promise<?ShakaTrack>\n};\n\nfunction isEqual(a, b) {\n  return a === b || (a == null && b == null ? true : Number.isNaN(a) && Number.isNaN(b));\n}\n\nconst trackPropKeys = ['id', 'language', 'kind', 'label'];\n\nfunction isShakaTrackEqual(a, b) {\n  return (a && b && trackPropKeys.filter(key => isEqual(a[key], b[key])).length === trackPropKeys.length) || (!a && !b);\n}\n\nfunction createSelectableTrack(\n  id: number,\n  origin: 'in-stream' | 'side-loaded',\n  shakaTrack: ShakaTrack\n): AvailableTrack {\n  const kind = shakaTrack.kind === 'subtitle' ? 'subtitles' : shakaTrack.kind || '';\n  return {\n    id,\n    kind,\n    label: shakaTrack.label || '',\n    language: shakaTrack.language || '',\n    origin\n  };\n}\n\nconst supportedContentTypes = ['text/vtt', 'application/ttml+xml'];\n\nfunction isContentTypeSupported(sourceTrack) {\n  const contentType = sourceTrack.contentType;\n  return contentType && supportedContentTypes.filter(ct => contentType.indexOf(ct) === 0).length > 0;\n}\n\nfunction getShakaTextTrackManager(\n  shakaPlayer: ShakaPlayer,\n  updateStreamState: VideoStreamState => void\n): TextTrackManager {\n  let managedTextTracks: Array<ManagedShakaTextTrack> = [];\n  let selectableTextTracks = emptyTracks;\n\n  function getActiveShakaTrack() {\n    return (shakaPlayer.getTextTracks() || []).filter(track => track.active)[0];\n  }\n\n  function update(allProps: boolean) {\n    let currentTextTrack = null;\n    const selectedTrack = shakaPlayer.isTextTrackVisible() ? getActiveShakaTrack() : null;\n    if (selectedTrack) {\n      const managedSelectedTrack = managedTextTracks.filter(\n        managedTrack =>\n          !managedTrack.isBlacklisted &&\n          managedTrack.selectableTrack != null &&\n          isShakaTrackEqual(managedTrack.shakaTrack, selectedTrack)\n      )[0];\n      currentTextTrack = managedSelectedTrack ? managedSelectedTrack.selectableTrack : null;\n    }\n    if (allProps) {\n      const textTracks = managedTextTracks.filter(m => m.selectableTrack).map(m => m.selectableTrack);\n      if (isShallowEqual(textTracks, selectableTextTracks)) {\n        // $FlowFixMe Complaints about null entries, despite filter above.\n        updateStreamState({\n          textTracks: selectableTextTracks,\n          currentTextTrack\n        });\n      } else {\n        selectableTextTracks = textTracks;\n        updateStreamState({\n          textTracks,\n          currentTextTrack\n        });\n      }\n    } else {\n      updateStreamState({\n        currentTextTrack\n      });\n    }\n  }\n\n  function emptyManagedTextTrackList() {\n    managedTextTracks.length = 0;\n    update(true);\n  }\n\n  function ingestAndFilterEarlierAddedTracks(sourceTracks: Array<SourceTrack>) {\n    return sourceTracks.filter(sourceTrack => {\n      const managedTrackMatches = managedTextTracks.filter(\n        managedTextTrack =>\n          managedTextTrack.sourceTrack &&\n          managedTextTrack.sourceTrack.src === sourceTrack.src &&\n          managedTextTrack.shakaTrack\n      );\n      if (managedTrackMatches.length === 0) {\n        return true;\n      } else {\n        const addedTrack = managedTrackMatches[0];\n        const shakaTrack = addedTrack.shakaTrack;\n        if (shakaTrack) {\n          addedTrack.sourceTrack = sourceTrack;\n          addedTrack.isBlacklisted = false;\n          addedTrack.isLoaded = true;\n          if (addedTrack.shakaTrack)\n            addedTrack.selectableTrack = createSelectableTrack(\n              addedTrack.shakaTrack.id,\n              'side-loaded',\n              addedTrack.shakaTrack\n            );\n          addedTrack.error = null;\n          addedTrack.loadPromise = Promise.resolve();\n          return false;\n        }\n        return false;\n      }\n    });\n  }\n\n  function updateManagedTrackListFromAddedTracks(tracksBeingAdded) {\n    const newManagedTracks = tracksBeingAdded.map(trackBeingAdded => {\n      const managedTrack: ManagedShakaTextTrack = {\n        id: null,\n        sourceTrack: trackBeingAdded.sourceTrack,\n        shakaTrack: null,\n        isBlacklisted: false, // When a track is explicitly added, we don't assume or check for duplicates, thus blacklisting should not be relevant.\n        isLoaded: false,\n        error: null,\n        selectableTrack: null,\n        shakaLoadPromise: trackBeingAdded.addPromise.then(\n          shakaTrack => {\n            managedTrack.isLoaded = true;\n            managedTrack.shakaTrack = shakaTrack;\n            managedTrack.selectableTrack = createSelectableTrack(shakaTrack.id, 'side-loaded', shakaTrack);\n            return shakaTrack;\n          },\n          error => {\n            managedTrack.error =\n              error || new Error('Shaka rejected adding a track with the URL ' + trackBeingAdded.sourceTrack.src);\n            managedTrack.isBlacklisted = true;\n            managedTrack.isLoaded = true;\n            return null;\n          }\n        )\n      };\n      return managedTrack;\n    });\n    managedTextTracks = managedTextTracks.concat(newManagedTracks);\n    return Promise.all(newManagedTracks.map(nmt => nmt.shakaLoadPromise));\n  }\n\n  function selectShakaTrack(shakaTrack: ?ShakaTrack) {\n    // setTextTrackVisibility() (and some other internal Shaka methods) is not dealing well with different text tracks having the same language code.\n    // This method needs to complete async tasks (promises?) before we can select the correct track.\n    if (shakaTrack) {\n      shakaPlayer.removeEventListener('texttrackvisibility', shakaEventHandlers.texttrackvisibility);\n      if (!shakaPlayer.isTextTrackVisible()) {\n        shakaPlayer.setTextTrackVisibility(true);\n      }\n      window.setTimeout(() => {\n        // Shaka tracks contain incomplete data and an updated version needs to be looked up:\n        const fullShakaTrack = (shakaPlayer.getTextTracks() || []).filter(updatedTrack => {\n          return isShakaTrackEqual(updatedTrack, shakaTrack);\n        })[0];\n        if (fullShakaTrack) {\n          shakaPlayer.selectTextTrack(fullShakaTrack);\n        } else {\n          shakaTrack && shakaPlayer.selectTextTrack(shakaTrack);\n        }\n        update(false);\n        shakaPlayer.addEventListener('texttrackvisibility', shakaEventHandlers.texttrackvisibility);\n      }, 1);\n    } else {\n      if (shakaPlayer.isTextTrackVisible()) {\n        shakaPlayer.setTextTrackVisibility(false);\n      }\n    }\n  }\n\n  function addTracks(tracks: Array<SourceTrack>) {\n    const supportedTracks = tracks.filter(isContentTypeSupported);\n\n    // We don't want updates to videoModel for each track during load.\n    shakaPlayer.removeEventListener('trackschanged', shakaEventHandlers.trackschanged);\n\n    // If the same source track was added earlier, and is readded, then just refurbish and un-blacklist the entry.\n    const freshTracks = ingestAndFilterEarlierAddedTracks(supportedTracks);\n    return updateManagedTrackListFromAddedTracks(\n      freshTracks.map(sourceTrack => {\n        let contentType = sourceTrack.contentType;\n        const charsetPos = contentType ? contentType.indexOf(';charset') : -1;\n        if (charsetPos > 0) {\n          contentType = contentType && contentType.substr(0, charsetPos);\n        }\n        return {\n          addPromise: shakaPlayer.addTextTrack(\n            sourceTrack.src,\n            sourceTrack.language,\n            sourceTrack.kind,\n            contentType,\n            null,\n            sourceTrack.label\n          ),\n          sourceTrack: sourceTrack\n        };\n      })\n    ).then(() => {\n      // Now we are ready again for other track change events coming from the stream etc.\n      shakaPlayer.addEventListener('trackschanged', shakaEventHandlers.trackschanged);\n      update(true);\n    });\n  }\n\n  function updateFromShakaTextTracks() {\n    const shakaTracks = shakaPlayer.getTextTracks() || [];\n    //logger.debug('trackschanged fired.', shakaTracks);\n    if (shakaTracks.length === 0) {\n      // Don't spend CPU cycles comparing the old and new track list when the new list is empty.\n      /*if (managedTextTracks.length === 0) {\n        logger.debug('No Shaka text tracks reported.');\n      } else {\n        logger.debug('No Shaka text tracks reported. Emptying the list.');\n      }*/\n      emptyManagedTextTrackList();\n    } else {\n      // Keep existing managed tracks untouched. This includes blacklisting.\n      const newManagedTrackList = managedTextTracks.filter(managedTrack => {\n        const equalTracks = shakaTracks.filter(shakaTrack => isShakaTrackEqual(shakaTrack, managedTrack.shakaTrack));\n        return equalTracks.length === 1;\n      });\n\n      const isRemoving = newManagedTrackList.length < managedTextTracks.length;\n      const isAdding = shakaTracks.length > newManagedTrackList.length;\n\n      if (isAdding) {\n        const freshTracks = shakaTracks.filter(shakaTrack => {\n          const equalTracks = newManagedTrackList.filter(managedTrack =>\n            isShakaTrackEqual(shakaTrack, managedTrack.shakaTrack)\n          );\n          return equalTracks.length === 0;\n        });\n        const newManagedTracks = freshTracks.map(shakaTrack => ({\n          sourceTrack: null,\n          shakaTrack: shakaTrack,\n          isBlacklisted: false,\n          selectableTrack: createSelectableTrack(shakaTrack.id, 'in-stream', shakaTrack),\n          isLoaded: true,\n          error: null\n        }));\n        managedTextTracks = newManagedTrackList.concat(newManagedTracks);\n        update(true);\n      } else if (isRemoving) {\n        managedTextTracks = newManagedTrackList;\n        update(true);\n      }\n    }\n  }\n\n  function blacklistExistingSideLoadedTracks() {\n    const selectedTrack = shakaPlayer.isTextTrackVisible() ? getActiveShakaTrack() : null;\n    managedTextTracks\n      .filter(managedTrack => {\n        return managedTrack.sourceTrack != null;\n      })\n      .forEach(managedTrack => {\n        if (managedTrack.selectableTrack) {\n          managedTrack.selectableTrack = null;\n        }\n        if (\n          selectedTrack &&\n          managedTrack.shakaTrack &&\n          managedTrack.shakaTrack.active &&\n          isShakaTrackEqual(selectedTrack, managedTrack.shakaTrack)\n        ) {\n          shakaPlayer.setTextTrackVisibility(false);\n        }\n        managedTrack.isBlacklisted = true;\n      });\n  }\n\n  function handleSourcePropChange(props: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    let newTracks = Array.isArray(props.textTracks) ? props.textTracks : [];\n    const source = normalizeSource(props.source);\n    if (source && source.textTracks) {\n      addTracks(newTracks.concat(source.textTracks));\n    } else {\n      addTracks(newTracks);\n    }\n  }\n\n  function handleTextTracksPropChange(props: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    blacklistExistingSideLoadedTracks();\n    let newTracks = Array.isArray(props.textTracks) ? props.textTracks : [];\n    addTracks(newTracks);\n  }\n\n  function clear() {\n    blacklistExistingSideLoadedTracks();\n  }\n\n  function handleSelectedTextTrackChange(textTrack: ?AvailableTrack) {\n    const managedTrack = textTrack && managedTextTracks.filter(mt => mt.selectableTrack === textTrack)[0];\n    selectShakaTrack(managedTrack && managedTrack.shakaTrack);\n  }\n\n  const shakaEventHandlers = {\n    loading: emptyManagedTextTrackList,\n    trackschanged: updateFromShakaTextTracks,\n    texttrackvisibility: () => update(false)\n  };\n\n  function cleanup() {\n    emptyManagedTextTrackList();\n    Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n      shakaPlayer.removeEventListener(name, handler);\n    });\n  }\n\n  Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n    shakaPlayer.addEventListener(name, handler);\n  });\n\n  return {\n    handleSelectedTextTrackChange,\n    handleTextTracksPropChange,\n    handleSourcePropChange,\n    clear,\n    cleanup\n  };\n}\n\nexport default getShakaTextTrackManager;\n","// @flow\nimport type { AvailableTrack, VideoStreamState } from '../types';\nimport type { ShakaLanguageRole, ShakaPlayer, ShakaTrack } from './types';\nimport type { AudioTrackManager } from '../common/types';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\ntype ManagedAudioTrack = {\n  language: string,\n  role: string,\n  selectableTrack: AvailableTrack\n};\n\nconst createManagedTrack = ({ language, role }: ShakaLanguageRole, index: number): ManagedAudioTrack => {\n  return {\n    selectableTrack: {\n      id: language + role || index,\n      kind: role,\n      label: '',\n      language: language,\n      origin: 'in-stream'\n    },\n    language,\n    role\n  };\n};\n\nconst isTrackMatchingLanguageAndRole = (shakaTrack: ShakaTrack, { language, role }: ShakaLanguageRole) => {\n  return shakaTrack.language === language && (!role || (shakaTrack.roles && shakaTrack.roles.indexOf(role) >= 0));\n};\n\nconst getShakaAudioTrackManager = (\n  shakaPlayer: ShakaPlayer,\n  updateStreamState: VideoStreamState => void\n): AudioTrackManager => {\n  let managedTracks: Array<ManagedAudioTrack> = [];\n\n  function updateCurrentAudioTrack() {\n    const activeShakaTrack = shakaPlayer.getVariantTracks().filter(track => track.active)[0];\n    const currentAudioTrack =\n      activeShakaTrack &&\n      managedTracks.filter(mt => isTrackMatchingLanguageAndRole(activeShakaTrack, mt)).map(mt => mt.selectableTrack)[0];\n    updateStreamState({ currentAudioTrack });\n  }\n\n  function updateAudioTracks() {\n    managedTracks = shakaPlayer.getAudioLanguagesAndRoles().map(createManagedTrack);\n    const audioTracks = managedTracks.map(mt => mt.selectableTrack);\n    updateStreamState({\n      audioTracks\n    });\n    updateCurrentAudioTrack();\n  }\n\n  const shakaEventHandlers = {\n    loading: updateAudioTracks,\n    trackschanged: updateAudioTracks,\n    adaptation: updateCurrentAudioTrack\n  };\n\n  function handleSelectedAudioTrackChange(selectedAudioTrack: ?AvailableTrack) {\n    const managedTrack = managedTracks.filter(mt => mt.selectableTrack === selectedAudioTrack)[0];\n    if (managedTrack) {\n      shakaPlayer.selectAudioLanguage(managedTrack.language, managedTrack.role);\n      updateCurrentAudioTrack();\n    }\n  }\n\n  function handleSourceChange() {\n    managedTracks.length = 0;\n  }\n\n  function cleanup() {\n    Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n      shakaPlayer.removeEventListener(name, handler);\n    });\n  }\n\n  Object.entries(shakaEventHandlers).forEach(([name, handler]) => {\n    shakaPlayer.addEventListener(name, handler);\n  });\n\n  return {\n    cleanup,\n    handleSourceChange,\n    handleSelectedAudioTrackChange\n  };\n};\n\nexport default getShakaAudioTrackManager;\n","// @flow\nimport type { VideoStreamerImplProps } from '../types';\n\nimport createVideoStreamerComponent from '../common/createVideoStreamerComponent';\nimport type { ShakaPlayer, ShakaRequestFilter, ShakaResponseFilter } from './types';\nimport { shakaSetup, shakaCleanup } from './shakaSetup';\nimport getStreamRangeHelper from './shakaStreamRangeHelper';\nimport getSourceChangeHandler from './shakaSourceChangeHandler';\nimport getFilteredStreamStateUpdater from '../common/filteredStreamStateUpdater';\nimport { getPropertyApplier } from '../common/propertyApplier';\nimport type { SimplifiedVideoStreamer, StreamerImplementationParts } from '../common/types';\nimport type { VideoStreamerConfiguration } from '../types';\nimport getPlaybackLifeCycleManager from '../common/playbackLifeCycleManager';\nimport getShakaEventHandlers from './shakaEventHandlers';\nimport { renderWithoutSource } from '../common/renderers';\nimport { getArrayLogger } from '../common/logger';\nimport getShakaBitrateManager from './shakaBitrateManager';\nimport getShakaTextTrackManager from './shakaTextTrackManager';\nimport getShakaAudioTrackManager from './shakaAudioTrackManager';\nimport mapShakaError from './shakaErrorMapper';\n\nexport type ShakaVideoStreamerConfiguration = VideoStreamerConfiguration & {\n  shakaPlayer?: ?{\n    installPolyfills?: boolean,\n    customConfiguration?: any // Actually the config structure that can be passed to shaka.Player::configure.\n  }\n};\n\nexport type ShakaVideoStreamerProps = VideoStreamerImplProps<ShakaVideoStreamerConfiguration> & {\n  shakaRequestFilter?: ?ShakaRequestFilter,\n  shakaResponseFilter?: ?ShakaResponseFilter\n};\n\nfunction resolveImplementation(\n  streamer: SimplifiedVideoStreamer<ShakaVideoStreamerConfiguration, ShakaVideoStreamerProps>,\n  configuration: ?ShakaVideoStreamerConfiguration,\n  videoElement: HTMLVideoElement\n): Promise<StreamerImplementationParts<ShakaVideoStreamerConfiguration, ShakaVideoStreamerProps, ShakaPlayer>> {\n  let shakaPlayer;\n  try {\n    shakaPlayer = shakaSetup(videoElement, configuration);\n  } catch (e) {\n    return Promise.reject(mapShakaError(false, e));\n  }\n\n  const streamRangeHelper = getStreamRangeHelper(videoElement, shakaPlayer, configuration); // S\n  const handleSourceChange = getSourceChangeHandler(shakaPlayer); // S\n  const updateStreamState = getFilteredStreamStateUpdater(streamer); // G\n\n  const textTrackManager = getShakaTextTrackManager(shakaPlayer, updateStreamState);\n  const audioTrackManager = getShakaAudioTrackManager(shakaPlayer, updateStreamState);\n  const bitrateManager = getShakaBitrateManager(\n    streamer,\n    shakaPlayer,\n    updateStreamState,\n    getArrayLogger(window, 'bitrateManager').log\n  );\n\n  const applyProperties = getPropertyApplier(\n    videoElement,\n    streamRangeHelper,\n    textTrackManager,\n    audioTrackManager,\n    bitrateManager\n  ); // G\n\n  const { log } = getArrayLogger(window, 'videoEvents');\n\n  const shakaEventHandlers = getShakaEventHandlers({\n    streamer,\n    videoElement,\n    shakaPlayer,\n    streamRangeHelper,\n    configuration,\n    applyProperties,\n    updateStreamState,\n    log\n  });\n  const { videoElementEventHandlers, setLifeCycleManager } = shakaEventHandlers;\n\n  const playbackLifeCycleManager = getPlaybackLifeCycleManager(\n    updateStreamState,\n    shakaEventHandlers.pauseStreamRangeUpdater,\n    getArrayLogger(window, 'lifecycle').log\n  );\n  setLifeCycleManager(playbackLifeCycleManager);\n\n  function cleanup() {\n    textTrackManager.cleanup();\n    audioTrackManager.cleanup();\n    playbackLifeCycleManager.cleanup();\n    shakaEventHandlers.cleanup();\n    bitrateManager.cleanup();\n    return shakaCleanup(shakaPlayer);\n  }\n\n  const { startPlaybackSession, endPlaybackSession } = playbackLifeCycleManager;\n  const thirdPartyPlayer = shakaPlayer;\n  const render = renderWithoutSource;\n\n  return Promise.resolve({\n    cleanup,\n    render,\n    textTrackManager,\n    audioTrackManager,\n    thirdPartyPlayer,\n    applyProperties,\n    handleSourceChange,\n    startPlaybackSession,\n    endPlaybackSession,\n    videoElementEventHandlers\n  });\n}\n\nconst ShakaVideoStreamer = createVideoStreamerComponent('ShakaVideoStreamer', resolveImplementation);\n\nexport default ShakaVideoStreamer;\n","// @flow\nimport type { ShakaPlayer } from './types';\nimport shaka from 'shaka-player';\nimport type { ShakaVideoStreamerConfiguration } from './ShakaVideoStreamer';\nimport { PlaybackError } from '../types';\n\nexport function shakaSetup(\n  videoElement: HTMLVideoElement,\n  configuration: ?ShakaVideoStreamerConfiguration\n): ShakaPlayer {\n  if (!!window.MediaSource && !!MediaSource.isTypeSupported) {\n    const shakaPlayerConfig = configuration && configuration.shakaPlayer;\n    if (shakaPlayerConfig && shakaPlayerConfig.installPolyfills) {\n      shaka.polyfill.installAll();\n    }\n    const shakaPlayer = new shaka.Player(videoElement);\n    if (shakaPlayerConfig && shakaPlayerConfig.customConfiguration) {\n      shakaPlayer.configure(shakaPlayerConfig.customConfiguration);\n    }\n    return shakaPlayer;\n  } else {\n    throw new PlaybackError(\n      'STREAM_ERROR_TECHNOLOGY_UNSUPPORTED',\n      'shaka',\n      'MPEG-DASH playback with Shaka Player is not supported in this browser.'\n    );\n  }\n}\n\nexport function shakaCleanup(shakaPlayer: ShakaPlayer) {\n  return Promise.resolve(shakaPlayer && shakaPlayer.destroy());\n}\n","// @flow\nimport { baseConfiguration } from './baseConfiguration';\nimport composePlayer from '../playerComposer';\nimport graphics from './default-skin/graphics';\nimport strings from './strings';\n\nconst Replay = composePlayer({\n  name: 'Replay',\n  graphics,\n  strings,\n  configuration: baseConfiguration // Already added as default value.\n});\n\n// This is the component to be consumed in a full React SPA.\nexport default Replay;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Replay from '../../default-player/Replay';\nimport HlsjsVideoStreamer from '../../components/player/VideoStreamer/HlsjsVideoStreamer/HlsjsVideoStreamer';\nimport ShakaVideoStreamer from '../../components/player/VideoStreamer/ShakaVideoStreamer/ShakaVideoStreamer';\nimport CompoundVideoStreamer from '../../components/player/VideoStreamer/CompoundVideoStreamer/CompoundVideoStreamer';\nimport '../../replay-default.css';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"playing-adaptive-streams\"}}>{`Playing adaptive streams`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Adaptive streaming in Replay is supported through third party player integrations, namely several different `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<...VideoStreamer/>`}</MDXTag>{` components included in the Replay package. Two of these integrate the most common and mature open source alternatives, HLS.js and Shaka Player. They correspondingly cover HLS and MPEG-DASH technologies (however the development appears to extend beyond the original target technology). These two components are named `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<HlsjsVideoStreamer/>`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ShakaVideoStreamer/>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Unless DRM encryption is needed for the adaptive streams to be played with Replay, the best strategy is to have all streams in one of the formats (HLS and MPEG-DASH). Unencrypted, either of these can play with the corresponding third party integration in all modern browsers. with the exception of iOS browsers, which only support HLS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If DRM playback must be supported, or if the different streams to be played have different formats, then Replay provides a helper component resolving what `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`VideoStreamer`}</MDXTag>{` that fits the stream. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Examples of the different stream formats use case might be some DASH streams and MP4 files, or perhaps both HLS and DASH streams.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"enabling-playback-for-a-single-adaptive-streaming-technology\"}}>{`Enabling playback for a single adaptive streaming technology`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"hls-with-hlsjs\"}}>{`HLS with HLS.js`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add an import statement for the HLS.js video streamer component:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import { Replay } from 'vimond-replay';\nimport 'vimond-replay/index.css';\nimport HlsjsVideoStreamer from 'vimond-replay/video-streamer/hlsjs';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<HlsjsVideoStreamer/>`}</MDXTag>{` component as the child of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Replay/>`}</MDXTag>{`. This simply includes the HLS.js library through the VideoStreamer wrapping component.`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Replay\\n  source=\\\"public/example-media/adaptive.m3u8\\\"\\n  initialPlaybackProps={{ isPaused: true }}\\n>\\n  <HlsjsVideoStreamer />\\n</Replay>'} __scope={{props: this ? this.props : props,Replay,HlsjsVideoStreamer,ShakaVideoStreamer,CompoundVideoStreamer}}>\n  <Replay\n    source=\"public/example-media/adaptive.m3u8\"\n    initialPlaybackProps={{ isPaused: true }}>\n    <HlsjsVideoStreamer/>\n  </Replay>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`Remember that the HLS.js library is actually playing the stream. Refer to the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/video-dev/hls.js/\"}}>{`project homepage`}</MDXTag>{` for documentation on what's supported, troubleshooting playback, expected behaviour, etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that with this code, Replay's support for progressively downloaded MP4/WebM files is substituted, and such files are not supported.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If specific HLS.js configuration settings need to be set, they can be added like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const replayOptions = {\n  videoStreamer: {\n    hlsjs: {\n      customConfiguration: {\n        capLevelToPlayerSize: true,\n        maxBufferLength: 45\n      }\n    }\n  }\n};\n// Pass this object to Replay as a configuration override:\nconst render = () => (\n  <Replay\n    source=\"public/example-media/adaptive.m3u8\"\n    options={replayOptions}>\n    <HlsjsVideoStreamer/>\n  </Replay>\n);\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"mpeg-dash-with-shaka-player\"}}>{`MPEG-DASH with Shaka Player`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The Shaka Player video streamer component can be inserted after adding this import statement at the end:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import { Replay } from 'vimond-replay';\nimport 'vimond-replay/index.css';\nimport ShakaVideoStreamer from 'vimond-replay/video-streamer/shaka-player';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ShakaVideoStreamer/>`}</MDXTag>{` component as the child of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Replay/>`}</MDXTag>{`. This simply includes the Shaka Player library through the VideoStreamer wrapping component.`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'<Replay\\n  source=\\\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\\\"\\n  initialPlaybackProps={{ isPaused: true }}\\n>\\n  <ShakaVideoStreamer />\\n</Replay>'} __scope={{props: this ? this.props : props,Replay,HlsjsVideoStreamer,ShakaVideoStreamer,CompoundVideoStreamer}}>\n  <Replay\n    source=\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\"\n    initialPlaybackProps={{ isPaused: true }}>\n    <ShakaVideoStreamer/>\n  </Replay>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`Remember that Shaka Player is actually playing the stream. Refer to the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/google/shaka-player/\"}}>{`project homepage`}</MDXTag>{` for documentation on what's supported, troubleshooting playback, expected behaviour, etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that with this code, Replay's support for progressively downloaded MP4/WebM files is substituted, and such files are not supported.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If specific Shaka Player configuration settings need to be set, they can be added like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const replayOptions = {\n  videoStreamer: {\n    shaka: {\n      customConfiguration: {\n        streaming: {\n          bufferingGoal: 120\n        }\n      }\n    }\n  }\n};\n// Pass this object to Replay as a configuration override:\nconst render = () => (\n  <Replay\n    source=\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\"\n    options={replayOptions}>\n    <ShakaVideoStreamer/>\n  </Replay>\n);\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"enabling-playback-for-multiple-streaming-technologies-based-on-stream-technology-resolution\"}}>{`Enabling playback for multiple streaming technologies based on stream technology resolution`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The helper component `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<CompoundVideoStreamer/>`}</MDXTag>{`'s task is to select a compatible video streamer for Replay based on the stream type, and in a special case, also taking the browser into consideration. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For HLS, it inserts `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<HlsjsVideoStreamer/>`}</MDXTag>{`, for MPEG-DASH `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ShakaVideoStreamer/>`}</MDXTag>{`. A progressive video source resolves to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<HtmlVideoStreamer/>`}</MDXTag>{`. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The mentioned special case is the combination of Safari and HLS streams. Safari and the Apple operating systems support HLS natively, and the HTML video element play these streams optimally without any third party library. For this combination, the compound video streamer then selects `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<HtmlVideoStreamer/>`}</MDXTag>{`. It includes support for FairPlay DRM.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The mentioned third party player libraries are quite big, and adds several hundred kilobytes to the script bundle. Because of this, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<CompoundVideoStreamer/>`}</MDXTag>{` uses `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/code-splitting.html#reactlazy\"}}>{`React.lazy`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Dynamic_Imports\"}}>{`dynamic imports`}</MDXTag>{`. It loads only one video streamer and its integrated third party library when needed.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The stream type is resolved based on the source prop. The source prop should then ideally be an object containing the mime type associated with the resource specified by the stream URL. This is an example for HLS:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const hlsSource = {\n  streamUrl: 'public/example-media/adaptive.m3u8',\n  contentType: 'application/x-mpegurl'\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The recognised mime types are as follows:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`MPEG-DASH: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`application/dash+xml`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`HLS: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`application/x-mpegurl`}</MDXTag>{`, alternatively `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`vnd.apple.mpegurl`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Progressive MP4 or WebM: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`video/mp4`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`video/webm`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If the source is only specified as a string containing the URL to the manifest, playlist, or video file, the compound video streamer attempts detecting the stream type based on URL content. If the stream doesn't play as expected, try adding the correct `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contentType`}</MDXTag>{` to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Replay`}</MDXTag>{` source in order to eliminate incorrect stream type detections from the URL, as shown below.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import React from 'react';\nimport { Replay } from 'vimond-replay';\nimport 'vimond-replay/index.css';\nimport CompoundVideoStreamer from 'vimond-replay/video-streamer/compound';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following example contains a source with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contentType`}</MDXTag>{` specifying an HLS stream. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<CompoundVideoStreamer/>`}</MDXTag>{` resolves to inserting the HlsjsVideoStreamer for the specified source, unless this page is viewed in Safari, where HtmlVideoStreamer is selected.`}</MDXTag>\n<Playground __codesandbox={``} __position={2} __code={'<Replay\\n  source={{\\n    streamUrl: \\'public/example-media/adaptive.m3u8\\',\\n    contentType: \\'application/x-mpegurl\\',\\n  }}\\n  initialPlaybackProps={{ isPaused: true }}\\n>\\n  <CompoundVideoStreamer />\\n</Replay>'} __scope={{props: this ? this.props : props,Replay,HlsjsVideoStreamer,ShakaVideoStreamer,CompoundVideoStreamer}}>\n  <Replay\n    source={{\n             streamUrl: 'public/example-media/adaptive.m3u8',\n             contentType: 'application/x-mpegurl'\n           }}\n    initialPlaybackProps={{ isPaused: true }}>\n    <CompoundVideoStreamer/>\n  </Replay>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`The following example selects the ShakaVideoStreamer for the specified source string. The manifest URL contains `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.mpd`}</MDXTag>{`, which makes the compound video streamer guess that this is an MPEG-DASH manifest.`}</MDXTag>\n<Playground __codesandbox={``} __position={3} __code={'<Replay\\n  source=\\\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\\\"\\n  initialPlaybackProps={{ isPaused: true }}\\n>\\n  <CompoundVideoStreamer />\\n</Replay>'} __scope={{props: this ? this.props : props,Replay,HlsjsVideoStreamer,ShakaVideoStreamer,CompoundVideoStreamer}}>\n  <Replay\n    source=\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\"\n    initialPlaybackProps={{ isPaused: true }}>\n    <CompoundVideoStreamer/>\n  </Replay>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`As for individual video streamer components, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<CompoundVideoStreamer/>`}</MDXTag>{` should be inserted as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Replay/>`}</MDXTag>{`'s child element. It renders the resolved video streamer component based on the source prop passed down from Replay.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Configuration for all video streamer components (inserted individually or through the compound video streamer) can be specified in the same override object.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const replayOptions = {\n  videoStreamer: {\n    hlsjs: {\n      customConfiguration: {\n        capLevelToPlayerSize: true,\n        maxBufferLength: 45\n      }\n    },\n    shaka: {\n      customConfiguration: {\n        streaming: {\n          bufferingGoal: 120\n        }\n      }\n    }\n  }\n};\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}