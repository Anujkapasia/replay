{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/AirPlayButton/AirPlayButton.js","webpack:///./src/replay/components/controls/AirPlayButton/AirPlayButton.mdx","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","sanitizedPrefix","classNameArray","i","arguments","length","undefined","push","join","isDefined","item","hydrateClassNames","_ref","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","apply","concat","_toConsumableArray","getBoundingEventCoordinates","evt","element","extractedEvent","domRect","currentTarget","getBoundingClientRect","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","AirPlayButton","_this","props","setProperties","isAirPlayTargetPickerVisible","React","this","isAirPlayAvailable","_this$props","isAirPlayActive","airPlayActiveContent","airPlayInactiveContent","label","react__WEBPACK_IMPORTED_MODULE_0__","_generic_ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_1__","isOn","className","onToggle","handleToggle","toggledOnContent","toggledOffContent","MDXContent","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","ShowCase","SimpleTable","Airplay","Footnote","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_4__","render","_AirPlayButton__WEBPACK_IMPORTED_MODULE_3__","react_feather__WEBPACK_IMPORTED_MODULE_6__","value","console","log","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_7__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_5__","rows","Element","Class name","Generic class name","States","Parent","selectOffClasses","toggleButtonOff","toggleButton","selectOnClasses","toggleButtonOn","ToggleButton","handleClick","onRef","toggleClassName","content","role","aria-pressed","title","onClick","onKeyUp","handleKeyUp","onKeyDown","handleKeyDown","ref","tabIndex","useDefaultClassNaming","convertPropsToState","state","_defineProperty","_assertThisInitialized","setState","style","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","formatContent"],"mappings":"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","file":"static/js/components-controls-air-play-button-air-play-button.66f6e3f4.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ToggleButton from '../../generic/ToggleButton/ToggleButton';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** If true, this button will be rendered. */\n  isAirPlayAvailable?: boolean,\n  /** The current AirPlay state, as reported from a video streamer. */\n  isAirPlayActive?: boolean,\n  /** Intended for the setProperties method passed from the player controller through connectControl(). When the button is clicked, this callback is invoked with an object having an isAirPlayTargetPickerVisible property equal to true. */\n  setProperties?: ({ isAirPlayTargetPickerVisible: true }) => void,\n  /** The button content to be displayed while isAirPlayActive is true. */\n  airPlayActiveContent: React.Node,\n  /** The button content to be displayed while isAirPlayActive is false. */\n  airPlayInactiveContent: React.Node\n};\n\nconst className = 'airplay-button';\n\nclass AirPlayButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['isAirPlayAvailable', 'isAirPlayActive'];\n\n  handleToggle = () => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ isAirPlayTargetPickerVisible: true });\n    }\n  };\n\n  render() {\n    if (this.props.isAirPlayAvailable) {\n      const { isAirPlayActive, airPlayActiveContent, airPlayInactiveContent, label, classNamePrefix } = this.props;\n      return (\n        <ToggleButton\n          classNamePrefix={classNamePrefix}\n          isOn={isAirPlayActive}\n          className={className}\n          label={label}\n          onToggle={this.handleToggle}\n          toggledOnContent={airPlayActiveContent}\n          toggledOffContent={airPlayInactiveContent}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default AirPlayButton;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport AirPlayButton from './AirPlayButton';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport { Airplay } from 'react-feather';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"airplaybutton\"}}>{`AirPlayButton`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar button for invoking Safari's AirPlay device picker, allowing transferring the playback to a different device.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In order for this button to render, the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isAirPlayAvailable`}</MDXTag>{` must have the value `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`. This property is reported from the video streamer based on browser feature detection and AirPlay target devices being available. Currently only Apple Safari (and iOS browsers built in on it) supports AirPlay.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isAirPlayActive`}</MDXTag>{` indicates to the button if picture-in-picture playback is currently active(`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`/`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`false`}</MDXTag>{`). This can be used for indicating the AirPlay mode in the button. Through the callback prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties`}</MDXTag>{` in invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ isAirPlayTargetPickerVisible: true })`}</MDXTag>{` on clicks. Even if this is a toggle button, it cannot be used to hide the target picker. However, any other user gestures will do so.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<ShowCase\\n  render={({ setProperties, isAirPlayTargetPickerVisible }) => (\\n    <AirPlayButton\\n      isAirPlayAvailable={true}\\n      airPlayActiveContent={<Airplay />}\\n      airPlayInactiveContent={<Airplay />}\\n      setProperties={value =>\\n        console.log(\\'setProperties() invoked with\\', value)\\n      }\\n    />\\n  )}\\n/>'} __scope={{props: this ? this.props : props,AirPlayButton,ShowCase,SimpleTable,Airplay,Footnote}}>\n  <ShowCase render={({ setProperties, isAirPlayTargetPickerVisible }) => (\n    <AirPlayButton isAirPlayAvailable={true} airPlayActiveContent={<Airplay/>} airPlayInactiveContent={<Airplay/>} setProperties={value => console.log('setProperties() invoked with', value)} />\n  )}/>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={AirPlayButton} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'airplay-button',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-off, toggled-on',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.airplay-button'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}