{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/QualitySelector/QualitySelector.mdx","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","sanitizedPrefix","classNameArray","i","arguments","length","undefined","push","join","isDefined","item","hydrateClassNames","_ref","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","apply","concat","_toConsumableArray","getBoundingEventCoordinates","evt","element","extractedEvent","domRect","currentTarget","getBoundingClientRect","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","QualitySelector","ShowCase","Settings","SimpleTable","Footnote","bitrates","formatBitrateLabel","bitrate","isPlaying","_docs_mdx_helpers_ShowCase__WEBPACK_IMPORTED_MODULE_4__","render","setProperties","bitrateCap","_QualitySelector__WEBPACK_IMPORTED_MODULE_3__","currentBitrate","autoLabel","toggleContent","react_feather__WEBPACK_IMPORTED_MODULE_5__","selectionStrategy","of","_docs_props_footnote_md__WEBPACK_IMPORTED_MODULE_7__","href","_docs_mdx_helpers_SimpleTable__WEBPACK_IMPORTED_MODULE_6__","rows","Element","Class name","Generic class name","States","Parent","convertPropsToState","state","value","_defineProperty","_assertThisInitialized","setState","style","react__WEBPACK_IMPORTED_MODULE_0__","className","justifyContent","_objectSpread","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","content","formatContent"],"mappings":"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","file":"static/js/components-controls-quality-selector-quality-selector.998556d7.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport QualitySelector from './QualitySelector';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport { Settings } from 'react-feather';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"qualityselector\"}}>{`QualitySelector`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar widget for controlling adaptive streaming quality and strategy.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The quality selector lists the stream's bitrates. It also indicates what bitrate currently playing. According to configuration, selecting one of the listed items, can either fix the bitrate selection to this bitrate, or cap the range for adaptive bitrate selection. Fixing means that the adaptive bitrate selection will be deactivated. Capping does not deactivate it, but means that no higher bitrates than the selected one will be selected adaptively. The selector displays one item for reverting to full adaptive bitrate selection without fixing or capping.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The stream's available bitrates are specified in the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`bitrates`}</MDXTag>{`, and the currently playing or loading bitrate is specified with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentBitrate`}</MDXTag>{`. Bitrates are specified in kbps.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The control is only rendered if there are more than one bitrate reported. The item text will be based on the bitrate numbers, but formatted with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`formatBitrateLabel`}</MDXTag>{` callback prop.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The quality selector uses the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Selector />`}</MDXTag>{` generic component. It can be configured through the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`selectionStrategy`}</MDXTag>{` into the two mentioned modes with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'fix-bitrate'`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'cap-bitrate''`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'fix-bitrate'`}</MDXTag>{`, upon clicking on one selector item representing a track, it invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ bitrateFix: value })`}</MDXTag>{` where value is the bitrate of the clicked selector item. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'cap-bitrate'`}</MDXTag>{`, upon clicking on one selector item representing a track, it invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ bitrateCap: value })`}</MDXTag>{` where value is the bitrate of the clicked selector item.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For the selector item resetting fixed or capped bitrate, the item text must be provided in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`autoLabel`}</MDXTag>{` prop. If this item is selected, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ bitrateFix: Infinity })`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ bitrateCap: Infinity })`}</MDXTag>{` is invoked.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'() => {\\n  const bitrates = [800, 1000, 2500, 3600]\\n  const formatBitrateLabel = (bitrate, isPlaying) =>\\n    bitrate + \\' kbps\\' + (isPlaying ? \\' •\\' : \\'\\')\\n  return (\\n    <ShowCase\\n      height=\\\"160px\\\"\\n      render={({ setProperties, bitrateCap }) => (\\n        <QualitySelector\\n          setProperties={setProperties}\\n          bitrates={bitrates}\\n          currentBitrate={1000}\\n          bitrateCap={bitrateCap}\\n          autoLabel=\\\"Auto quality\\\"\\n          toggleContent={<Settings />}\\n          selectionStrategy=\\\"cap-bitrate\\\"\\n          formatBitrateLabel={formatBitrateLabel}\\n        />\\n      )}\\n    />\\n  )\\n}'} __scope={{props: this ? this.props : props,QualitySelector,ShowCase,Settings,SimpleTable,Footnote}}>\n  {() => {\n    const bitrates = [800, 1000, 2500, 3600];\n    const formatBitrateLabel = (bitrate, isPlaying) => bitrate + ' kbps' + (isPlaying ? ' •' : '');\n    return (\n      <ShowCase height=\"160px\" render={({ setProperties, bitrateCap }) => (\n        <QualitySelector \n          setProperties={setProperties}\n          bitrates={bitrates}\n          currentBitrate={1000}\n          bitrateCap={bitrateCap}\n          autoLabel=\"Auto quality\"\n          toggleContent={<Settings/>}\n          selectionStrategy=\"cap-bitrate\"\n          formatBitrateLabel={formatBitrateLabel}\n        />\n      )}/>\n    );\n  }}\n</Playground>\n<MDXTag name=\"p\" components={components}>{`The example doesn't show the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentBitrate`}</MDXTag>{` adapting to the new setting.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={QualitySelector}/>\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'quality-selector',\n  'Generic class name': 'selector',\n  'States': 'collapsed, expanded',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'selector-toggle',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-on, toggled-off',\n  'Parent': '.quality-selector'\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-toggle'\n},{\n  'Element': 'div',\n  'Class name': 'selector-items',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.quality-selector'\n },{\n  'Element': 'div (0..n)',\n  'Class name': 'selector-item',\n  'Generic class name': '',\n  'States': 'selected',\n  'Parent': '.selector-items'\n},{\n  'Element': 'div (0..n)',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-item'\n }]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}